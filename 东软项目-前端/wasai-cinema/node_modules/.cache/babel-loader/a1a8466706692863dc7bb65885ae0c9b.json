{"ast":null,"code":"import _typeof from \"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// 日期格式化\nexport function parseTime(time, pattern) {\n  if (arguments.length === 0 || !time) {\n    return null;\n  }\n\n  var format = pattern || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date;\n\n  if (_typeof(time) === 'object') {\n    date = time;\n  } else {\n    if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n      time = parseInt(time);\n    } else if (typeof time === 'string') {\n      time = time.replace(new RegExp(/-/gm), '/');\n    }\n\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000;\n    }\n\n    date = new Date(time);\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key]; // Note: getDay() returns 0 on Sunday\n\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n\n    return value || 0;\n  });\n  return time_str;\n}","map":{"version":3,"sources":["E:/DW/wasai-cinema/src/plugins/DateTran.js"],"names":["parseTime","time","pattern","arguments","length","format","date","test","parseInt","replace","RegExp","toString","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","result","key","value"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AACxC,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,CAACH,IAA/B,EAAqC;AACpC,WAAO,IAAP;AACA;;AACD,MAAMI,MAAM,GAAGH,OAAO,IAAI,yBAA1B;AACA,MAAII,IAAJ;;AACA,MAAI,QAAOL,IAAP,MAAgB,QAApB,EAA8B;AAC7BK,IAAAA,IAAI,GAAGL,IAAP;AACA,GAFD,MAEO;AACN,QAAK,OAAOA,IAAP,KAAgB,QAAjB,IAA+B,WAAWM,IAAX,CAAgBN,IAAhB,CAAnC,EAA2D;AAC1DA,MAAAA,IAAI,GAAGO,QAAQ,CAACP,IAAD,CAAf;AACA,KAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACpCA,MAAAA,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,IAAIC,MAAJ,CAAW,KAAX,CAAb,EAAgC,GAAhC,CAAP;AACA;;AACD,QAAK,OAAOT,IAAP,KAAgB,QAAjB,IAA+BA,IAAI,CAACU,QAAL,GAAgBP,MAAhB,KAA2B,EAA9D,EAAmE;AAClEH,MAAAA,IAAI,GAAGA,IAAI,GAAG,IAAd;AACA;;AACDK,IAAAA,IAAI,GAAG,IAAIM,IAAJ,CAASX,IAAT,CAAP;AACA;;AACD,MAAMY,SAAS,GAAG;AACjBC,IAAAA,CAAC,EAAER,IAAI,CAACS,WAAL,EADc;AAEjBC,IAAAA,CAAC,EAAEV,IAAI,CAACW,QAAL,KAAkB,CAFJ;AAGjBC,IAAAA,CAAC,EAAEZ,IAAI,CAACa,OAAL,EAHc;AAIjBC,IAAAA,CAAC,EAAEd,IAAI,CAACe,QAAL,EAJc;AAKjBC,IAAAA,CAAC,EAAEhB,IAAI,CAACiB,UAAL,EALc;AAMjBC,IAAAA,CAAC,EAAElB,IAAI,CAACmB,UAAL,EANc;AAOjBC,IAAAA,CAAC,EAAEpB,IAAI,CAACqB,MAAL;AAPc,GAAlB;AASA,MAAMC,QAAQ,GAAGvB,MAAM,CAACI,OAAP,CAAe,qBAAf,EAAsC,UAACoB,MAAD,EAASC,GAAT,EAAiB;AACvE,QAAIC,KAAK,GAAGlB,SAAS,CAACiB,GAAD,CAArB,CADuE,CAEvE;;AACA,QAAIA,GAAG,KAAK,GAAZ,EAAiB;AAAE,aAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoCC,KAApC,CAAP;AAAmD;;AACtE,QAAIF,MAAM,CAACzB,MAAP,GAAgB,CAAhB,IAAqB2B,KAAK,GAAG,EAAjC,EAAqC;AACpCA,MAAAA,KAAK,GAAG,MAAMA,KAAd;AACA;;AACD,WAAOA,KAAK,IAAI,CAAhB;AACA,GARgB,CAAjB;AASA,SAAOH,QAAP;AACA","sourcesContent":["// 日期格式化\r\nexport function parseTime(time, pattern) {\r\n\tif (arguments.length === 0 || !time) {\r\n\t\treturn null\r\n\t}\r\n\tconst format = pattern || '{y}-{m}-{d} {h}:{i}:{s}'\r\n\tlet date\r\n\tif (typeof time === 'object') {\r\n\t\tdate = time\r\n\t} else {\r\n\t\tif ((typeof time === 'string') && (/^[0-9]+$/.test(time))) {\r\n\t\t\ttime = parseInt(time)\r\n\t\t} else if (typeof time === 'string') {\r\n\t\t\ttime = time.replace(new RegExp(/-/gm), '/');\r\n\t\t}\r\n\t\tif ((typeof time === 'number') && (time.toString().length === 10)) {\r\n\t\t\ttime = time * 1000\r\n\t\t}\r\n\t\tdate = new Date(time)\r\n\t}\r\n\tconst formatObj = {\r\n\t\ty: date.getFullYear(),\r\n\t\tm: date.getMonth() + 1,\r\n\t\td: date.getDate(),\r\n\t\th: date.getHours(),\r\n\t\ti: date.getMinutes(),\r\n\t\ts: date.getSeconds(),\r\n\t\ta: date.getDay()\r\n\t}\r\n\tconst time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n\t\tlet value = formatObj[key]\r\n\t\t// Note: getDay() returns 0 on Sunday\r\n\t\tif (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\r\n\t\tif (result.length > 0 && value < 10) {\r\n\t\t\tvalue = '0' + value\r\n\t\t}\r\n\t\treturn value || 0\r\n\t})\r\n\treturn time_str\r\n}"]},"metadata":{},"sourceType":"module"}