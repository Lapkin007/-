{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _slicedToArray = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar _require = require(\"net\"),\n    isIP = _require.isIP;\n\nvar execa = require(\"execa\");\n\nvar dests = new Set([\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"]);\nvar args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"]\n};\n\nvar parse = function parse(stdout) {\n  var result;\n  (stdout || \"\").trim().split(\"\\n\").some(function (line) {\n    var _ref = line.split(/ +/) || [],\n        _ref2 = _slicedToArray(_ref, 4),\n        target = _ref2[0],\n        gateway = _ref2[1],\n        _ = _ref2[2],\n        iface = _ref2[3];\n\n    if (dests.has(target) && gateway && isIP(gateway)) {\n      result = {\n        gateway: gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nvar promise = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(family) {\n    var _yield$execa, stdout;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return execa(\"netstat\", args[family]);\n\n          case 2:\n            _yield$execa = _context.sent;\n            stdout = _yield$execa.stdout;\n            return _context.abrupt(\"return\", parse(stdout));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function promise(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar sync = function sync(family) {\n  var _execa$sync = execa.sync(\"netstat\", args[family]),\n      stdout = _execa$sync.stdout;\n\n  return parse(stdout);\n};\n\nmodule.exports.v4 = function () {\n  return promise(\"v4\");\n};\n\nmodule.exports.v6 = function () {\n  return promise(\"v6\");\n};\n\nmodule.exports.v4.sync = function () {\n  return sync(\"v4\");\n};\n\nmodule.exports.v6.sync = function () {\n  return sync(\"v6\");\n};","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/default-gateway/freebsd.js"],"names":["require","isIP","execa","dests","Set","args","v4","v6","parse","stdout","result","trim","split","some","line","target","gateway","_","iface","has","interface","Error","promise","family","sync","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,eAAeA,OAAO,CAAC,KAAD,CAAtB;AAAA,IAAOC,IAAP,YAAOA,IAAP;;AACA,IAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMG,KAAK,GAAG,IAAIC,GAAJ,CAAQ,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,IAApC,EAA0C,MAA1C,CAAR,CAAd;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,MAAd,CADO;AAEXC,EAAAA,EAAE,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,OAAd;AAFO,CAAb;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,MAAM,EAAI;AACtB,MAAIC,MAAJ;AAEA,GAACD,MAAM,IAAI,EAAX,EAAeE,IAAf,GAAsBC,KAAtB,CAA4B,IAA5B,EAAkCC,IAAlC,CAAuC,UAAAC,IAAI,EAAI;AAC7C,eAAoCA,IAAI,CAACF,KAAL,CAAW,IAAX,KAAoB,EAAxD;AAAA;AAAA,QAAOG,MAAP;AAAA,QAAeC,OAAf;AAAA,QAAwBC,CAAxB;AAAA,QAA2BC,KAA3B;;AACA,QAAIf,KAAK,CAACgB,GAAN,CAAUJ,MAAV,KAAqBC,OAArB,IAAgCf,IAAI,CAACe,OAAD,CAAxC,EAAmD;AACjDN,MAAAA,MAAM,GAAG;AAACM,QAAAA,OAAO,EAAPA,OAAD;AAAUI,QAAAA,SAAS,EAAGF,KAAK,GAAGA,KAAH,GAAW;AAAtC,OAAT;AACA,aAAO,IAAP;AACD;AACF,GAND;;AAQA,MAAI,CAACR,MAAL,EAAa;AACX,UAAM,IAAIW,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,SAAOX,MAAP;AACD,CAhBD;;AAkBA,IAAMY,OAAO;AAAA,sEAAG,iBAAMC,MAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSrB,KAAK,CAAC,SAAD,EAAYG,IAAI,CAACkB,MAAD,CAAhB,CADd;;AAAA;AAAA;AACPd,YAAAA,MADO,gBACPA,MADO;AAAA,6CAEPD,KAAK,CAACC,MAAD,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPa,OAAO;AAAA;AAAA;AAAA,GAAb;;AAKA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAAD,MAAM,EAAI;AACrB,oBAAiBrB,KAAK,CAACsB,IAAN,CAAW,SAAX,EAAsBnB,IAAI,CAACkB,MAAD,CAA1B,CAAjB;AAAA,MAAOd,MAAP,eAAOA,MAAP;;AACA,SAAOD,KAAK,CAACC,MAAD,CAAZ;AACD,CAHD;;AAKAgB,MAAM,CAACC,OAAP,CAAepB,EAAf,GAAoB;AAAA,SAAMgB,OAAO,CAAC,IAAD,CAAb;AAAA,CAApB;;AACAG,MAAM,CAACC,OAAP,CAAenB,EAAf,GAAoB;AAAA,SAAMe,OAAO,CAAC,IAAD,CAAb;AAAA,CAApB;;AAEAG,MAAM,CAACC,OAAP,CAAepB,EAAf,CAAkBkB,IAAlB,GAAyB;AAAA,SAAMA,IAAI,CAAC,IAAD,CAAV;AAAA,CAAzB;;AACAC,MAAM,CAACC,OAAP,CAAenB,EAAf,CAAkBiB,IAAlB,GAAyB;AAAA,SAAMA,IAAI,CAAC,IAAD,CAAV;AAAA,CAAzB","sourcesContent":["\"use strict\";\n\nconst {isIP} = require(\"net\");\nconst execa = require(\"execa\");\nconst dests = new Set([\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"]);\n\nconst args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"],\n};\n\nconst parse = stdout => {\n  let result;\n\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const [target, gateway, _, iface] = line.split(/ +/) || [];\n    if (dests.has(target) && gateway && isIP(gateway)) {\n      result = {gateway, interface: (iface ? iface : null)};\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(\"netstat\", args[family]);\n  return parse(stdout);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(\"netstat\", args[family]);\n  return parse(stdout);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");\n"]},"metadata":{},"sourceType":"script"}