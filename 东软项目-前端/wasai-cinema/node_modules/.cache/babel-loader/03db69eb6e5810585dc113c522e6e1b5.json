{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  var data = _interopRequireWildcard(require('path'));\n\n  path = function path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _stream() {\n  var data = require('stream');\n\n  _stream = function _stream() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _worker_threads() {\n  var data = require('worker_threads');\n\n  _worker_threads = function _worker_threads() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _mergeStream() {\n  var data = _interopRequireDefault(require('merge-stream'));\n\n  _mergeStream = function _mergeStream() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ExperimentalWorker = /*#__PURE__*/function () {\n  function ExperimentalWorker(options) {\n    var _this = this;\n\n    _classCallCheck(this, ExperimentalWorker);\n\n    _defineProperty(this, '_worker', void 0);\n\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_request', void 0);\n\n    _defineProperty(this, '_retries', void 0);\n\n    _defineProperty(this, '_onProcessEnd', void 0);\n\n    _defineProperty(this, '_onCustomMessage', void 0);\n\n    _defineProperty(this, '_fakeStream', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_exitPromise', void 0);\n\n    _defineProperty(this, '_resolveExitPromise', void 0);\n\n    _defineProperty(this, '_forceExited', void 0);\n\n    this._options = options;\n    this._request = null;\n    this._fakeStream = null;\n    this._stdout = null;\n    this._stderr = null;\n    this._exitPromise = new Promise(function (resolve) {\n      _this._resolveExitPromise = resolve;\n    });\n    this._forceExited = false;\n    this.initialize();\n  }\n\n  _createClass(ExperimentalWorker, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this._worker = new (_worker_threads().Worker)(path().resolve(__dirname, './threadChild.js'), _objectSpread({\n        eval: false,\n        // @ts-expect-error: added in newer versions\n        resourceLimits: this._options.resourceLimits,\n        stderr: true,\n        stdout: true,\n        workerData: this._options.workerData\n      }, this._options.forkOptions));\n\n      if (this._worker.stdout) {\n        if (!this._stdout) {\n          // We need to add a permanent stream to the merged stream to prevent it\n          // from ending when the subprocess stream ends\n          this._stdout = (0, _mergeStream().default)(this._getFakeStream());\n        }\n\n        this._stdout.add(this._worker.stdout);\n      }\n\n      if (this._worker.stderr) {\n        if (!this._stderr) {\n          // We need to add a permanent stream to the merged stream to prevent it\n          // from ending when the subprocess stream ends\n          this._stderr = (0, _mergeStream().default)(this._getFakeStream());\n        }\n\n        this._stderr.add(this._worker.stderr);\n      }\n\n      this._worker.on('message', this._onMessage.bind(this));\n\n      this._worker.on('exit', this._onExit.bind(this));\n\n      this._worker.postMessage([_types.CHILD_MESSAGE_INITIALIZE, false, this._options.workerPath, this._options.setupArgs, String(this._options.workerId + 1) // 0-indexed workerId, 1-indexed JEST_WORKER_ID\n      ]);\n\n      this._retries++; // If we exceeded the amount of retries, we will emulate an error reply\n      // coming from the child. This avoids code duplication related with cleaning\n      // the queue, and scheduling the next call.\n\n      if (this._retries > this._options.maxRetries) {\n        var error = new Error('Call retries were exceeded');\n\n        this._onMessage([_types.PARENT_MESSAGE_CLIENT_ERROR, error.name, error.message, error.stack, {\n          type: 'WorkerError'\n        }]);\n      }\n    }\n  }, {\n    key: \"_shutdown\",\n    value: function _shutdown() {\n      // End the permanent stream so the merged stream end too\n      if (this._fakeStream) {\n        this._fakeStream.end();\n\n        this._fakeStream = null;\n      }\n\n      this._resolveExitPromise();\n    }\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(response) {\n      var error;\n\n      switch (response[0]) {\n        case _types.PARENT_MESSAGE_OK:\n          this._onProcessEnd(null, response[1]);\n\n          break;\n\n        case _types.PARENT_MESSAGE_CLIENT_ERROR:\n          error = response[4];\n\n          if (error != null && _typeof(error) === 'object') {\n            var extra = error; // @ts-expect-error: no index\n\n            var NativeCtor = global[response[1]];\n            var Ctor = typeof NativeCtor === 'function' ? NativeCtor : Error;\n            error = new Ctor(response[2]);\n            error.type = response[1];\n            error.stack = response[3];\n\n            for (var key in extra) {\n              // @ts-expect-error: no index\n              error[key] = extra[key];\n            }\n          }\n\n          this._onProcessEnd(error, null);\n\n          break;\n\n        case _types.PARENT_MESSAGE_SETUP_ERROR:\n          error = new Error('Error when calling setup: ' + response[2]); // @ts-expect-error: adding custom properties to errors.\n\n          error.type = response[1];\n          error.stack = response[3];\n\n          this._onProcessEnd(error, null);\n\n          break;\n\n        case _types.PARENT_MESSAGE_CUSTOM:\n          this._onCustomMessage(response[1]);\n\n          break;\n\n        default:\n          throw new TypeError('Unexpected response from worker: ' + response[0]);\n      }\n    }\n  }, {\n    key: \"_onExit\",\n    value: function _onExit(exitCode) {\n      if (exitCode !== 0 && !this._forceExited) {\n        this.initialize();\n\n        if (this._request) {\n          this._worker.postMessage(this._request);\n        }\n      } else {\n        this._shutdown();\n      }\n    }\n  }, {\n    key: \"waitForExit\",\n    value: function waitForExit() {\n      return this._exitPromise;\n    }\n  }, {\n    key: \"forceExit\",\n    value: function forceExit() {\n      this._forceExited = true;\n\n      this._worker.terminate();\n    }\n  }, {\n    key: \"send\",\n    value: function send(request, onProcessStart, onProcessEnd, onCustomMessage) {\n      var _this2 = this;\n\n      onProcessStart(this);\n\n      this._onProcessEnd = function () {\n        var _onProcessEnd; // Clean the request to avoid sending past requests to workers that fail\n        // while waiting for a new request (timers, unhandled rejections...)\n\n\n        _this2._request = null;\n        var res = (_onProcessEnd = onProcessEnd) === null || _onProcessEnd === void 0 ? void 0 : _onProcessEnd.apply(void 0, arguments); // Clean up the reference so related closures can be garbage collected.\n\n        onProcessEnd = null;\n        return res;\n      };\n\n      this._onCustomMessage = function () {\n        return onCustomMessage.apply(void 0, arguments);\n      };\n\n      this._request = request;\n      this._retries = 0;\n\n      this._worker.postMessage(request);\n    }\n  }, {\n    key: \"getWorkerId\",\n    value: function getWorkerId() {\n      return this._options.workerId;\n    }\n  }, {\n    key: \"getStdout\",\n    value: function getStdout() {\n      return this._stdout;\n    }\n  }, {\n    key: \"getStderr\",\n    value: function getStderr() {\n      return this._stderr;\n    }\n  }, {\n    key: \"_getFakeStream\",\n    value: function _getFakeStream() {\n      if (!this._fakeStream) {\n        this._fakeStream = new (_stream().PassThrough)();\n      }\n\n      return this._fakeStream;\n    }\n  }]);\n\n  return ExperimentalWorker;\n}();\n\nexports.default = ExperimentalWorker;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/jest-worker/build/workers/NodeThreadsWorker.js"],"names":["Object","defineProperty","exports","value","default","path","data","_interopRequireWildcard","require","_stream","_worker_threads","_mergeStream","_interopRequireDefault","_types","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","ExperimentalWorker","options","_options","_request","_fakeStream","_stdout","_stderr","_exitPromise","Promise","resolve","_resolveExitPromise","_forceExited","initialize","_worker","Worker","__dirname","eval","resourceLimits","stderr","stdout","workerData","forkOptions","_getFakeStream","add","on","_onMessage","bind","_onExit","postMessage","CHILD_MESSAGE_INITIALIZE","workerPath","setupArgs","String","workerId","_retries","maxRetries","error","Error","PARENT_MESSAGE_CLIENT_ERROR","name","message","stack","type","end","response","PARENT_MESSAGE_OK","_onProcessEnd","extra","NativeCtor","global","Ctor","PARENT_MESSAGE_SETUP_ERROR","PARENT_MESSAGE_CUSTOM","_onCustomMessage","TypeError","exitCode","_shutdown","terminate","request","onProcessStart","onProcessEnd","onCustomMessage","res","PassThrough"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _stream() {\n  const data = require('stream');\n\n  _stream = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _worker_threads() {\n  const data = require('worker_threads');\n\n  _worker_threads = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _mergeStream() {\n  const data = _interopRequireDefault(require('merge-stream'));\n\n  _mergeStream = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass ExperimentalWorker {\n  constructor(options) {\n    _defineProperty(this, '_worker', void 0);\n\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_request', void 0);\n\n    _defineProperty(this, '_retries', void 0);\n\n    _defineProperty(this, '_onProcessEnd', void 0);\n\n    _defineProperty(this, '_onCustomMessage', void 0);\n\n    _defineProperty(this, '_fakeStream', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_exitPromise', void 0);\n\n    _defineProperty(this, '_resolveExitPromise', void 0);\n\n    _defineProperty(this, '_forceExited', void 0);\n\n    this._options = options;\n    this._request = null;\n    this._fakeStream = null;\n    this._stdout = null;\n    this._stderr = null;\n    this._exitPromise = new Promise(resolve => {\n      this._resolveExitPromise = resolve;\n    });\n    this._forceExited = false;\n    this.initialize();\n  }\n\n  initialize() {\n    this._worker = new (_worker_threads().Worker)(\n      path().resolve(__dirname, './threadChild.js'),\n      {\n        eval: false,\n        // @ts-expect-error: added in newer versions\n        resourceLimits: this._options.resourceLimits,\n        stderr: true,\n        stdout: true,\n        workerData: this._options.workerData,\n        ...this._options.forkOptions\n      }\n    );\n\n    if (this._worker.stdout) {\n      if (!this._stdout) {\n        // We need to add a permanent stream to the merged stream to prevent it\n        // from ending when the subprocess stream ends\n        this._stdout = (0, _mergeStream().default)(this._getFakeStream());\n      }\n\n      this._stdout.add(this._worker.stdout);\n    }\n\n    if (this._worker.stderr) {\n      if (!this._stderr) {\n        // We need to add a permanent stream to the merged stream to prevent it\n        // from ending when the subprocess stream ends\n        this._stderr = (0, _mergeStream().default)(this._getFakeStream());\n      }\n\n      this._stderr.add(this._worker.stderr);\n    }\n\n    this._worker.on('message', this._onMessage.bind(this));\n\n    this._worker.on('exit', this._onExit.bind(this));\n\n    this._worker.postMessage([\n      _types.CHILD_MESSAGE_INITIALIZE,\n      false,\n      this._options.workerPath,\n      this._options.setupArgs,\n      String(this._options.workerId + 1) // 0-indexed workerId, 1-indexed JEST_WORKER_ID\n    ]);\n\n    this._retries++; // If we exceeded the amount of retries, we will emulate an error reply\n    // coming from the child. This avoids code duplication related with cleaning\n    // the queue, and scheduling the next call.\n\n    if (this._retries > this._options.maxRetries) {\n      const error = new Error('Call retries were exceeded');\n\n      this._onMessage([\n        _types.PARENT_MESSAGE_CLIENT_ERROR,\n        error.name,\n        error.message,\n        error.stack,\n        {\n          type: 'WorkerError'\n        }\n      ]);\n    }\n  }\n\n  _shutdown() {\n    // End the permanent stream so the merged stream end too\n    if (this._fakeStream) {\n      this._fakeStream.end();\n\n      this._fakeStream = null;\n    }\n\n    this._resolveExitPromise();\n  }\n\n  _onMessage(response) {\n    let error;\n\n    switch (response[0]) {\n      case _types.PARENT_MESSAGE_OK:\n        this._onProcessEnd(null, response[1]);\n\n        break;\n\n      case _types.PARENT_MESSAGE_CLIENT_ERROR:\n        error = response[4];\n\n        if (error != null && typeof error === 'object') {\n          const extra = error; // @ts-expect-error: no index\n\n          const NativeCtor = global[response[1]];\n          const Ctor = typeof NativeCtor === 'function' ? NativeCtor : Error;\n          error = new Ctor(response[2]);\n          error.type = response[1];\n          error.stack = response[3];\n\n          for (const key in extra) {\n            // @ts-expect-error: no index\n            error[key] = extra[key];\n          }\n        }\n\n        this._onProcessEnd(error, null);\n\n        break;\n\n      case _types.PARENT_MESSAGE_SETUP_ERROR:\n        error = new Error('Error when calling setup: ' + response[2]); // @ts-expect-error: adding custom properties to errors.\n\n        error.type = response[1];\n        error.stack = response[3];\n\n        this._onProcessEnd(error, null);\n\n        break;\n\n      case _types.PARENT_MESSAGE_CUSTOM:\n        this._onCustomMessage(response[1]);\n\n        break;\n\n      default:\n        throw new TypeError('Unexpected response from worker: ' + response[0]);\n    }\n  }\n\n  _onExit(exitCode) {\n    if (exitCode !== 0 && !this._forceExited) {\n      this.initialize();\n\n      if (this._request) {\n        this._worker.postMessage(this._request);\n      }\n    } else {\n      this._shutdown();\n    }\n  }\n\n  waitForExit() {\n    return this._exitPromise;\n  }\n\n  forceExit() {\n    this._forceExited = true;\n\n    this._worker.terminate();\n  }\n\n  send(request, onProcessStart, onProcessEnd, onCustomMessage) {\n    onProcessStart(this);\n\n    this._onProcessEnd = (...args) => {\n      var _onProcessEnd;\n\n      // Clean the request to avoid sending past requests to workers that fail\n      // while waiting for a new request (timers, unhandled rejections...)\n      this._request = null;\n      const res =\n        (_onProcessEnd = onProcessEnd) === null || _onProcessEnd === void 0\n          ? void 0\n          : _onProcessEnd(...args); // Clean up the reference so related closures can be garbage collected.\n\n      onProcessEnd = null;\n      return res;\n    };\n\n    this._onCustomMessage = (...arg) => onCustomMessage(...arg);\n\n    this._request = request;\n    this._retries = 0;\n\n    this._worker.postMessage(request);\n  }\n\n  getWorkerId() {\n    return this._options.workerId;\n  }\n\n  getStdout() {\n    return this._stdout;\n  }\n\n  getStderr() {\n    return this._stderr;\n  }\n\n  _getFakeStream() {\n    if (!this._fakeStream) {\n      this._fakeStream = new (_stream().PassThrough)();\n    }\n\n    return this._fakeStream;\n  }\n}\n\nexports.default = ExperimentalWorker;\n"]},"metadata":{},"sourceType":"script"}