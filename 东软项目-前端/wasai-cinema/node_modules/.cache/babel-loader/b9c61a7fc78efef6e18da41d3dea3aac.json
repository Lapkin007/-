{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar _require = require(\"net\"),\n    isIP = _require.isIP;\n\nvar _require2 = require(\"os\"),\n    networkInterfaces = _require2.networkInterfaces;\n\nvar execa = require(\"execa\");\n\nvar args = {\n  v4: [\"-4\", \"r\"],\n  v6: [\"-6\", \"r\"]\n};\n\nvar parse = function parse(stdout, family) {\n  var result;\n  (stdout || \"\").trim().split(\"\\n\").some(function (line) {\n    var results = /default( via .+?)?( dev .+?)( |$)/.exec(line) || [];\n    var gateway = (results[1] || \"\").substring(5);\n    var iface = (results[2] || \"\").substring(5);\n\n    if (gateway && isIP(gateway)) {\n      // default via 1.2.3.4 dev en0\n      result = {\n        gateway: gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    } else if (iface && !gateway) {\n      // default via dev en0\n      var interfaces = networkInterfaces();\n      var addresses = interfaces[iface];\n      if (!addresses || !addresses.length) return;\n      addresses.some(function (addr) {\n        if (addr.family.substring(2) === family && isIP(addr.address)) {\n          result = {\n            gateway: addr.address,\n            interface: iface ? iface : null\n          };\n          return true;\n        }\n      });\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nvar promise = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(family) {\n    var _yield$execa, stdout;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return execa(\"ip\", args[family]);\n\n          case 2:\n            _yield$execa = _context.sent;\n            stdout = _yield$execa.stdout;\n            return _context.abrupt(\"return\", parse(stdout, family));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function promise(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sync = function sync(family) {\n  var _execa$sync = execa.sync(\"ip\", args[family]),\n      stdout = _execa$sync.stdout;\n\n  return parse(stdout, family);\n};\n\nmodule.exports.v4 = function () {\n  return promise(\"v4\");\n};\n\nmodule.exports.v6 = function () {\n  return promise(\"v6\");\n};\n\nmodule.exports.v4.sync = function () {\n  return sync(\"v4\");\n};\n\nmodule.exports.v6.sync = function () {\n  return sync(\"v6\");\n};","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/default-gateway/linux.js"],"names":["require","isIP","networkInterfaces","execa","args","v4","v6","parse","stdout","family","result","trim","split","some","line","results","exec","gateway","substring","iface","interface","interfaces","addresses","length","addr","address","Error","promise","sync","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {isIP} = require(\"net\");\nconst {networkInterfaces} = require(\"os\");\nconst execa = require(\"execa\");\n\nconst args = {\n  v4: [\"-4\", \"r\"],\n  v6: [\"-6\", \"r\"],\n};\n\nconst parse = (stdout, family) => {\n  let result;\n\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const results = /default( via .+?)?( dev .+?)( |$)/.exec(line) || [];\n    const gateway = (results[1] || \"\").substring(5);\n    const iface = (results[2] || \"\").substring(5);\n    if (gateway && isIP(gateway)) { // default via 1.2.3.4 dev en0\n      result = {gateway, interface: (iface ? iface : null)};\n      return true;\n    } else if (iface && !gateway) { // default via dev en0\n      const interfaces = networkInterfaces();\n      const addresses = interfaces[iface];\n      if (!addresses || !addresses.length) return;\n\n      addresses.some(addr => {\n        if (addr.family.substring(2) === family && isIP(addr.address)) {\n          result = {gateway: addr.address, interface: (iface ? iface : null)};\n          return true;\n        }\n      });\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(\"ip\", args[family]);\n  return parse(stdout, family);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(\"ip\", args[family]);\n  return parse(stdout, family);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");\n"]},"metadata":{},"sourceType":"script"}