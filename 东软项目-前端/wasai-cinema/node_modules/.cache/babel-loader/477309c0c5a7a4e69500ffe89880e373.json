{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar ucs2length_1 = require(\"../../runtime/ucs2length\");\n\nvar error = {\n  message: function message(_ref) {\n    var keyword = _ref.keyword,\n        schemaCode = _ref.schemaCode;\n    var comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n    return (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"must NOT have \", \" than \", \" characters\"])), comp, schemaCode);\n  },\n  params: function params(_ref2) {\n    var schemaCode = _ref2.schemaCode;\n    return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{limit: \", \"}\"])), schemaCode);\n  }\n};\nvar def = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var keyword = cxt.keyword,\n        data = cxt.data,\n        schemaCode = cxt.schemaCode,\n        it = cxt.it;\n    var op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    var len = it.opts.unicode === false ? (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \".length\"])), data) : (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \"(\", \")\"])), (0, util_1.useFunc)(cxt.gen, ucs2length_1.default), data);\n    cxt.fail$data((0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" \", \" \", \"\"])), len, op, schemaCode));\n  }\n};\nexports.default = def;","map":{"version":3,"mappings":";;;;;;;;;;AAEA;;AACA;;AACA;;AAEA,IAAMA,KAAK,GAA2B;AACpCC,SADoC,yBACP;AAAA,QAApBC,OAAoB,QAApBA,OAAoB;AAAA,QAAXC,UAAW,QAAXA,UAAW;AAC3B,QAAMC,IAAI,GAAGF,OAAO,KAAK,WAAZ,GAA0B,MAA1B,GAAmC,OAAhD;AACA,YAAO,gBAAP,8GAA2BE,IAA3B,EAAwCD,UAAxC;AACD,GAJmC;AAKpCE,QAAM,EAAE;AAAA,QAAEF,UAAF,SAAEA,UAAF;AAAA,YAAkB,cAAlB,sFAA8BA,UAA9B;AAAA;AAL4B,CAAtC;AAQA,IAAMG,GAAG,GAA0B;AACjCJ,SAAO,EAAE,CAAC,WAAD,EAAc,WAAd,CADwB;AAEjCK,MAAI,EAAE,QAF2B;AAGjCC,YAAU,EAAE,QAHqB;AAIjCC,OAAK,EAAE,IAJ0B;AAKjCT,OAAK,EAALA,KALiC;AAMjCU,MANiC,gBAM5BC,GAN4B,EAMb;AAClB,QAAOT,OAAP,GAAwCS,GAAxC,CAAOT,OAAP;AAAA,QAAgBU,IAAhB,GAAwCD,GAAxC,CAAgBC,IAAhB;AAAA,QAAsBT,UAAtB,GAAwCQ,GAAxC,CAAsBR,UAAtB;AAAA,QAAkCU,EAAlC,GAAwCF,GAAxC,CAAkCE,EAAlC;AACA,QAAMC,EAAE,GAAGZ,OAAO,KAAK,WAAZ,GAA0Ba,oBAAUC,EAApC,GAAyCD,oBAAUE,EAA9D;AACA,QAAMC,GAAG,GACPL,EAAE,CAACM,IAAH,CAAQC,OAAR,KAAoB,KAApB,IAA4B,cAA5B,oFAAgCR,IAAhC,KAAgD,cAAhD,mFAAoD,oBAAQD,GAAG,CAACU,GAAZ,EAAiBC,oBAAjB,CAApD,EAAoFV,IAApF,CADF;AAEAD,OAAG,CAACY,SAAJ,EAAc,cAAd,uFAAkBL,GAAlB,EAAyBJ,EAAzB,EAA+BX,UAA/B;AACD;AAZgC,CAAnC;AAeAqB,kBAAelB,GAAf","names":["error","message","keyword","schemaCode","comp","params","def","type","schemaType","$data","code","cxt","data","it","op","codegen_1","GT","LT","len","opts","unicode","gen","ucs2length_1","fail$data","exports"],"sourceRoot":"","sources":["../../../lib/vocabularies/validation/limitLength.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}