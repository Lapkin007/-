{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _objectWithoutProperties = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _excluded = [\"poll\"],\n    _excluded2 = [\"target\"];\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/web.url-search-params.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/web.url.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.splice.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.string.ends-with.js\");\n\nrequire(\"core-js/modules/es.json.stringify.js\");\n\nrequire(\"core-js/modules/es.string.search.js\");\n\nrequire(\"core-js/modules/es.object.values.js\");\n\nrequire(\"core-js/modules/es.string.match.js\");\n\nvar os = require(\"os\");\n\nvar path = require(\"path\");\n\nvar url = require(\"url\");\n\nvar util = require(\"util\");\n\nvar fs = require(\"graceful-fs\");\n\nvar ipaddr = require(\"ipaddr.js\");\n\nvar defaultGateway = require(\"default-gateway\");\n\nvar express = require(\"express\");\n\nvar _require = require(\"schema-utils\"),\n    validate = _require.validate;\n\nvar schema = require(\"./options.json\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n\n/** @typedef {import(\"webpack\").Stats} Stats */\n\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n\n/** @typedef {import(\"express\").Request} Request */\n\n/** @typedef {import(\"express\").Response} Response */\n\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n\n/** @typedef {import(\"anymatch\").Matcher} AnymatchMatcher */\n\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n\n/** @typedef {import(\"bonjour\").Bonjour} Bonjour */\n\n/** @typedef {import(\"bonjour\").BonjourOptions} BonjourOptions */\n\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n\n/** @typedef {import(\"net\").Socket} Socket */\n\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: AnymatchMatcher | string[], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: AnymatchMatcher | string[], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArrayItem} proxyConfig\n */\n\n/**\n * @typedef {{ path?: HttpProxyMiddlewareOptionsFilter | undefined, context?: HttpProxyMiddlewareOptionsFilter | undefined } & { bypass?: ByPass } & HttpProxyMiddlewareOptions } ProxyConfigArrayItem\n */\n\n/**\n * @typedef {(ProxyConfigArrayItem | ((req?: Request | undefined, res?: Response | undefined, next?: NextFunction | undefined) => ProxyConfigArrayItem))[]} ProxyConfigArray\n */\n\n/**\n * @typedef {{ [url: string]: string | ProxyConfigArrayItem }} ProxyConfigMap\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArrayItem | ProxyConfigArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nvar Server = /*#__PURE__*/function () {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  function Server() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var compiler = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, Server);\n\n    // TODO: remove this after plugin support is published\n    if (\n    /** @type {Compiler | MultiCompiler} */\n    options.hooks) {\n      util.deprecate(function () {}, \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\", \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\")();\n      var _ref = [compiler, options];\n      var _ref$ = _ref[0];\n      options = _ref$ === void 0 ? {} : _ref$;\n      compiler = _ref[1];\n    }\n\n    validate(\n    /** @type {Schema} */\n    schema, options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\"\n    });\n    this.compiler =\n    /** @type {Compiler | MultiCompiler} */\n    compiler;\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options =\n    /** @type {Configuration} */\n    options;\n    /**\n     * @type {FSWatcher[]}\n     */\n\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n\n    this.listeners = []; // Keep track of websocket proxies for external websocket upgrade.\n\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n\n    this.currentHash = undefined;\n  } // TODO compatibility with webpack v4, remove it after drop\n\n\n  _createClass(Server, [{\n    key: \"addAdditionalEntries\",\n    value:\n    /**\n     * @private\n     * @param {Compiler} compiler\n     */\n    function addAdditionalEntries(compiler) {\n      /**\n       * @type {string[]}\n       */\n      var additionalEntries = [];\n      var isWebTarget = compiler.options.externalsPresets ? compiler.options.externalsPresets.web : [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\", // eslint-disable-next-line no-undefined\n      undefined, null].includes(\n      /** @type {string} */\n      compiler.options.target); // TODO maybe empty empty client\n\n      if (this.options.client && isWebTarget) {\n        var webSocketURLStr = \"\";\n\n        if (this.options.webSocketServer) {\n          var webSocketURL =\n          /** @type {WebSocketURL} */\n\n          /** @type {ClientConfiguration} */\n          this.options.client.webSocketURL;\n          var webSocketServer =\n          /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n          this.options.webSocketServer;\n          var searchParams = new URLSearchParams();\n          /** @type {string} */\n\n          var protocol; // We are proxying dev server and need to specify custom `hostname`\n\n          if (typeof webSocketURL.protocol !== \"undefined\") {\n            protocol = webSocketURL.protocol;\n          } else {\n            protocol =\n            /** @type {ServerConfiguration} */\n            this.options.server.type === \"http\" ? \"ws:\" : \"wss:\";\n          }\n\n          searchParams.set(\"protocol\", protocol);\n\n          if (typeof webSocketURL.username !== \"undefined\") {\n            searchParams.set(\"username\", webSocketURL.username);\n          }\n\n          if (typeof webSocketURL.password !== \"undefined\") {\n            searchParams.set(\"password\", webSocketURL.password);\n          }\n          /** @type {string} */\n\n\n          var hostname; // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n          // TODO show warning about this\n\n          var isSockJSType = webSocketServer.type === \"sockjs\"; // We are proxying dev server and need to specify custom `hostname`\n\n          if (typeof webSocketURL.hostname !== \"undefined\") {\n            hostname = webSocketURL.hostname;\n          } // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n          else if (typeof webSocketServer.options.host !== \"undefined\" && !isSockJSType) {\n            hostname = webSocketServer.options.host;\n          } // The `host` option is specified\n          else if (typeof this.options.host !== \"undefined\") {\n            hostname = this.options.host;\n          } // The `port` option is not specified\n          else {\n            hostname = \"0.0.0.0\";\n          }\n\n          searchParams.set(\"hostname\", hostname);\n          /** @type {number | string} */\n\n          var port; // We are proxying dev server and need to specify custom `port`\n\n          if (typeof webSocketURL.port !== \"undefined\") {\n            port = webSocketURL.port;\n          } // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n          else if (typeof webSocketServer.options.port !== \"undefined\" && !isSockJSType) {\n            port = webSocketServer.options.port;\n          } // The `port` option is specified\n          else if (typeof this.options.port === \"number\") {\n            port = this.options.port;\n          } // The `port` option is specified using `string`\n          else if (typeof this.options.port === \"string\" && this.options.port !== \"auto\") {\n            port = Number(this.options.port);\n          } // The `port` option is not specified or set to `auto`\n          else {\n            port = \"0\";\n          }\n\n          searchParams.set(\"port\", String(port));\n          /** @type {string} */\n\n          var pathname = \"\"; // We are proxying dev server and need to specify custom `pathname`\n\n          if (typeof webSocketURL.pathname !== \"undefined\") {\n            pathname = webSocketURL.pathname;\n          } // Web socket server works on custom `path`\n          else if (typeof webSocketServer.options.prefix !== \"undefined\" || typeof webSocketServer.options.path !== \"undefined\") {\n            pathname = webSocketServer.options.prefix || webSocketServer.options.path;\n          }\n\n          searchParams.set(\"pathname\", pathname);\n          var client =\n          /** @type {ClientConfiguration} */\n          this.options.client;\n\n          if (typeof client.logging !== \"undefined\") {\n            searchParams.set(\"logging\", client.logging);\n          }\n\n          if (typeof client.reconnect !== \"undefined\") {\n            searchParams.set(\"reconnect\", typeof client.reconnect === \"number\" ? String(client.reconnect) : \"10\");\n          }\n\n          webSocketURLStr = searchParams.toString();\n        }\n\n        additionalEntries.push(\"\".concat(require.resolve(\"../client/index.js\"), \"?\").concat(webSocketURLStr));\n      }\n\n      if (this.options.hot === \"only\") {\n        additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n      } else if (this.options.hot) {\n        additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n      }\n\n      var webpack = compiler.webpack || require(\"webpack\"); // use a hook to add entries if available\n\n\n      if (typeof webpack.EntryPlugin !== \"undefined\") {\n        var _iterator = _createForOfIteratorHelper(additionalEntries),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var additionalEntry = _step.value;\n            new webpack.EntryPlugin(compiler.context, additionalEntry, {\n              // eslint-disable-next-line no-undefined\n              name: undefined\n            }).apply(compiler);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } // TODO remove after drop webpack v4 support\n      else {\n        /**\n         * prependEntry Method for webpack 4\n         * @param {any} originalEntry\n         * @param {any} newAdditionalEntries\n         * @returns {any}\n         */\n        var prependEntry = function prependEntry(originalEntry, newAdditionalEntries) {\n          if (typeof originalEntry === \"function\") {\n            return function () {\n              return Promise.resolve(originalEntry()).then(function (entry) {\n                return prependEntry(entry, newAdditionalEntries);\n              });\n            };\n          }\n\n          if (_typeof(originalEntry) === \"object\" && !Array.isArray(originalEntry)) {\n            /** @type {Object<string,string>} */\n            var clone = {};\n            Object.keys(originalEntry).forEach(function (key) {\n              // entry[key] should be a string here\n              var entryDescription = originalEntry[key];\n              clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n            });\n            return clone;\n          } // in this case, entry is a string or an array.\n          // make sure that we do not add duplicates.\n\n          /** @type {any} */\n\n\n          var entriesClone = additionalEntries.slice(0);\n          [].concat(originalEntry).forEach(function (newEntry) {\n            if (!entriesClone.includes(newEntry)) {\n              entriesClone.push(newEntry);\n            }\n          });\n          return entriesClone;\n        };\n\n        compiler.options.entry = prependEntry(compiler.options.entry || \"./src\", additionalEntries);\n        compiler.hooks.entryOption.call(\n        /** @type {string} */\n        compiler.options.context, compiler.options.entry);\n      }\n    }\n    /**\n     * @private\n     * @returns {Compiler[\"options\"]}\n     */\n\n  }, {\n    key: \"getCompilerOptions\",\n    value: function getCompilerOptions() {\n      if (typeof\n      /** @type {MultiCompiler} */\n      this.compiler.compilers !== \"undefined\") {\n        if (\n        /** @type {MultiCompiler} */\n        this.compiler.compilers.length === 1) {\n          return (\n            /** @type {MultiCompiler} */\n            this.compiler.compilers[0].options\n          );\n        } // Configuration with the `devServer` options\n\n\n        var compilerWithDevServer =\n        /** @type {MultiCompiler} */\n        this.compiler.compilers.find(function (config) {\n          return config.options.devServer;\n        });\n\n        if (compilerWithDevServer) {\n          return compilerWithDevServer.options;\n        } // Configuration with `web` preset\n\n\n        var compilerWithWebPreset =\n        /** @type {MultiCompiler} */\n        this.compiler.compilers.find(function (config) {\n          return config.options.externalsPresets && config.options.externalsPresets.web || [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\", // eslint-disable-next-line no-undefined\n          undefined, null].includes(\n          /** @type {string} */\n          config.options.target);\n        });\n\n        if (compilerWithWebPreset) {\n          return compilerWithWebPreset.options;\n        } // Fallback\n\n\n        return (\n          /** @type {MultiCompiler} */\n          this.compiler.compilers[0].options\n        );\n      }\n\n      return (\n        /** @type {Compiler} */\n        this.compiler.options\n      );\n    }\n    /**\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"normalizeOptions\",\n    value: function () {\n      var _normalizeOptions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var options, compilerOptions, compilerWatchOptions, getWatchOptions, getStaticItem, parsedURL, isHTTPs, isSPDY, httpsProperties, _loop, _i, _httpsProperties, _ret, fakeCert, certificateDir, certificatePath, certificateExists, certificate, certificateTtl, certificateStat, now, del, selfsigned, attributes, pems, isWindows, pipePrefix, pipeName, defaultOpenOptions, getOpenItemsFromObject, result, defaultWebSocketServerType, defaultWebSocketServerOptions, webSocketServer;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = this.options;\n                compilerOptions = this.getCompilerOptions(); // TODO remove `{}` after drop webpack v4 support\n\n                compilerWatchOptions = compilerOptions.watchOptions || {};\n                /**\n                 * @param {WatchOptions & { aggregateTimeout?: number, ignored?: AnymatchMatcher | string[], poll?: number | boolean }} watchOptions\n                 * @returns {WatchOptions}\n                 */\n\n                getWatchOptions = function getWatchOptions() {\n                  var watchOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n                  var getPolling = function getPolling() {\n                    if (typeof watchOptions.usePolling !== \"undefined\") {\n                      return watchOptions.usePolling;\n                    }\n\n                    if (typeof watchOptions.poll !== \"undefined\") {\n                      return Boolean(watchOptions.poll);\n                    }\n\n                    if (typeof compilerWatchOptions.poll !== \"undefined\") {\n                      return Boolean(compilerWatchOptions.poll);\n                    }\n\n                    return false;\n                  };\n\n                  var getInterval = function getInterval() {\n                    if (typeof watchOptions.interval !== \"undefined\") {\n                      return watchOptions.interval;\n                    }\n\n                    if (typeof watchOptions.poll === \"number\") {\n                      return watchOptions.poll;\n                    }\n\n                    if (typeof compilerWatchOptions.poll === \"number\") {\n                      return compilerWatchOptions.poll;\n                    }\n                  };\n\n                  var usePolling = getPolling();\n                  var interval = getInterval();\n\n                  var poll = watchOptions.poll,\n                      rest = _objectWithoutProperties(watchOptions, _excluded);\n\n                  return _objectSpread({\n                    ignoreInitial: true,\n                    persistent: true,\n                    followSymlinks: false,\n                    atomic: false,\n                    alwaysStat: true,\n                    ignorePermissionErrors: true,\n                    // Respect options from compiler watchOptions\n                    usePolling: usePolling,\n                    interval: interval,\n                    ignored: watchOptions.ignored\n                  }, rest);\n                };\n                /**\n                 * @param {string | Static | undefined} [optionsForStatic]\n                 * @returns {NormalizedStatic}\n                 */\n\n\n                getStaticItem = function getStaticItem(optionsForStatic) {\n                  var getDefaultStaticOptions = function getDefaultStaticOptions() {\n                    return {\n                      directory: path.join(process.cwd(), \"public\"),\n                      staticOptions: {},\n                      publicPath: [\"/\"],\n                      serveIndex: {\n                        icons: true\n                      },\n                      watch: getWatchOptions()\n                    };\n                  };\n                  /** @type {NormalizedStatic} */\n\n\n                  var item;\n\n                  if (typeof optionsForStatic === \"undefined\") {\n                    item = getDefaultStaticOptions();\n                  } else if (typeof optionsForStatic === \"string\") {\n                    item = _objectSpread(_objectSpread({}, getDefaultStaticOptions()), {}, {\n                      directory: optionsForStatic\n                    });\n                  } else {\n                    var def = getDefaultStaticOptions();\n                    item = {\n                      directory: typeof optionsForStatic.directory !== \"undefined\" ? optionsForStatic.directory : def.directory,\n                      // TODO: do merge in the next major release\n                      staticOptions: typeof optionsForStatic.staticOptions !== \"undefined\" ? optionsForStatic.staticOptions : def.staticOptions,\n                      publicPath: // eslint-disable-next-line no-nested-ternary\n                      typeof optionsForStatic.publicPath !== \"undefined\" ? Array.isArray(optionsForStatic.publicPath) ? optionsForStatic.publicPath : [optionsForStatic.publicPath] : def.publicPath,\n                      // TODO: do merge in the next major release\n                      serveIndex: // eslint-disable-next-line no-nested-ternary\n                      typeof optionsForStatic.serveIndex !== \"undefined\" ? typeof optionsForStatic.serveIndex === \"boolean\" && optionsForStatic.serveIndex ? def.serveIndex : optionsForStatic.serveIndex : def.serveIndex,\n                      watch: // eslint-disable-next-line no-nested-ternary\n                      typeof optionsForStatic.watch !== \"undefined\" ? // eslint-disable-next-line no-nested-ternary\n                      typeof optionsForStatic.watch === \"boolean\" ? optionsForStatic.watch ? def.watch : false : getWatchOptions(optionsForStatic.watch) : def.watch\n                    };\n                  }\n\n                  if (Server.isAbsoluteURL(item.directory)) {\n                    throw new Error(\"Using a URL as static.directory is not supported\");\n                  }\n\n                  return item;\n                };\n\n                if (typeof options.allowedHosts === \"undefined\") {\n                  // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n                  options.allowedHosts = \"auto\";\n                } // We store allowedHosts as array when supplied as string\n                else if (typeof options.allowedHosts === \"string\" && options.allowedHosts !== \"auto\" && options.allowedHosts !== \"all\") {\n                  options.allowedHosts = [options.allowedHosts];\n                } // CLI pass options as array, we should normalize them\n                else if (Array.isArray(options.allowedHosts) && options.allowedHosts.includes(\"all\")) {\n                  options.allowedHosts = \"all\";\n                }\n\n                if (typeof options.bonjour === \"undefined\") {\n                  options.bonjour = false;\n                } else if (typeof options.bonjour === \"boolean\") {\n                  options.bonjour = options.bonjour ? {} : false;\n                }\n\n                if (typeof options.client === \"undefined\" || _typeof(options.client) === \"object\" && options.client !== null) {\n                  if (!options.client) {\n                    options.client = {};\n                  }\n\n                  if (typeof options.client.webSocketURL === \"undefined\") {\n                    options.client.webSocketURL = {};\n                  } else if (typeof options.client.webSocketURL === \"string\") {\n                    parsedURL = new URL(options.client.webSocketURL);\n                    options.client.webSocketURL = {\n                      protocol: parsedURL.protocol,\n                      hostname: parsedURL.hostname,\n                      port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n                      pathname: parsedURL.pathname,\n                      username: parsedURL.username,\n                      password: parsedURL.password\n                    };\n                  } else if (typeof options.client.webSocketURL.port === \"string\") {\n                    options.client.webSocketURL.port = Number(options.client.webSocketURL.port);\n                  } // Enable client overlay by default\n\n\n                  if (typeof options.client.overlay === \"undefined\") {\n                    options.client.overlay = true;\n                  } else if (typeof options.client.overlay !== \"boolean\") {\n                    options.client.overlay = _objectSpread({\n                      errors: true,\n                      warnings: true\n                    }, options.client.overlay);\n                  }\n\n                  if (typeof options.client.reconnect === \"undefined\") {\n                    options.client.reconnect = 10;\n                  } else if (options.client.reconnect === true) {\n                    options.client.reconnect = Infinity;\n                  } else if (options.client.reconnect === false) {\n                    options.client.reconnect = 0;\n                  } // Respect infrastructureLogging.level\n\n\n                  if (typeof options.client.logging === \"undefined\") {\n                    options.client.logging = compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\";\n                  }\n                }\n\n                if (typeof options.compress === \"undefined\") {\n                  options.compress = true;\n                }\n\n                if (typeof options.devMiddleware === \"undefined\") {\n                  options.devMiddleware = {};\n                } // No need to normalize `headers`\n\n\n                if (typeof options.historyApiFallback === \"undefined\") {\n                  options.historyApiFallback = false;\n                } else if (typeof options.historyApiFallback === \"boolean\" && options.historyApiFallback) {\n                  options.historyApiFallback = {};\n                } // No need to normalize `host`\n\n\n                options.hot = typeof options.hot === \"boolean\" || options.hot === \"only\" ? options.hot : true;\n                isHTTPs = Boolean(options.https);\n                isSPDY = Boolean(options.http2);\n\n                if (isHTTPs) {\n                  // TODO: remove in the next major release\n                  util.deprecate(function () {}, \"'https' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTPS\")();\n                }\n\n                if (isSPDY) {\n                  // TODO: remove in the next major release\n                  util.deprecate(function () {}, \"'http2' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTP2\")();\n                }\n\n                options.server = {\n                  type: // eslint-disable-next-line no-nested-ternary\n                  typeof options.server === \"string\" ? options.server : // eslint-disable-next-line no-nested-ternary\n                  typeof (options.server || {}).type === \"string\" ?\n                  /** @type {ServerConfiguration} */\n                  options.server.type || \"http\" : // eslint-disable-next-line no-nested-ternary\n                  isSPDY ? \"spdy\" : isHTTPs ? \"https\" : \"http\",\n                  options: _objectSpread(_objectSpread({},\n                  /** @type {ServerOptions} */\n                  options.https),\n                  /** @type {ServerConfiguration} */\n                  (options.server || {}).options)\n                };\n\n                if (options.server.type === \"spdy\" && typeof\n                /** @type {ServerOptions} */\n                options.server.options.spdy === \"undefined\") {\n                  /** @type {ServerOptions} */\n                  options.server.options.spdy = {\n                    protocols: [\"h2\", \"http/1.1\"]\n                  };\n                }\n\n                if (!(options.server.type === \"https\" || options.server.type === \"spdy\")) {\n                  _context.next = 71;\n                  break;\n                }\n\n                if (typeof\n                /** @type {ServerOptions} */\n                options.server.options.requestCert === \"undefined\") {\n                  /** @type {ServerOptions} */\n                  options.server.options.requestCert = false;\n                }\n\n                httpsProperties =\n                /** @type {Array<keyof ServerOptions>} */\n                [\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"];\n\n                _loop = function _loop() {\n                  var property = _httpsProperties[_i];\n\n                  if (typeof\n                  /** @type {ServerOptions} */\n                  options.server.options[property] === \"undefined\") {\n                    // eslint-disable-next-line no-continue\n                    return \"continue\";\n                  } // @ts-ignore\n\n\n                  if (property === \"cacert\") {\n                    // TODO remove the `cacert` option in favor `ca` in the next major release\n                    util.deprecate(function () {}, \"The 'cacert' option is deprecated. Please use the 'ca' option.\", \"DEP_WEBPACK_DEV_SERVER_CACERT\")();\n                  }\n                  /** @type {any} */\n\n\n                  var value =\n                  /** @type {ServerOptions} */\n                  options.server.options[property];\n                  /**\n                   * @param {string | Buffer | undefined} item\n                   * @returns {string | Buffer | undefined}\n                   */\n\n                  var readFile = function readFile(item) {\n                    if (Buffer.isBuffer(item) || _typeof(item) === \"object\" && item !== null && !Array.isArray(item)) {\n                      return item;\n                    }\n\n                    if (item) {\n                      var stats = null;\n\n                      try {\n                        stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n                      } catch (error) {// Ignore error\n                      } // It is file\n\n\n                      return stats ? fs.readFileSync(item) : item;\n                    }\n                  };\n                  /** @type {any} */\n\n\n                  options.server.options[property] = Array.isArray(value) ? value.map(function (item) {\n                    return readFile(item);\n                  }) : readFile(value);\n                };\n\n                _i = 0, _httpsProperties = httpsProperties;\n\n              case 23:\n                if (!(_i < _httpsProperties.length)) {\n                  _context.next = 30;\n                  break;\n                }\n\n                _ret = _loop();\n\n                if (!(_ret === \"continue\")) {\n                  _context.next = 27;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 27);\n\n              case 27:\n                _i++;\n                _context.next = 23;\n                break;\n\n              case 30:\n                if (!(!\n                /** @type {ServerOptions} */\n                options.server.options.key ||\n                /** @type {ServerOptions} */\n                (!options.server.options).cert)) {\n                  _context.next = 68;\n                  break;\n                }\n\n                certificateDir = Server.findCacheDir();\n                certificatePath = path.join(certificateDir, \"server.pem\");\n                _context.prev = 33;\n                _context.next = 36;\n                return fs.promises.stat(certificatePath);\n\n              case 36:\n                certificate = _context.sent;\n                certificateExists = certificate.isFile();\n                _context.next = 43;\n                break;\n\n              case 40:\n                _context.prev = 40;\n                _context.t0 = _context[\"catch\"](33);\n                certificateExists = false;\n\n              case 43:\n                if (!certificateExists) {\n                  _context.next = 55;\n                  break;\n                }\n\n                certificateTtl = 1000 * 60 * 60 * 24;\n                _context.next = 47;\n                return fs.promises.stat(certificatePath);\n\n              case 47:\n                certificateStat = _context.sent;\n                now = Number(new Date()); // cert is more than 30 days old, kill it with fire\n\n                if (!((now - Number(certificateStat.ctime)) / certificateTtl > 30)) {\n                  _context.next = 55;\n                  break;\n                }\n\n                del = require(\"del\");\n                this.logger.info(\"SSL certificate is more than 30 days old. Removing...\");\n                _context.next = 54;\n                return del([certificatePath], {\n                  force: true\n                });\n\n              case 54:\n                certificateExists = false;\n\n              case 55:\n                if (certificateExists) {\n                  _context.next = 64;\n                  break;\n                }\n\n                this.logger.info(\"Generating SSL certificate...\"); // @ts-ignore\n\n                selfsigned = require(\"selfsigned\");\n                attributes = [{\n                  name: \"commonName\",\n                  value: \"localhost\"\n                }];\n                pems = selfsigned.generate(attributes, {\n                  algorithm: \"sha256\",\n                  days: 30,\n                  keySize: 2048,\n                  extensions: [{\n                    name: \"basicConstraints\",\n                    cA: true\n                  }, {\n                    name: \"keyUsage\",\n                    keyCertSign: true,\n                    digitalSignature: true,\n                    nonRepudiation: true,\n                    keyEncipherment: true,\n                    dataEncipherment: true\n                  }, {\n                    name: \"extKeyUsage\",\n                    serverAuth: true,\n                    clientAuth: true,\n                    codeSigning: true,\n                    timeStamping: true\n                  }, {\n                    name: \"subjectAltName\",\n                    altNames: [{\n                      // type 2 is DNS\n                      type: 2,\n                      value: \"localhost\"\n                    }, {\n                      type: 2,\n                      value: \"localhost.localdomain\"\n                    }, {\n                      type: 2,\n                      value: \"lvh.me\"\n                    }, {\n                      type: 2,\n                      value: \"*.lvh.me\"\n                    }, {\n                      type: 2,\n                      value: \"[::1]\"\n                    }, {\n                      // type 7 is IP\n                      type: 7,\n                      ip: \"127.0.0.1\"\n                    }, {\n                      type: 7,\n                      ip: \"fe80::1\"\n                    }]\n                  }]\n                });\n                _context.next = 62;\n                return fs.promises.mkdir(certificateDir, {\n                  recursive: true\n                });\n\n              case 62:\n                _context.next = 64;\n                return fs.promises.writeFile(certificatePath, pems.private + pems.cert, {\n                  encoding: \"utf8\"\n                });\n\n              case 64:\n                _context.next = 66;\n                return fs.promises.readFile(certificatePath);\n\n              case 66:\n                fakeCert = _context.sent;\n                this.logger.info(\"SSL certificate: \".concat(certificatePath));\n\n              case 68:\n                if (\n                /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n                options.server.options.cacert) {\n                  if (\n                  /** @type {ServerOptions} */\n                  options.server.options.ca) {\n                    this.logger.warn(\"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\");\n                  } else {\n                    /** @type {ServerOptions} */\n                    options.server.options.ca =\n                    /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n                    options.server.options.cacert;\n                  }\n\n                  delete\n                  /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n                  options.server.options.cacert;\n                }\n                /** @type {ServerOptions} */\n\n\n                options.server.options.key =\n                /** @type {ServerOptions} */\n                options.server.options.key || fakeCert;\n                /** @type {ServerOptions} */\n\n                options.server.options.cert =\n                /** @type {ServerOptions} */\n                options.server.options.cert || fakeCert;\n\n              case 71:\n                if (typeof options.ipc === \"boolean\") {\n                  isWindows = process.platform === \"win32\";\n                  pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n                  pipeName = \"webpack-dev-server.sock\";\n                  options.ipc = path.join(pipePrefix, pipeName);\n                }\n\n                options.liveReload = typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n                options.magicHtml = typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true; // https://github.com/webpack/webpack-dev-server/issues/1990\n\n                defaultOpenOptions = {\n                  wait: false\n                };\n                /**\n                 * @param {any} target\n                 * @returns {NormalizedOpen[]}\n                 */\n                // TODO: remove --open-app in favor of --open-app-name\n\n                getOpenItemsFromObject = function getOpenItemsFromObject(_ref2) {\n                  var target = _ref2.target,\n                      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n                  var normalizedOptions = _objectSpread(_objectSpread({}, defaultOpenOptions), rest);\n\n                  if (typeof normalizedOptions.app === \"string\") {\n                    normalizedOptions.app = {\n                      name: normalizedOptions.app\n                    };\n                  }\n\n                  var normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n                  if (Array.isArray(normalizedTarget)) {\n                    return normalizedTarget.map(function (singleTarget) {\n                      return {\n                        target: singleTarget,\n                        options: normalizedOptions\n                      };\n                    });\n                  }\n\n                  return [{\n                    target: normalizedTarget,\n                    options: normalizedOptions\n                  }];\n                };\n\n                if (typeof options.open === \"undefined\") {\n                  /** @type {NormalizedOpen[]} */\n                  options.open = [];\n                } else if (typeof options.open === \"boolean\") {\n                  /** @type {NormalizedOpen[]} */\n                  options.open = options.open ? [{\n                    target: \"<url>\",\n                    options:\n                    /** @type {OpenOptions} */\n                    defaultOpenOptions\n                  }] : [];\n                } else if (typeof options.open === \"string\") {\n                  /** @type {NormalizedOpen[]} */\n                  options.open = [{\n                    target: options.open,\n                    options: defaultOpenOptions\n                  }];\n                } else if (Array.isArray(options.open)) {\n                  /**\n                   * @type {NormalizedOpen[]}\n                   */\n                  result = [];\n                  options.open.forEach(function (item) {\n                    if (typeof item === \"string\") {\n                      result.push({\n                        target: item,\n                        options: defaultOpenOptions\n                      });\n                      return;\n                    }\n\n                    result.push.apply(result, _toConsumableArray(getOpenItemsFromObject(item)));\n                  });\n                  /** @type {NormalizedOpen[]} */\n\n                  options.open = result;\n                } else {\n                  /** @type {NormalizedOpen[]} */\n                  options.open = _toConsumableArray(getOpenItemsFromObject(options.open));\n                }\n\n                if (options.onAfterSetupMiddleware) {\n                  // TODO: remove in the next major release\n                  util.deprecate(function () {}, \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", \"DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE\")();\n                }\n\n                if (options.onBeforeSetupMiddleware) {\n                  // TODO: remove in the next major release\n                  util.deprecate(function () {}, \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", \"DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE\")();\n                }\n\n                if (typeof options.port === \"string\" && options.port !== \"auto\") {\n                  options.port = Number(options.port);\n                }\n                /**\n                 * Assume a proxy configuration specified as:\n                 * proxy: {\n                 *   'context': { options }\n                 * }\n                 * OR\n                 * proxy: {\n                 *   'context': 'target'\n                 * }\n                 */\n\n\n                if (typeof options.proxy !== \"undefined\") {\n                  // TODO remove in the next major release, only accept `Array`\n                  if (!Array.isArray(options.proxy)) {\n                    if (Object.prototype.hasOwnProperty.call(options.proxy, \"target\") || Object.prototype.hasOwnProperty.call(options.proxy, \"router\")) {\n                      /** @type {ProxyConfigArray} */\n                      options.proxy = [\n                      /** @type {ProxyConfigMap} */\n                      options.proxy];\n                    } else {\n                      /** @type {ProxyConfigArray} */\n                      options.proxy = Object.keys(options.proxy).map(\n                      /**\n                       * @param {string} context\n                       * @returns {HttpProxyMiddlewareOptions}\n                       */\n                      function (context) {\n                        var proxyOptions; // For backwards compatibility reasons.\n\n                        var correctedContext = context.replace(/^\\*$/, \"**\").replace(/\\/\\*$/, \"\");\n\n                        if (typeof\n                        /** @type {ProxyConfigMap} */\n                        options.proxy[context] === \"string\") {\n                          proxyOptions = {\n                            context: correctedContext,\n                            target:\n                            /** @type {ProxyConfigMap} */\n                            options.proxy[context]\n                          };\n                        } else {\n                          proxyOptions = _objectSpread({},\n                          /** @type {ProxyConfigMap} */\n                          options.proxy[context]);\n                          proxyOptions.context = correctedContext;\n                        }\n\n                        return proxyOptions;\n                      });\n                    }\n                  }\n                  /** @type {ProxyConfigArray} */\n\n\n                  options.proxy =\n                  /** @type {ProxyConfigArray} */\n                  options.proxy.map(function (item) {\n                    if (typeof item === \"function\") {\n                      return item;\n                    }\n                    /**\n                     * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n                     * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n                     */\n\n\n                    var getLogLevelForProxy = function getLogLevelForProxy(level) {\n                      if (level === \"none\") {\n                        return \"silent\";\n                      }\n\n                      if (level === \"log\") {\n                        return \"info\";\n                      }\n\n                      if (level === \"verbose\") {\n                        return \"debug\";\n                      }\n\n                      return level;\n                    };\n\n                    if (typeof item.logLevel === \"undefined\") {\n                      item.logLevel = getLogLevelForProxy(compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\");\n                    }\n\n                    if (typeof item.logProvider === \"undefined\") {\n                      item.logProvider = function () {\n                        return _this.logger;\n                      };\n                    }\n\n                    return item;\n                  });\n                }\n\n                if (typeof options.setupExitSignals === \"undefined\") {\n                  options.setupExitSignals = true;\n                }\n\n                if (typeof options.static === \"undefined\") {\n                  options.static = [getStaticItem()];\n                } else if (typeof options.static === \"boolean\") {\n                  options.static = options.static ? [getStaticItem()] : false;\n                } else if (typeof options.static === \"string\") {\n                  options.static = [getStaticItem(options.static)];\n                } else if (Array.isArray(options.static)) {\n                  options.static = options.static.map(function (item) {\n                    return getStaticItem(item);\n                  });\n                } else {\n                  options.static = [getStaticItem(options.static)];\n                }\n\n                if (typeof options.watchFiles === \"string\") {\n                  options.watchFiles = [{\n                    paths: options.watchFiles,\n                    options: getWatchOptions()\n                  }];\n                } else if (_typeof(options.watchFiles) === \"object\" && options.watchFiles !== null && !Array.isArray(options.watchFiles)) {\n                  options.watchFiles = [{\n                    paths: options.watchFiles.paths,\n                    options: getWatchOptions(options.watchFiles.options || {})\n                  }];\n                } else if (Array.isArray(options.watchFiles)) {\n                  options.watchFiles = options.watchFiles.map(function (item) {\n                    if (typeof item === \"string\") {\n                      return {\n                        paths: item,\n                        options: getWatchOptions()\n                      };\n                    }\n\n                    return {\n                      paths: item.paths,\n                      options: getWatchOptions(item.options || {})\n                    };\n                  });\n                } else {\n                  options.watchFiles = [];\n                }\n\n                defaultWebSocketServerType = \"ws\";\n                defaultWebSocketServerOptions = {\n                  path: \"/ws\"\n                };\n\n                if (typeof options.webSocketServer === \"undefined\") {\n                  options.webSocketServer = {\n                    type: defaultWebSocketServerType,\n                    options: defaultWebSocketServerOptions\n                  };\n                } else if (typeof options.webSocketServer === \"boolean\" && !options.webSocketServer) {\n                  options.webSocketServer = false;\n                } else if (typeof options.webSocketServer === \"string\" || typeof options.webSocketServer === \"function\") {\n                  options.webSocketServer = {\n                    type: options.webSocketServer,\n                    options: defaultWebSocketServerOptions\n                  };\n                } else {\n                  options.webSocketServer = {\n                    type:\n                    /** @type {WebSocketServerConfiguration} */\n                    options.webSocketServer.type || defaultWebSocketServerType,\n                    options: _objectSpread(_objectSpread({}, defaultWebSocketServerOptions),\n                    /** @type {WebSocketServerConfiguration} */\n                    options.webSocketServer.options)\n                  };\n                  webSocketServer =\n                  /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n                  options.webSocketServer;\n\n                  if (typeof webSocketServer.options.port === \"string\") {\n                    webSocketServer.options.port = Number(webSocketServer.options.port);\n                  }\n                }\n\n              case 87:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[33, 40]]);\n      }));\n\n      function normalizeOptions() {\n        return _normalizeOptions.apply(this, arguments);\n      }\n\n      return normalizeOptions;\n    }()\n    /**\n     * @private\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getClientTransport\",\n    value: function getClientTransport() {\n      var clientImplementation;\n      var clientImplementationFound = true;\n      var isKnownWebSocketServerImplementation = this.options.webSocketServer && typeof\n      /** @type {WebSocketServerConfiguration} */\n      this.options.webSocketServer.type === \"string\" && ( // @ts-ignore\n      this.options.webSocketServer.type === \"ws\" ||\n      /** @type {WebSocketServerConfiguration} */\n      this.options.webSocketServer.type === \"sockjs\");\n      var clientTransport;\n\n      if (this.options.client) {\n        if (typeof\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketTransport !== \"undefined\") {\n          clientTransport =\n          /** @type {ClientConfiguration} */\n          this.options.client.webSocketTransport;\n        } else if (isKnownWebSocketServerImplementation) {\n          clientTransport =\n          /** @type {WebSocketServerConfiguration} */\n          this.options.webSocketServer.type;\n        } else {\n          clientTransport = \"ws\";\n        }\n      } else {\n        clientTransport = \"ws\";\n      }\n\n      switch (_typeof(clientTransport)) {\n        case \"string\":\n          // could be 'sockjs', 'ws', or a path that should be required\n          if (clientTransport === \"sockjs\") {\n            clientImplementation = require.resolve(\"../client/clients/SockJSClient\");\n          } else if (clientTransport === \"ws\") {\n            clientImplementation = require.resolve(\"../client/clients/WebSocketClient\");\n          } else {\n            try {\n              clientImplementation = require.resolve(clientTransport);\n            } catch (e) {\n              clientImplementationFound = false;\n            }\n          }\n\n          break;\n\n        default:\n          clientImplementationFound = false;\n      }\n\n      if (!clientImplementationFound) {\n        throw new Error(\"\".concat(!isKnownWebSocketServerImplementation ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \" : \"\", \"client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class \"));\n      }\n\n      return (\n        /** @type {string} */\n        clientImplementation\n      );\n    }\n    /**\n     * @private\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getServerTransport\",\n    value: function getServerTransport() {\n      var implementation;\n      var implementationFound = true;\n\n      switch (_typeof(\n      /** @type {WebSocketServerConfiguration} */\n      this.options.webSocketServer.type)) {\n        case \"string\":\n          // Could be 'sockjs', in the future 'ws', or a path that should be required\n          if (\n          /** @type {WebSocketServerConfiguration} */\n          this.options.webSocketServer.type === \"sockjs\") {\n            implementation = require(\"./servers/SockJSServer\");\n          } else if (\n          /** @type {WebSocketServerConfiguration} */\n          this.options.webSocketServer.type === \"ws\") {\n            implementation = require(\"./servers/WebsocketServer\");\n          } else {\n            try {\n              // eslint-disable-next-line import/no-dynamic-require\n              implementation = require(\n              /** @type {WebSocketServerConfiguration} */\n              this.options.webSocketServer.type);\n            } catch (error) {\n              implementationFound = false;\n            }\n          }\n\n          break;\n\n        case \"function\":\n          implementation =\n          /** @type {WebSocketServerConfiguration} */\n          this.options.webSocketServer.type;\n          break;\n\n        default:\n          implementationFound = false;\n      }\n\n      if (!implementationFound) {\n        throw new Error(\"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" + \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" + \"via require.resolve(...), or the class itself which extends BaseServer\");\n      }\n\n      return implementation;\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupProgressPlugin\",\n    value: function setupProgressPlugin() {\n      var _this2 = this;\n\n      var _ref3 =\n      /** @type {MultiCompiler}*/\n      this.compiler.compilers ?\n      /** @type {MultiCompiler}*/\n      this.compiler.compilers[0].webpack :\n      /** @type {Compiler}*/\n      this.compiler.webpack || // TODO remove me after drop webpack v4\n      require(\"webpack\"),\n          ProgressPlugin = _ref3.ProgressPlugin;\n\n      new ProgressPlugin(\n      /**\n       * @param {number} percent\n       * @param {string} msg\n       * @param {string} addInfo\n       * @param {string} pluginName\n       */\n      function (percent, msg, addInfo, pluginName) {\n        percent = Math.floor(percent * 100);\n\n        if (percent === 100) {\n          msg = \"Compilation completed\";\n        }\n\n        if (addInfo) {\n          msg = \"\".concat(msg, \" (\").concat(addInfo, \")\");\n        }\n\n        if (_this2.webSocketServer) {\n          _this2.sendMessage(_this2.webSocketServer.clients, \"progress-update\", {\n            percent: percent,\n            msg: msg,\n            pluginName: pluginName\n          });\n        }\n\n        if (_this2.server) {\n          _this2.server.emit(\"progress-update\", {\n            percent: percent,\n            msg: msg,\n            pluginName: pluginName\n          });\n        }\n      }).apply(this.compiler);\n    }\n    /**\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        var compilers, signals, needForceShutdown;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.options.webSocketServer) {\n                  compilers =\n                  /** @type {MultiCompiler} */\n                  this.compiler.compilers || [this.compiler];\n                  compilers.forEach(function (compiler) {\n                    _this3.addAdditionalEntries(compiler);\n\n                    var webpack = compiler.webpack || require(\"webpack\");\n\n                    new webpack.ProvidePlugin({\n                      __webpack_dev_server_client__: _this3.getClientTransport()\n                    }).apply(compiler); // TODO remove after drop webpack v4 support\n\n                    compiler.options.plugins = compiler.options.plugins || [];\n\n                    if (_this3.options.hot) {\n                      var HMRPluginExists = compiler.options.plugins.find(function (p) {\n                        return p.constructor === webpack.HotModuleReplacementPlugin;\n                      });\n\n                      if (HMRPluginExists) {\n                        _this3.logger.warn(\"\\\"hot: true\\\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.\");\n                      } else {\n                        // Apply the HMR plugin\n                        var plugin = new webpack.HotModuleReplacementPlugin();\n                        plugin.apply(compiler);\n                      }\n                    }\n                  });\n\n                  if (this.options.client &&\n                  /** @type {ClientConfiguration} */\n                  this.options.client.progress) {\n                    this.setupProgressPlugin();\n                  }\n                }\n\n                this.setupHooks();\n                this.setupApp();\n                this.setupHostHeaderCheck();\n                this.setupDevMiddleware(); // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n\n                this.setupBuiltInRoutes();\n                this.setupWatchFiles();\n                this.setupWatchStaticFiles();\n                this.setupMiddlewares();\n                this.createServer();\n\n                if (this.options.setupExitSignals) {\n                  signals = [\"SIGINT\", \"SIGTERM\"];\n                  needForceShutdown = false;\n                  signals.forEach(function (signal) {\n                    var listener = function listener() {\n                      if (needForceShutdown) {\n                        process.exit();\n                      }\n\n                      _this3.logger.info(\"Gracefully shutting down. To force exit, press ^C again. Please wait...\");\n\n                      needForceShutdown = true;\n\n                      _this3.stopCallback(function () {\n                        if (typeof _this3.compiler.close === \"function\") {\n                          _this3.compiler.close(function () {\n                            process.exit();\n                          });\n                        } else {\n                          process.exit();\n                        }\n                      });\n                    };\n\n                    _this3.listeners.push({\n                      name: signal,\n                      listener: listener\n                    });\n\n                    process.on(signal, listener);\n                  });\n                } // Proxy WebSocket without the initial http request\n                // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n\n                /** @type {RequestHandler[]} */\n\n\n                this.webSocketProxies.forEach(function (webSocketProxy) {\n                  /** @type {import(\"http\").Server} */\n                  _this3.server.on(\"upgrade\",\n                  /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n                  webSocketProxy.upgrade);\n                }, this);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupApp\",\n    value: function setupApp() {\n      /** @type {import(\"express\").Application | undefined}*/\n      // eslint-disable-next-line new-cap\n      this.app = new\n      /** @type {any} */\n      express();\n    }\n    /**\n     * @private\n     * @param {Stats | MultiStats} statsObj\n     * @returns {StatsCompilation}\n     */\n\n  }, {\n    key: \"getStats\",\n    value: function getStats(statsObj) {\n      var stats = Server.DEFAULT_STATS;\n      var compilerOptions = this.getCompilerOptions(); // @ts-ignore\n\n      if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n        // @ts-ignore\n        stats.warningsFilter = compilerOptions.stats.warningsFilter;\n      }\n\n      return statsObj.toJson(stats);\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupHooks\",\n    value: function setupHooks() {\n      var _this4 = this;\n\n      this.compiler.hooks.invalid.tap(\"webpack-dev-server\", function () {\n        if (_this4.webSocketServer) {\n          _this4.sendMessage(_this4.webSocketServer.clients, \"invalid\");\n        }\n      });\n      this.compiler.hooks.done.tap(\"webpack-dev-server\",\n      /**\n       * @param {Stats | MultiStats} stats\n       */\n      function (stats) {\n        if (_this4.webSocketServer) {\n          _this4.sendStats(_this4.webSocketServer.clients, _this4.getStats(stats));\n        }\n        /**\n         * @private\n         * @type {Stats | MultiStats}\n         */\n\n\n        _this4.stats = stats;\n      });\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupHostHeaderCheck\",\n    value: function setupHostHeaderCheck() {\n      var _this5 = this;\n\n      /** @type {import(\"express\").Application} */\n      this.app.all(\"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      function (req, res, next) {\n        if (_this5.checkHeader(\n        /** @type {{ [key: string]: string | undefined }} */\n        req.headers, \"host\")) {\n          return next();\n        }\n\n        res.send(\"Invalid Host header\");\n      });\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupDevMiddleware\",\n    value: function setupDevMiddleware() {\n      var webpackDevMiddleware = require(\"webpack-dev-middleware\"); // middleware for serving webpack bundle\n\n\n      this.middleware = webpackDevMiddleware(this.compiler, this.options.devMiddleware);\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupBuiltInRoutes\",\n    value: function setupBuiltInRoutes() {\n      var _this6 = this;\n\n      var app = this.app,\n          middleware = this.middleware;\n      /** @type {import(\"express\").Application} */\n\n      app.get(\"/__webpack_dev_server__/sockjs.bundle.js\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      function (req, res) {\n        res.setHeader(\"Content-Type\", \"application/javascript\");\n        var createReadStream = fs.createReadStream;\n        var clientPath = path.join(__dirname, \"..\", \"client\");\n        createReadStream(path.join(clientPath, \"modules/sockjs-client/index.js\")).pipe(res);\n      });\n      /** @type {import(\"express\").Application} */\n\n      app.get(\"/webpack-dev-server/invalidate\",\n      /**\n       * @param {Request} _req\n       * @param {Response} res\n       * @returns {void}\n       */\n      function (_req, res) {\n        _this6.invalidate();\n\n        res.end();\n      });\n      /** @type {import(\"express\").Application} */\n\n      app.get(\"/webpack-dev-server\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      function (req, res) {\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        middleware.waitUntilValid(function (stats) {\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.write('<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>');\n          var statsForPrint = typeof\n          /** @type {MultiStats} */\n          stats.stats !== \"undefined\" ?\n          /** @type {MultiStats} */\n          stats.toJson().children : [\n          /** @type {Stats} */\n          stats.toJson()];\n          res.write(\"<h1>Assets Report:</h1>\");\n          /**\n           * @type {StatsCompilation[]}\n           */\n\n          statsForPrint.forEach(function (item, index) {\n            res.write(\"<div>\");\n            var name = // eslint-disable-next-line no-nested-ternary\n            typeof item.name !== \"undefined\" ? item.name :\n            /** @type {MultiStats} */\n            stats.stats ? \"unnamed[\".concat(index, \"]\") : \"unnamed\";\n            res.write(\"<h2>Compilation: \".concat(name, \"</h2>\"));\n            res.write(\"<ul>\");\n            var publicPath = item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n            var _iterator2 = _createForOfIteratorHelper(\n            /** @type {NonNullable<StatsCompilation[\"assets\"]>} */\n            item.assets),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var asset = _step2.value;\n                var assetName = asset.name;\n                var assetURL = \"\".concat(publicPath).concat(assetName);\n                res.write(\"<li>\\n              <strong><a href=\\\"\".concat(assetURL, \"\\\" target=\\\"_blank\\\">\").concat(assetName, \"</a></strong>\\n            </li>\"));\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            res.write(\"</ul>\");\n            res.write(\"</div>\");\n          });\n          res.end(\"</body></html>\");\n        });\n      });\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupWatchStaticFiles\",\n    value: function setupWatchStaticFiles() {\n      var _this7 = this;\n\n      if (\n      /** @type {NormalizedStatic[]} */\n      this.options.static.length > 0) {\n        /** @type {NormalizedStatic[]} */\n        this.options.static.forEach(function (staticOption) {\n          if (staticOption.watch) {\n            _this7.watchFiles(staticOption.directory, staticOption.watch);\n          }\n        });\n      }\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupWatchFiles\",\n    value: function setupWatchFiles() {\n      var _this8 = this;\n\n      var watchFiles = this.options.watchFiles;\n\n      if (\n      /** @type {WatchFiles[]} */\n      watchFiles.length > 0) {\n        /** @type {WatchFiles[]} */\n        watchFiles.forEach(function (item) {\n          _this8.watchFiles(item.paths, item.options);\n        });\n      }\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"setupMiddlewares\",\n    value: function setupMiddlewares() {\n      var _this9 = this;\n\n      /**\n       * @type {Array<Middleware>}\n       */\n      var middlewares = []; // compress is placed last and uses unshift so that it will be the first middleware used\n\n      if (this.options.compress) {\n        var compression = require(\"compression\");\n\n        middlewares.push({\n          name: \"compression\",\n          middleware: compression()\n        });\n      }\n\n      if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n        this.options.onBeforeSetupMiddleware(this);\n      }\n\n      if (typeof this.options.headers !== \"undefined\") {\n        middlewares.push({\n          name: \"set-headers\",\n          path: \"*\",\n          middleware: this.setHeaders.bind(this)\n        });\n      }\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n\n      if (this.options.proxy) {\n        var _require2 = require(\"http-proxy-middleware\"),\n            createProxyMiddleware = _require2.createProxyMiddleware;\n        /**\n         * @param {ProxyConfigArrayItem} proxyConfig\n         * @returns {RequestHandler | undefined}\n         */\n\n\n        var getProxyMiddleware = function getProxyMiddleware(proxyConfig) {\n          // It is possible to use the `bypass` method without a `target` or `router`.\n          // However, the proxy middleware has no use in this case, and will fail to instantiate.\n          if (proxyConfig.target) {\n            var context = proxyConfig.context || proxyConfig.path;\n            return createProxyMiddleware(\n            /** @type {string} */\n            context, proxyConfig);\n          }\n\n          if (proxyConfig.router) {\n            return createProxyMiddleware(proxyConfig);\n          }\n        };\n        /**\n         * Assume a proxy configuration specified as:\n         * proxy: [\n         *   {\n         *     context: \"value\",\n         *     ...options,\n         *   },\n         *   // or:\n         *   function() {\n         *     return {\n         *       context: \"context\",\n         *       ...options,\n         *     };\n         *   }\n         * ]\n         */\n\n        /** @type {ProxyConfigArray} */\n\n\n        this.options.proxy.forEach(function (proxyConfigOrCallback) {\n          /**\n           * @type {RequestHandler}\n           */\n          var proxyMiddleware;\n          var proxyConfig = typeof proxyConfigOrCallback === \"function\" ? proxyConfigOrCallback() : proxyConfigOrCallback;\n          proxyMiddleware =\n          /** @type {RequestHandler} */\n          getProxyMiddleware(proxyConfig);\n\n          if (proxyConfig.ws) {\n            _this9.webSocketProxies.push(proxyMiddleware);\n          }\n          /**\n           * @param {Request} req\n           * @param {Response} res\n           * @param {NextFunction} next\n           * @returns {Promise<void>}\n           */\n\n\n          var handler = /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n              var newProxyConfig, isByPassFuncDefined, bypassUrl;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      if (typeof proxyConfigOrCallback === \"function\") {\n                        newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n                        if (newProxyConfig !== proxyConfig) {\n                          proxyConfig = newProxyConfig;\n                          proxyMiddleware =\n                          /** @type {RequestHandler} */\n                          getProxyMiddleware(proxyConfig);\n                        }\n                      } // - Check if we have a bypass function defined\n                      // - In case the bypass function is defined we'll retrieve the\n                      // bypassUrl from it otherwise bypassUrl would be null\n                      // TODO remove in the next major in favor `context` and `router` options\n\n\n                      isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n\n                      if (!isByPassFuncDefined) {\n                        _context3.next = 8;\n                        break;\n                      }\n\n                      _context3.next = 5;\n                      return (\n                        /** @type {ByPass} */\n                        proxyConfig.bypass(req, res, proxyConfig)\n                      );\n\n                    case 5:\n                      _context3.t0 = _context3.sent;\n                      _context3.next = 9;\n                      break;\n\n                    case 8:\n                      _context3.t0 = null;\n\n                    case 9:\n                      bypassUrl = _context3.t0;\n\n                      if (!(typeof bypassUrl === \"boolean\")) {\n                        _context3.next = 15;\n                        break;\n                      }\n\n                      // skip the proxy\n                      // @ts-ignore\n                      req.url = null;\n                      next();\n                      _context3.next = 25;\n                      break;\n\n                    case 15:\n                      if (!(typeof bypassUrl === \"string\")) {\n                        _context3.next = 20;\n                        break;\n                      }\n\n                      // byPass to that url\n                      req.url = bypassUrl;\n                      next();\n                      _context3.next = 25;\n                      break;\n\n                    case 20:\n                      if (!proxyMiddleware) {\n                        _context3.next = 24;\n                        break;\n                      }\n\n                      return _context3.abrupt(\"return\", proxyMiddleware(req, res, next));\n\n                    case 24:\n                      next();\n\n                    case 25:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            return function handler(_x, _x2, _x3) {\n              return _ref4.apply(this, arguments);\n            };\n          }();\n\n          middlewares.push({\n            name: \"http-proxy-middleware\",\n            middleware: handler\n          }); // Also forward error requests to the proxy so it can handle them.\n\n          middlewares.push({\n            name: \"http-proxy-middleware-error-handler\",\n            middleware:\n            /**\n             * @param {Error} error\n             * @param {Request} req\n             * @param {Response} res\n             * @param {NextFunction} next\n             * @returns {any}\n             */\n            function middleware(error, req, res, next) {\n              return handler(req, res, next);\n            }\n          });\n        });\n        middlewares.push({\n          name: \"webpack-dev-middleware\",\n          middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          this.middleware\n        });\n      }\n\n      if (\n      /** @type {NormalizedStatic[]} */\n      this.options.static.length > 0) {\n        /** @type {NormalizedStatic[]} */\n        this.options.static.forEach(function (staticOption) {\n          staticOption.publicPath.forEach(function (publicPath) {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(staticOption.directory, staticOption.staticOptions)\n            });\n          });\n        });\n      }\n\n      if (this.options.historyApiFallback) {\n        var connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n\n        var historyApiFallback = this.options.historyApiFallback;\n\n        if (typeof\n        /** @type {ConnectHistoryApiFallbackOptions} */\n        historyApiFallback.logger === \"undefined\" && !\n        /** @type {ConnectHistoryApiFallbackOptions} */\n        historyApiFallback.verbose) {\n          // @ts-ignore\n          historyApiFallback.logger = this.logger.log.bind(this.logger, \"[connect-history-api-fallback]\");\n        } // Fall back to /index.html if nothing else matches.\n\n\n        middlewares.push({\n          name: \"connect-history-api-fallback\",\n          middleware: connectHistoryApiFallback(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          historyApiFallback)\n        }); // include our middleware to ensure\n        // it is able to handle '/index.html' request after redirect\n\n        middlewares.push({\n          name: \"webpack-dev-middleware\",\n          middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          this.middleware\n        });\n\n        if (\n        /** @type {NormalizedStatic[]} */\n        this.options.static.length > 0) {\n          /** @type {NormalizedStatic[]} */\n          this.options.static.forEach(function (staticOption) {\n            staticOption.publicPath.forEach(function (publicPath) {\n              middlewares.push({\n                name: \"express-static\",\n                path: publicPath,\n                middleware: express.static(staticOption.directory, staticOption.staticOptions)\n              });\n            });\n          });\n        }\n      }\n\n      if (\n      /** @type {NormalizedStatic[]} */\n      this.options.static.length > 0) {\n        var serveIndex = require(\"serve-index\");\n        /** @type {NormalizedStatic[]} */\n\n\n        this.options.static.forEach(function (staticOption) {\n          staticOption.publicPath.forEach(function (publicPath) {\n            if (staticOption.serveIndex) {\n              middlewares.push({\n                name: \"serve-index\",\n                path: publicPath,\n\n                /**\n                 * @param {Request} req\n                 * @param {Response} res\n                 * @param {NextFunction} next\n                 * @returns {void}\n                 */\n                middleware: function middleware(req, res, next) {\n                  // serve-index doesn't fallthrough non-get/head request to next middleware\n                  if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                    return next();\n                  }\n\n                  serveIndex(staticOption.directory,\n                  /** @type {ServeIndexOptions} */\n                  staticOption.serveIndex)(req, res, next);\n                }\n              });\n            }\n          });\n        });\n      }\n\n      if (this.options.magicHtml) {\n        middlewares.push({\n          name: \"serve-magic-html\",\n          middleware: this.serveMagicHtml.bind(this)\n        });\n      }\n\n      if (typeof this.options.setupMiddlewares === \"function\") {\n        middlewares = this.options.setupMiddlewares(middlewares, this);\n      }\n\n      middlewares.forEach(function (middleware) {\n        if (typeof middleware === \"function\") {\n          /** @type {import(\"express\").Application} */\n          _this9.app.use(middleware);\n        } else if (typeof middleware.path !== \"undefined\") {\n          /** @type {import(\"express\").Application} */\n          _this9.app.use(middleware.path, middleware.middleware);\n        } else {\n          /** @type {import(\"express\").Application} */\n          _this9.app.use(middleware.middleware);\n        }\n      });\n\n      if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n        this.options.onAfterSetupMiddleware(this);\n      }\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"createServer\",\n    value: function createServer() {\n      var _this10 = this;\n\n      var _this$options$server =\n      /** @type {ServerConfiguration} */\n      this.options.server,\n          type = _this$options$server.type,\n          options = _this$options$server.options;\n      /** @type {import(\"http\").Server | undefined | null} */\n      // eslint-disable-next-line import/no-dynamic-require\n\n      this.server = require(\n      /** @type {string} */\n      type).createServer(options, this.app);\n      /** @type {import(\"http\").Server} */\n\n      this.server.on(\"connection\",\n      /**\n       * @param {Socket} socket\n       */\n      function (socket) {\n        // Add socket to list\n        _this10.sockets.push(socket);\n\n        socket.once(\"close\", function () {\n          // Remove socket from list\n          _this10.sockets.splice(_this10.sockets.indexOf(socket), 1);\n        });\n      });\n      /** @type {import(\"http\").Server} */\n\n      this.server.on(\"error\",\n      /**\n       * @param {Error} error\n       */\n      function (error) {\n        throw error;\n      });\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n    // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n\n  }, {\n    key: \"createWebSocketServer\",\n    value: function createWebSocketServer() {\n      var _this11 = this;\n\n      /** @type {WebSocketServerImplementation | undefined | null} */\n      this.webSocketServer = new (\n      /** @type {any} */\n      this.getServerTransport())(this);\n      /** @type {WebSocketServerImplementation} */\n\n      this.webSocketServer.implementation.on(\"connection\",\n      /**\n       * @param {ClientConnection} client\n       * @param {IncomingMessage} request\n       */\n      function (client, request) {\n        /** @type {{ [key: string]: string | undefined } | undefined} */\n        var headers = // eslint-disable-next-line no-nested-ternary\n        typeof request !== \"undefined\" ?\n        /** @type {{ [key: string]: string | undefined }} */\n        request.headers : typeof\n        /** @type {import(\"sockjs\").Connection} */\n        client.headers !== \"undefined\" ?\n        /** @type {import(\"sockjs\").Connection} */\n        client.headers : // eslint-disable-next-line no-undefined\n        undefined;\n\n        if (!headers) {\n          _this11.logger.warn('webSocketServer implementation must pass headers for the \"connection\" event');\n        }\n\n        if (!headers || !_this11.checkHeader(headers, \"host\") || !_this11.checkHeader(headers, \"origin\")) {\n          _this11.sendMessage([client], \"error\", \"Invalid Host/Origin header\"); // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n          // Terminate would prevent it sending, so use close to allow it to be sent\n\n\n          client.close();\n          return;\n        }\n\n        if (_this11.options.hot === true || _this11.options.hot === \"only\") {\n          _this11.sendMessage([client], \"hot\");\n        }\n\n        if (_this11.options.liveReload) {\n          _this11.sendMessage([client], \"liveReload\");\n        }\n\n        if (_this11.options.client &&\n        /** @type {ClientConfiguration} */\n        _this11.options.client.progress) {\n          _this11.sendMessage([client], \"progress\",\n          /** @type {ClientConfiguration} */\n          _this11.options.client.progress);\n        }\n\n        if (_this11.options.client &&\n        /** @type {ClientConfiguration} */\n        _this11.options.client.reconnect) {\n          _this11.sendMessage([client], \"reconnect\",\n          /** @type {ClientConfiguration} */\n          _this11.options.client.reconnect);\n        }\n\n        if (_this11.options.client &&\n        /** @type {ClientConfiguration} */\n        _this11.options.client.overlay) {\n          _this11.sendMessage([client], \"overlay\",\n          /** @type {ClientConfiguration} */\n          _this11.options.client.overlay);\n        }\n\n        if (!_this11.stats) {\n          return;\n        }\n\n        _this11.sendStats([client], _this11.getStats(_this11.stats), true);\n      });\n    }\n    /**\n     * @private\n     * @param {string} defaultOpenTarget\n     * @returns {void}\n     */\n\n  }, {\n    key: \"openBrowser\",\n    value: function openBrowser(defaultOpenTarget) {\n      var _this12 = this;\n\n      var open = require(\"open\");\n\n      Promise.all(\n      /** @type {NormalizedOpen[]} */\n      this.options.open.map(function (item) {\n        /**\n         * @type {string}\n         */\n        var openTarget;\n\n        if (item.target === \"<url>\") {\n          openTarget = defaultOpenTarget;\n        } else {\n          openTarget = Server.isAbsoluteURL(item.target) ? item.target : new URL(item.target, defaultOpenTarget).toString();\n        }\n\n        return open(openTarget, item.options).catch(function () {\n          _this12.logger.warn(\"Unable to open \\\"\".concat(openTarget, \"\\\" page\").concat(item.options.app ? \" in \\\"\".concat(\n          /** @type {import(\"open\").App} */\n          item.options.app.name, \"\\\" app\").concat(\n          /** @type {import(\"open\").App} */\n          item.options.app.arguments ? \" with \\\"\".concat(\n          /** @type {import(\"open\").App} */\n          item.options.app.arguments.join(\" \"), \"\\\" arguments\") : \"\") : \"\", \". If you are running in a headless environment, please do not use the \\\"open\\\" option or related flags like \\\"--open\\\", \\\"--open-target\\\", and \\\"--open-app\\\".\"));\n        });\n      }));\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"runBonjour\",\n    value: function runBonjour() {\n      /**\n       * @private\n       * @type {import(\"bonjour\").Bonjour | undefined}\n       */\n      this.bonjour = require(\"bonjour\")();\n      this.bonjour.publish(_objectSpread({\n        name: \"Webpack Dev Server \".concat(os.hostname(), \":\").concat(this.options.port),\n        port:\n        /** @type {number} */\n        this.options.port,\n        type:\n        /** @type {ServerConfiguration} */\n        this.options.server.type === \"http\" ? \"http\" : \"https\",\n        subtypes: [\"webpack\"]\n      },\n      /** @type {BonjourOptions} */\n      this.options.bonjour));\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"stopBonjour\",\n    value: function stopBonjour() {\n      var _this13 = this;\n\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n      /** @type {Bonjour} */\n      this.bonjour.unpublishAll(function () {\n        /** @type {Bonjour} */\n        _this13.bonjour.destroy();\n\n        if (callback) {\n          callback();\n        }\n      });\n    }\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"logStatus\",\n    value: function logStatus() {\n      var _require3 = require(\"colorette\"),\n          isColorSupported = _require3.isColorSupported,\n          cyan = _require3.cyan,\n          red = _require3.red;\n      /**\n       * @param {Compiler[\"options\"]} compilerOptions\n       * @returns {boolean}\n       */\n\n\n      var getColorsOption = function getColorsOption(compilerOptions) {\n        /**\n         * @type {boolean}\n         */\n        var colorsEnabled;\n\n        if (compilerOptions.stats && typeof\n        /** @type {StatsOptions} */\n        compilerOptions.stats.colors !== \"undefined\") {\n          colorsEnabled =\n          /** @type {boolean} */\n\n          /** @type {StatsOptions} */\n          compilerOptions.stats.colors;\n        } else {\n          colorsEnabled = isColorSupported;\n        }\n\n        return colorsEnabled;\n      };\n\n      var colors = {\n        /**\n         * @param {boolean} useColor\n         * @param {string} msg\n         * @returns {string}\n         */\n        info: function info(useColor, msg) {\n          if (useColor) {\n            return cyan(msg);\n          }\n\n          return msg;\n        },\n\n        /**\n         * @param {boolean} useColor\n         * @param {string} msg\n         * @returns {string}\n         */\n        error: function error(useColor, msg) {\n          if (useColor) {\n            return red(msg);\n          }\n\n          return msg;\n        }\n      };\n      var useColor = getColorsOption(this.getCompilerOptions());\n\n      if (this.options.ipc) {\n        this.logger.info(\"Project is running at: \\\"\".concat(\n        /** @type {import(\"http\").Server} */\n        this.server.address(), \"\\\"\"));\n      } else {\n        var protocol =\n        /** @type {ServerConfiguration} */\n        this.options.server.type === \"http\" ? \"http\" : \"https\";\n\n        var _this$server$address =\n        /** @type {import(\"net\").AddressInfo} */\n\n        /** @type {import(\"http\").Server} */\n        this.server.address(),\n            address = _this$server$address.address,\n            port = _this$server$address.port;\n        /**\n         * @param {string} newHostname\n         * @returns {string}\n         */\n\n\n        var prettyPrintURL = function prettyPrintURL(newHostname) {\n          return url.format({\n            protocol: protocol,\n            hostname: newHostname,\n            port: port,\n            pathname: \"/\"\n          });\n        };\n\n        var server;\n        var localhost;\n        var loopbackIPv4;\n        var loopbackIPv6;\n        var networkUrlIPv4;\n        var networkUrlIPv6;\n\n        if (this.options.host) {\n          if (this.options.host === \"localhost\") {\n            localhost = prettyPrintURL(\"localhost\");\n          } else {\n            var isIP;\n\n            try {\n              isIP = ipaddr.parse(this.options.host);\n            } catch (error) {// Ignore\n            }\n\n            if (!isIP) {\n              server = prettyPrintURL(this.options.host);\n            }\n          }\n        }\n\n        var parsedIP = ipaddr.parse(address);\n\n        if (parsedIP.range() === \"unspecified\") {\n          localhost = prettyPrintURL(\"localhost\");\n          var networkIPv4 = Server.internalIPSync(\"v4\");\n\n          if (networkIPv4) {\n            networkUrlIPv4 = prettyPrintURL(networkIPv4);\n          }\n\n          var networkIPv6 = Server.internalIPSync(\"v6\");\n\n          if (networkIPv6) {\n            networkUrlIPv6 = prettyPrintURL(networkIPv6);\n          }\n        } else if (parsedIP.range() === \"loopback\") {\n          if (parsedIP.kind() === \"ipv4\") {\n            loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n          } else if (parsedIP.kind() === \"ipv6\") {\n            loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n          }\n        } else {\n          networkUrlIPv4 = parsedIP.kind() === \"ipv6\" &&\n          /** @type {IPv6} */\n          parsedIP.isIPv4MappedAddress() ? prettyPrintURL(\n          /** @type {IPv6} */\n          parsedIP.toIPv4Address().toString()) : prettyPrintURL(address);\n\n          if (parsedIP.kind() === \"ipv6\") {\n            networkUrlIPv6 = prettyPrintURL(address);\n          }\n        }\n\n        this.logger.info(\"Project is running at:\");\n\n        if (server) {\n          this.logger.info(\"Server: \".concat(colors.info(useColor, server)));\n        }\n\n        if (localhost || loopbackIPv4 || loopbackIPv6) {\n          var loopbacks = [];\n\n          if (localhost) {\n            loopbacks.push([colors.info(useColor, localhost)]);\n          }\n\n          if (loopbackIPv4) {\n            loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n          }\n\n          if (loopbackIPv6) {\n            loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n          }\n\n          this.logger.info(\"Loopback: \".concat(loopbacks.join(\", \")));\n        }\n\n        if (networkUrlIPv4) {\n          this.logger.info(\"On Your Network (IPv4): \".concat(colors.info(useColor, networkUrlIPv4)));\n        }\n\n        if (networkUrlIPv6) {\n          this.logger.info(\"On Your Network (IPv6): \".concat(colors.info(useColor, networkUrlIPv6)));\n        }\n\n        if (\n        /** @type {NormalizedOpen[]} */\n        this.options.open.length > 0) {\n          var openTarget = prettyPrintURL(this.options.host || \"localhost\");\n          this.openBrowser(openTarget);\n        }\n      }\n\n      if (\n      /** @type {NormalizedStatic[]} */\n      this.options.static.length > 0) {\n        this.logger.info(\"Content not from webpack is served from '\".concat(colors.info(useColor,\n        /** @type {NormalizedStatic[]} */\n        this.options.static.map(function (staticOption) {\n          return staticOption.directory;\n        }).join(\", \")), \"' directory\"));\n      }\n\n      if (this.options.historyApiFallback) {\n        this.logger.info(\"404s will fallback to '\".concat(colors.info(useColor,\n        /** @type {ConnectHistoryApiFallbackOptions} */\n        this.options.historyApiFallback.index || \"/index.html\"), \"'\"));\n      }\n\n      if (this.options.bonjour) {\n        var bonjourProtocol =\n        /** @type {BonjourOptions} */\n        this.options.bonjour.type ||\n        /** @type {ServerConfiguration} */\n        this.options.server.type === \"http\" ? \"http\" : \"https\";\n        this.logger.info(\"Broadcasting \\\"\".concat(bonjourProtocol, \"\\\" with subtype of \\\"webpack\\\" via ZeroConf DNS (Bonjour)\"));\n      }\n    }\n    /**\n     * @private\n     * @param {Request} req\n     * @param {Response} res\n     * @param {NextFunction} next\n     */\n\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(req, res, next) {\n      var headers = this.options.headers;\n\n      if (headers) {\n        if (typeof headers === \"function\") {\n          headers = headers(req, res,\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          this.middleware.context);\n        }\n        /**\n         * @type {{key: string, value: string}[]}\n         */\n\n\n        var allHeaders = [];\n\n        if (!Array.isArray(headers)) {\n          // eslint-disable-next-line guard-for-in\n          for (var name in headers) {\n            // @ts-ignore\n            allHeaders.push({\n              key: name,\n              value: headers[name]\n            });\n          }\n\n          headers = allHeaders;\n        }\n\n        headers.forEach(\n        /**\n         * @param {{key: string, value: any}} header\n         */\n        function (header) {\n          res.setHeader(header.key, header.value);\n        });\n      }\n\n      next();\n    }\n    /**\n     * @private\n     * @param {{ [key: string]: string | undefined }} headers\n     * @param {string} headerToCheck\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkHeader\",\n    value: function checkHeader(headers, headerToCheck) {\n      // allow user to opt out of this security check, at their own risk\n      // by explicitly enabling allowedHosts\n      if (this.options.allowedHosts === \"all\") {\n        return true;\n      } // get the Host header and extract hostname\n      // we don't care about port not matching\n\n\n      var hostHeader = headers[headerToCheck];\n\n      if (!hostHeader) {\n        return false;\n      }\n\n      if (/^(file|.+-extension):/i.test(hostHeader)) {\n        return true;\n      } // use the node url-parser to retrieve the hostname from the host-header.\n\n\n      var hostname = url.parse( // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : \"//\".concat(hostHeader), false, true).hostname; // always allow requests with explicit IPv4 or IPv6-address.\n      // A note on IPv6 addresses:\n      // hostHeader will always contain the brackets denoting\n      // an IPv6-address in URLs,\n      // these are removed from the hostname in url.parse(),\n      // so we have the pure IPv6-address in hostname.\n      // always allow localhost host, for convenience (hostname === 'localhost')\n      // allow hostname of listening address  (hostname === this.options.host)\n\n      var isValidHostname = hostname !== null && ipaddr.IPv4.isValid(hostname) || hostname !== null && ipaddr.IPv6.isValid(hostname) || hostname === \"localhost\" || hostname === this.options.host;\n\n      if (isValidHostname) {\n        return true;\n      }\n\n      var allowedHosts = this.options.allowedHosts; // always allow localhost host, for convenience\n      // allow if hostname is in allowedHosts\n\n      if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n        for (var hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n          var allowedHost = allowedHosts[hostIdx];\n\n          if (allowedHost === hostname) {\n            return true;\n          } // support \".\" as a subdomain wildcard\n          // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n\n\n          if (allowedHost[0] === \".\") {\n            // \"example.com\"  (hostname === allowedHost.substring(1))\n            // \"*.example.com\"  (hostname.endsWith(allowedHost))\n            if (hostname === allowedHost.substring(1) ||\n            /** @type {string} */\n            hostname.endsWith(allowedHost)) {\n              return true;\n            }\n          }\n        }\n      } // Also allow if `client.webSocketURL.hostname` provided\n\n\n      if (this.options.client && typeof\n      /** @type {ClientConfiguration} */\n      this.options.client.webSocketURL !== \"undefined\") {\n        return (\n          /** @type {WebSocketURL} */\n\n          /** @type {ClientConfiguration} */\n          this.options.client.webSocketURL.hostname === hostname\n        );\n      } // disallow\n\n\n      return false;\n    }\n    /**\n     * @param {ClientConnection[]} clients\n     * @param {string} type\n     * @param {any} [data]\n     * @param {any} [params]\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(clients, type, data, params) {\n      var _iterator3 = _createForOfIteratorHelper(clients),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var client = _step3.value;\n\n          // `sockjs` uses `1` to indicate client is ready to accept data\n          // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n          if (client.readyState === 1) {\n            client.send(JSON.stringify({\n              type: type,\n              data: data,\n              params: params\n            }));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n    /**\n     * @private\n     * @param {Request} req\n     * @param {Response} res\n     * @param {NextFunction} next\n     * @returns {void}\n     */\n\n  }, {\n    key: \"serveMagicHtml\",\n    value: function serveMagicHtml(req, res, next) {\n      var _this14 = this;\n\n      if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n        return next();\n      }\n      /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n\n\n      this.middleware.waitUntilValid(function () {\n        var _path = req.path;\n\n        try {\n          var filename =\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          _this14.middleware.getFilenameFromUrl(\"\".concat(_path, \".js\"));\n\n          var isFile =\n          /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          _this14.middleware.context.outputFileSystem.statSync(\n          /** @type {import(\"fs\").PathLike} */\n          filename).isFile();\n\n          if (!isFile) {\n            return next();\n          } // Serve a page that executes the javascript\n          // @ts-ignore\n\n\n          var queries = req._parsedUrl.search || \"\";\n          var responsePage = \"<!DOCTYPE html><html><head><meta charset=\\\"utf-8\\\"/></head><body><script type=\\\"text/javascript\\\" charset=\\\"utf-8\\\" src=\\\"\".concat(_path, \".js\").concat(queries, \"\\\"></script></body></html>\");\n          res.send(responsePage);\n        } catch (error) {\n          return next();\n        }\n      });\n    } // Send stats to a socket or multiple sockets\n\n    /**\n     * @private\n     * @param {ClientConnection[]} clients\n     * @param {StatsCompilation} stats\n     * @param {boolean} [force]\n     */\n\n  }, {\n    key: \"sendStats\",\n    value: function sendStats(clients, stats, force) {\n      var shouldEmit = !force && stats && (!stats.errors || stats.errors.length === 0) && (!stats.warnings || stats.warnings.length === 0) && this.currentHash === stats.hash;\n\n      if (shouldEmit) {\n        this.sendMessage(clients, \"still-ok\");\n        return;\n      }\n\n      this.currentHash = stats.hash;\n      this.sendMessage(clients, \"hash\", stats.hash);\n\n      if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      stats.errors.length > 0 ||\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      stats.warnings.length > 0) {\n        var hasErrors =\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n        stats.errors.length > 0;\n\n        if (\n        /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n        stats.warnings.length > 0) {\n          var params;\n\n          if (hasErrors) {\n            params = {\n              preventReloading: true\n            };\n          }\n\n          this.sendMessage(clients, \"warnings\", stats.warnings, params);\n        }\n\n        if (\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n        stats.errors.length > 0) {\n          this.sendMessage(clients, \"errors\", stats.errors);\n        }\n      } else {\n        this.sendMessage(clients, \"ok\");\n      }\n    }\n    /**\n     * @param {string | string[]} watchPath\n     * @param {WatchOptions} [watchOptions]\n     */\n\n  }, {\n    key: \"watchFiles\",\n    value: function watchFiles(watchPath, watchOptions) {\n      var _this15 = this;\n\n      var chokidar = require(\"chokidar\");\n\n      var watcher = chokidar.watch(watchPath, watchOptions); // disabling refreshing on changing the content\n\n      if (this.options.liveReload) {\n        watcher.on(\"change\", function (item) {\n          if (_this15.webSocketServer) {\n            _this15.sendMessage(_this15.webSocketServer.clients, \"static-changed\", item);\n          }\n        });\n      }\n\n      this.staticWatchers.push(watcher);\n    }\n    /**\n     * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n     */\n\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n      if (this.middleware) {\n        this.middleware.invalidate(callback);\n      }\n    }\n    /**\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _this16 = this;\n\n        var listenOptions, READ_WRITE;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.normalizeOptions();\n\n              case 2:\n                if (!this.options.ipc) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 5;\n                return (\n                  /** @type {Promise<void>} */\n                  new Promise(function (resolve, reject) {\n                    var net = require(\"net\");\n\n                    var socket = new net.Socket();\n                    socket.on(\"error\",\n                    /**\n                     * @param {Error & { code?: string }} error\n                     */\n                    function (error) {\n                      if (error.code === \"ECONNREFUSED\") {\n                        // No other server listening on this socket so it can be safely removed\n                        fs.unlinkSync(\n                        /** @type {string} */\n                        _this16.options.ipc);\n                        resolve();\n                        return;\n                      } else if (error.code === \"ENOENT\") {\n                        resolve();\n                        return;\n                      }\n\n                      reject(error);\n                    });\n                    socket.connect({\n                      path:\n                      /** @type {string} */\n                      _this16.options.ipc\n                    }, function () {\n                      throw new Error(\"IPC \\\"\".concat(_this16.options.ipc, \"\\\" is already used\"));\n                    });\n                  })\n                );\n\n              case 5:\n                _context4.next = 13;\n                break;\n\n              case 7:\n                _context4.next = 9;\n                return Server.getHostname(\n                /** @type {Host} */\n                this.options.host);\n\n              case 9:\n                this.options.host = _context4.sent;\n                _context4.next = 12;\n                return Server.getFreePort(\n                /** @type {Port} */\n                this.options.port);\n\n              case 12:\n                this.options.port = _context4.sent;\n\n              case 13:\n                _context4.next = 15;\n                return this.initialize();\n\n              case 15:\n                listenOptions = this.options.ipc ? {\n                  path: this.options.ipc\n                } : {\n                  host: this.options.host,\n                  port: this.options.port\n                };\n                _context4.next = 18;\n                return (\n                  /** @type {Promise<void>} */\n                  new Promise(function (resolve) {\n                    /** @type {import(\"http\").Server} */\n                    _this16.server.listen(listenOptions, function () {\n                      resolve();\n                    });\n                  })\n                );\n\n              case 18:\n                if (!this.options.ipc) {\n                  _context4.next = 22;\n                  break;\n                }\n\n                // chmod 666 (rw rw rw)\n                READ_WRITE = 438;\n                _context4.next = 22;\n                return fs.promises.chmod(\n                /** @type {string} */\n                this.options.ipc, READ_WRITE);\n\n              case 22:\n                if (this.options.webSocketServer) {\n                  this.createWebSocketServer();\n                }\n\n                if (this.options.bonjour) {\n                  this.runBonjour();\n                }\n\n                this.logStatus();\n\n                if (typeof this.options.onListening === \"function\") {\n                  this.options.onListening(this);\n                }\n\n              case 26:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n    /**\n     * @param {(err?: Error) => void} [callback]\n     */\n\n  }, {\n    key: \"startCallback\",\n    value: function startCallback() {\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n      this.start().then(function () {\n        return callback();\n      }, callback).catch(callback);\n    }\n    /**\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _this17 = this;\n\n        var _iterator6, _step6, item;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.bonjour) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return (\n                  /** @type {Promise<void>} */\n                  new Promise(function (resolve) {\n                    _this17.stopBonjour(function () {\n                      resolve();\n                    });\n                  })\n                );\n\n              case 3:\n                this.webSocketProxies = [];\n                _context5.next = 6;\n                return Promise.all(this.staticWatchers.map(function (watcher) {\n                  return watcher.close();\n                }));\n\n              case 6:\n                this.staticWatchers = [];\n\n                if (!this.webSocketServer) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _context5.next = 10;\n                return (\n                  /** @type {Promise<void>} */\n                  new Promise(function (resolve) {\n                    /** @type {WebSocketServerImplementation} */\n                    _this17.webSocketServer.implementation.close(function () {\n                      _this17.webSocketServer = null;\n                      resolve();\n                    });\n\n                    var _iterator4 = _createForOfIteratorHelper(\n                    /** @type {WebSocketServerImplementation} */\n                    _this17.webSocketServer.clients),\n                        _step4;\n\n                    try {\n                      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                        var client = _step4.value;\n                        client.terminate();\n                      }\n                      /** @type {WebSocketServerImplementation} */\n\n                    } catch (err) {\n                      _iterator4.e(err);\n                    } finally {\n                      _iterator4.f();\n                    }\n                    /** @type {WebSocketServerImplementation} */\n\n\n                    /** @type {WebSocketServerImplementation} */\n                    _this17.webSocketServer.clients = [];\n                  })\n                );\n\n              case 10:\n                if (!this.server) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                _context5.next = 13;\n                return (\n                  /** @type {Promise<void>} */\n                  new Promise(function (resolve) {\n                    /** @type {import(\"http\").Server} */\n                    _this17.server.close(function () {\n                      _this17.server = null;\n                      resolve();\n                    });\n\n                    var _iterator5 = _createForOfIteratorHelper(_this17.sockets),\n                        _step5;\n\n                    try {\n                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                        var socket = _step5.value;\n                        socket.destroy();\n                      }\n                    } catch (err) {\n                      _iterator5.e(err);\n                    } finally {\n                      _iterator5.f();\n                    }\n\n                    _this17.sockets = [];\n                  })\n                );\n\n              case 13:\n                if (!this.middleware) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                _context5.next = 16;\n                return (\n                  /** @type {Promise<void>} */\n                  new Promise(function (resolve, reject) {\n                    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n                    _this17.middleware.close(function (error) {\n                      if (error) {\n                        reject(error);\n                        return;\n                      }\n\n                      resolve();\n                    });\n                  })\n                );\n\n              case 16:\n                this.middleware = null;\n\n              case 17:\n                // We add listeners to signals when creating a new Server instance\n                // So ensure they are removed to prevent EventEmitter memory leak warnings\n                _iterator6 = _createForOfIteratorHelper(this.listeners);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    item = _step6.value;\n                    process.removeListener(item.name, item.listener);\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n    /**\n     * @param {(err?: Error) => void} [callback]\n     */\n\n  }, {\n    key: \"stopCallback\",\n    value: function stopCallback() {\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n      this.stop().then(function () {\n        return callback();\n      }, callback).catch(callback);\n    } // TODO remove in the next major release\n\n    /**\n     * @param {Port} port\n     * @param {Host} hostname\n     * @param {(err?: Error) => void} fn\n     * @returns {void}\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(port, hostname, fn) {\n      var _this18 = this;\n\n      util.deprecate(function () {}, \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_LISTEN\")();\n\n      if (typeof port === \"function\") {\n        fn = port;\n      }\n\n      if (typeof port !== \"undefined\" && typeof this.options.port !== \"undefined\" && port !== this.options.port) {\n        this.options.port = port;\n        this.logger.warn('The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.');\n      }\n\n      if (!this.options.port) {\n        this.options.port = port;\n      }\n\n      if (typeof hostname !== \"undefined\" && typeof this.options.host !== \"undefined\" && hostname !== this.options.host) {\n        this.options.host = hostname;\n        this.logger.warn('The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.');\n      }\n\n      if (!this.options.host) {\n        this.options.host = hostname;\n      }\n\n      this.start().then(function () {\n        if (fn) {\n          fn.call(_this18.server);\n        }\n      }).catch(function (error) {\n        // Nothing\n        if (fn) {\n          fn.call(_this18.server, error);\n        }\n      });\n    }\n    /**\n     * @param {(err?: Error) => void} [callback]\n     * @returns {void}\n     */\n    // TODO remove in the next major release\n\n  }, {\n    key: \"close\",\n    value: function close(callback) {\n      util.deprecate(function () {}, \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_CLOSE\")();\n      this.stop().then(function () {\n        if (callback) {\n          callback();\n        }\n      }).catch(function (error) {\n        if (callback) {\n          callback(error);\n        }\n      });\n    }\n  }], [{\n    key: \"cli\",\n    get: function get() {\n      return {\n        get getArguments() {\n          return function () {\n            return require(\"../bin/cli-flags\");\n          };\n        },\n\n        get processArguments() {\n          return require(\"../bin/process-arguments\");\n        }\n\n      };\n    }\n  }, {\n    key: \"schema\",\n    get: function get() {\n      return schema;\n    }\n    /**\n     * @private\n     * @returns {StatsOptions}\n     * @constructor\n     */\n\n  }, {\n    key: \"DEFAULT_STATS\",\n    get: function get() {\n      return {\n        all: false,\n        hash: true,\n        warnings: true,\n        errors: true,\n        errorDetails: false\n      };\n    }\n    /**\n     * @param {string} URL\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isAbsoluteURL\",\n    value: function isAbsoluteURL(URL) {\n      // Don't match Windows paths `c:\\`\n      if (/^[a-zA-Z]:\\\\/.test(URL)) {\n        return false;\n      } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n      // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n      return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n    }\n    /**\n     * @param {string} gateway\n     * @returns {string | undefined}\n     */\n\n  }, {\n    key: \"findIp\",\n    value: function findIp(gateway) {\n      var gatewayIp = ipaddr.parse(gateway); // Look for the matching interface in all local interfaces.\n\n      for (var _i2 = 0, _Object$values = Object.values(os.networkInterfaces()); _i2 < _Object$values.length; _i2++) {\n        var addresses = _Object$values[_i2];\n\n        var _iterator7 = _createForOfIteratorHelper(\n        /** @type {NetworkInterfaceInfo[]} */\n        addresses),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var cidr = _step7.value.cidr;\n            var net = ipaddr.parseCIDR(\n            /** @type {string} */\n            cidr);\n\n            if (net[0] && net[0].kind() === gatewayIp.kind() && gatewayIp.match(net)) {\n              return net[0].toString();\n            }\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      }\n    }\n    /**\n     * @param {\"v4\" | \"v6\"} family\n     * @returns {Promise<string | undefined>}\n     */\n\n  }, {\n    key: \"internalIP\",\n    value: function () {\n      var _internalIP = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(family) {\n        var _yield$defaultGateway, gateway;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return defaultGateway[family]();\n\n              case 3:\n                _yield$defaultGateway = _context6.sent;\n                gateway = _yield$defaultGateway.gateway;\n                return _context6.abrupt(\"return\", Server.findIp(gateway));\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](0);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 8]]);\n      }));\n\n      function internalIP(_x4) {\n        return _internalIP.apply(this, arguments);\n      }\n\n      return internalIP;\n    }()\n    /**\n     * @param {\"v4\" | \"v6\"} family\n     * @returns {string | undefined}\n     */\n\n  }, {\n    key: \"internalIPSync\",\n    value: function internalIPSync(family) {\n      try {\n        var _defaultGateway$famil = defaultGateway[family].sync(),\n            gateway = _defaultGateway$famil.gateway;\n\n        return Server.findIp(gateway);\n      } catch (_unused3) {// ignore\n      }\n    }\n    /**\n     * @param {Host} hostname\n     * @returns {Promise<string>}\n     */\n\n  }, {\n    key: \"getHostname\",\n    value: function () {\n      var _getHostname = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(hostname) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(hostname === \"local-ip\")) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                _context7.next = 3;\n                return Server.internalIP(\"v4\");\n\n              case 3:\n                _context7.t1 = _context7.sent;\n\n                if (_context7.t1) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                _context7.next = 7;\n                return Server.internalIP(\"v6\");\n\n              case 7:\n                _context7.t1 = _context7.sent;\n\n              case 8:\n                _context7.t0 = _context7.t1;\n\n                if (_context7.t0) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                _context7.t0 = \"0.0.0.0\";\n\n              case 11:\n                return _context7.abrupt(\"return\", _context7.t0);\n\n              case 14:\n                if (!(hostname === \"local-ipv4\")) {\n                  _context7.next = 23;\n                  break;\n                }\n\n                _context7.next = 17;\n                return Server.internalIP(\"v4\");\n\n              case 17:\n                _context7.t2 = _context7.sent;\n\n                if (_context7.t2) {\n                  _context7.next = 20;\n                  break;\n                }\n\n                _context7.t2 = \"0.0.0.0\";\n\n              case 20:\n                return _context7.abrupt(\"return\", _context7.t2);\n\n              case 23:\n                if (!(hostname === \"local-ipv6\")) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                _context7.next = 26;\n                return Server.internalIP(\"v6\");\n\n              case 26:\n                _context7.t3 = _context7.sent;\n\n                if (_context7.t3) {\n                  _context7.next = 29;\n                  break;\n                }\n\n                _context7.t3 = \"::\";\n\n              case 29:\n                return _context7.abrupt(\"return\", _context7.t3);\n\n              case 30:\n                return _context7.abrupt(\"return\", hostname);\n\n              case 31:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getHostname(_x5) {\n        return _getHostname.apply(this, arguments);\n      }\n\n      return getHostname;\n    }()\n    /**\n     * @param {Port} port\n     * @returns {Promise<number | string>}\n     */\n\n  }, {\n    key: \"getFreePort\",\n    value: function () {\n      var _getFreePort = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(port) {\n        var pRetry, portfinder, defaultPortRetry;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(typeof port !== \"undefined\" && port !== null && port !== \"auto\")) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", port);\n\n              case 2:\n                pRetry = require(\"p-retry\");\n                portfinder = require(\"portfinder\");\n                portfinder.basePort = typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10) : 8080; // Try to find unused port and listen on it for 3 times,\n                // if port is not specified in options.\n\n                defaultPortRetry = typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10) : 3;\n                return _context8.abrupt(\"return\", pRetry(function () {\n                  return portfinder.getPortPromise();\n                }, {\n                  retries: defaultPortRetry\n                }));\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getFreePort(_x6) {\n        return _getFreePort.apply(this, arguments);\n      }\n\n      return getFreePort;\n    }()\n    /**\n     * @returns {string}\n     */\n\n  }, {\n    key: \"findCacheDir\",\n    value: function findCacheDir() {\n      var cwd = process.cwd();\n      /**\n       * @type {string | undefined}\n       */\n\n      var dir = cwd;\n\n      for (;;) {\n        try {\n          if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break; // eslint-disable-next-line no-empty\n        } catch (e) {}\n\n        var parent = path.dirname(dir);\n\n        if (dir === parent) {\n          // eslint-disable-next-line no-undefined\n          dir = undefined;\n          break;\n        }\n\n        dir = parent;\n      }\n\n      if (!dir) {\n        return path.resolve(cwd, \".cache/webpack-dev-server\");\n      } else if (process.versions.pnp === \"1\") {\n        return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n      } else if (process.versions.pnp === \"3\") {\n        return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n      }\n\n      return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n    }\n  }]);\n\n  return Server;\n}();\n\nmodule.exports = Server;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/webpack-dev-server/lib/Server.js"],"names":["os","require","path","url","util","fs","ipaddr","defaultGateway","express","validate","schema","process","env","WEBPACK_SERVE","Server","options","compiler","hooks","deprecate","name","baseDataPath","logger","getInfrastructureLogger","staticWatchers","listeners","webSocketProxies","sockets","currentHash","undefined","additionalEntries","isWebTarget","externalsPresets","web","includes","target","client","webSocketURLStr","webSocketServer","webSocketURL","searchParams","URLSearchParams","protocol","server","type","set","username","password","hostname","isSockJSType","host","port","Number","String","pathname","prefix","logging","reconnect","toString","push","resolve","hot","webpack","EntryPlugin","additionalEntry","context","apply","prependEntry","originalEntry","newAdditionalEntries","Promise","then","entry","Array","isArray","clone","Object","keys","forEach","key","entryDescription","entriesClone","slice","concat","newEntry","entryOption","call","compilers","length","compilerWithDevServer","find","config","devServer","compilerWithWebPreset","compilerOptions","getCompilerOptions","compilerWatchOptions","watchOptions","getWatchOptions","getPolling","usePolling","poll","Boolean","getInterval","interval","rest","ignoreInitial","persistent","followSymlinks","atomic","alwaysStat","ignorePermissionErrors","ignored","getStaticItem","optionsForStatic","getDefaultStaticOptions","directory","join","cwd","staticOptions","publicPath","serveIndex","icons","watch","item","def","isAbsoluteURL","Error","allowedHosts","bonjour","parsedURL","URL","overlay","errors","warnings","Infinity","infrastructureLogging","level","compress","devMiddleware","historyApiFallback","isHTTPs","https","isSPDY","http2","spdy","protocols","requestCert","httpsProperties","property","value","readFile","Buffer","isBuffer","stats","lstatSync","realpathSync","isFile","error","readFileSync","map","cert","certificateDir","findCacheDir","certificatePath","promises","stat","certificate","certificateExists","certificateTtl","certificateStat","now","Date","ctime","del","info","force","selfsigned","attributes","pems","generate","algorithm","days","keySize","extensions","cA","keyCertSign","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","serverAuth","clientAuth","codeSigning","timeStamping","altNames","ip","mkdir","recursive","writeFile","private","encoding","fakeCert","cacert","ca","warn","ipc","isWindows","platform","pipePrefix","tmpdir","pipeName","liveReload","magicHtml","defaultOpenOptions","wait","getOpenItemsFromObject","normalizedOptions","app","normalizedTarget","singleTarget","open","result","onAfterSetupMiddleware","onBeforeSetupMiddleware","proxy","prototype","hasOwnProperty","proxyOptions","correctedContext","replace","getLogLevelForProxy","logLevel","logProvider","setupExitSignals","static","watchFiles","paths","defaultWebSocketServerType","defaultWebSocketServerOptions","clientImplementation","clientImplementationFound","isKnownWebSocketServerImplementation","clientTransport","webSocketTransport","e","implementation","implementationFound","ProgressPlugin","percent","msg","addInfo","pluginName","Math","floor","sendMessage","clients","emit","addAdditionalEntries","ProvidePlugin","__webpack_dev_server_client__","getClientTransport","plugins","HMRPluginExists","p","constructor","HotModuleReplacementPlugin","plugin","progress","setupProgressPlugin","setupHooks","setupApp","setupHostHeaderCheck","setupDevMiddleware","setupBuiltInRoutes","setupWatchFiles","setupWatchStaticFiles","setupMiddlewares","createServer","signals","needForceShutdown","signal","listener","exit","stopCallback","close","on","webSocketProxy","upgrade","statsObj","DEFAULT_STATS","warningsFilter","toJson","invalid","tap","done","sendStats","getStats","all","req","res","next","checkHeader","headers","send","webpackDevMiddleware","middleware","get","setHeader","createReadStream","clientPath","__dirname","pipe","_req","invalidate","end","waitUntilValid","write","statsForPrint","children","index","assets","asset","assetName","assetURL","staticOption","middlewares","compression","setHeaders","bind","createProxyMiddleware","getProxyMiddleware","proxyConfig","router","proxyConfigOrCallback","proxyMiddleware","ws","handler","newProxyConfig","isByPassFuncDefined","bypass","bypassUrl","connectHistoryApiFallback","verbose","log","method","serveMagicHtml","use","socket","once","splice","indexOf","getServerTransport","request","defaultOpenTarget","openTarget","catch","arguments","publish","subtypes","callback","unpublishAll","destroy","isColorSupported","cyan","red","getColorsOption","colorsEnabled","colors","useColor","address","prettyPrintURL","newHostname","format","localhost","loopbackIPv4","loopbackIPv6","networkUrlIPv4","networkUrlIPv6","isIP","parse","parsedIP","range","networkIPv4","internalIPSync","networkIPv6","kind","isIPv4MappedAddress","toIPv4Address","loopbacks","openBrowser","bonjourProtocol","allHeaders","header","headerToCheck","hostHeader","test","isValidHostname","IPv4","isValid","IPv6","hostIdx","allowedHost","substring","endsWith","data","params","readyState","JSON","stringify","_path","filename","getFilenameFromUrl","outputFileSystem","statSync","queries","_parsedUrl","search","responsePage","shouldEmit","hash","hasErrors","preventReloading","watchPath","chokidar","watcher","normalizeOptions","reject","net","Socket","code","unlinkSync","connect","getHostname","getFreePort","initialize","listenOptions","listen","READ_WRITE","chmod","createWebSocketServer","runBonjour","logStatus","onListening","start","stopBonjour","terminate","removeListener","stop","fn","getArguments","processArguments","errorDetails","gateway","gatewayIp","values","networkInterfaces","addresses","cidr","parseCIDR","match","family","findIp","sync","internalIP","pRetry","portfinder","basePort","WEBPACK_DEV_SERVER_BASE_PORT","parseInt","defaultPortRetry","WEBPACK_DEV_SERVER_PORT_RETRY","getPortPromise","retries","dir","parent","dirname","versions","pnp","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,EAAE,GAAGJ,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMM,cAAc,GAAGN,OAAO,CAAC,iBAAD,CAA9B;;AACA,IAAMO,OAAO,GAAGP,OAAO,CAAC,SAAD,CAAvB;;AACA,eAAqBA,OAAO,CAAC,cAAD,CAA5B;AAAA,IAAQQ,QAAR,YAAQA,QAAR;;AACA,IAAMC,MAAM,GAAGT,OAAO,CAAC,gBAAD,CAAtB;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAI,CAACU,OAAO,CAACC,GAAR,CAAYC,aAAjB,EAAgC;AAC9B;AACA;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,IAA5B;AACD;;IAEKC,M;AACJ;AACF;AACA;AACA;AACE,oBAAoC;AAAA,QAAxBC,OAAwB,uEAAd,EAAc;AAAA,QAAVC,QAAU;;AAAA;;AAClC;AACA;AAAI;AAAyCD,IAAAA,OAAD,CAAUE,KAAtD,EAA6D;AAC3Db,MAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,yIAFF,EAGE,oCAHF;AAD2D,iBAOhC,CAACF,QAAD,EAAWD,OAAX,CAPgC;AAAA;AAO1DA,MAAAA,OAP0D,sBAOhD,EAPgD;AAO5CC,MAAAA,QAP4C;AAQ5D;;AAEDP,IAAAA,QAAQ;AAAC;AAAuBC,IAAAA,MAAxB,EAAiCK,OAAjC,EAA0C;AAChDI,MAAAA,IAAI,EAAE,YAD0C;AAEhDC,MAAAA,YAAY,EAAE;AAFkC,KAA1C,CAAR;AAKA,SAAKJ,QAAL;AAAgB;AAAyCA,IAAAA,QAAzD;AACA;AACJ;AACA;;AACI,SAAKK,MAAL,GAAc,KAAKL,QAAL,CAAcM,uBAAd,CAAsC,oBAAtC,CAAd;AACA,SAAKP,OAAL;AAAe;AAA8BA,IAAAA,OAA7C;AACA;AACJ;AACA;;AACI,SAAKQ,cAAL,GAAsB,EAAtB;AACA;AACJ;AACA;AACA;;AACI,SAAKC,SAAL,GAAiB,EAAjB,CA/BkC,CAgClC;;AACA;AACJ;AACA;AACA;;AACI,SAAKC,gBAAL,GAAwB,EAAxB;AACA;AACJ;AACA;;AACI,SAAKC,OAAL,GAAe,EAAf;AACA;AACJ;AACA;AACA;AACI;;AACA,SAAKC,WAAL,GAAmBC,SAAnB;AACD,G,CAED;;;;;;AAyLA;AACF;AACA;AACA;AACE,kCAAqBZ,QAArB,EAA+B;AAC7B;AACJ;AACA;AACI,UAAMa,iBAAiB,GAAG,EAA1B;AAEA,UAAMC,WAAW,GAAGd,QAAQ,CAACD,OAAT,CAAiBgB,gBAAjB,GAChBf,QAAQ,CAACD,OAAT,CAAiBgB,gBAAjB,CAAkCC,GADlB,GAEhB,CACE,KADF,EAEE,WAFF,EAGE,kBAHF,EAIE,mBAJF,EAKE,aALF,EAME;AACAJ,MAAAA,SAPF,EAQE,IARF,EASEK,QATF;AASW;AAAuBjB,MAAAA,QAAQ,CAACD,OAAT,CAAiBmB,MATnD,CAFJ,CAN6B,CAmB7B;;AACA,UAAI,KAAKnB,OAAL,CAAaoB,MAAb,IAAuBL,WAA3B,EAAwC;AACtC,YAAIM,eAAe,GAAG,EAAtB;;AAEA,YAAI,KAAKrB,OAAL,CAAasB,eAAjB,EAAkC;AAChC,cAAMC,YAAY;AAChB;;AAEE;AACC,eAAKvB,OAAL,CAAaoB,MAAd,CAAsBG,YAJ1B;AAMA,cAAMD,eAAe;AACnB;AACC,eAAKtB,OAAL,CAAasB,eAFhB;AAGA,cAAME,YAAY,GAAG,IAAIC,eAAJ,EAArB;AAEA;;AACA,cAAIC,QAAJ,CAbgC,CAehC;;AACA,cAAI,OAAOH,YAAY,CAACG,QAApB,KAAiC,WAArC,EAAkD;AAChDA,YAAAA,QAAQ,GAAGH,YAAY,CAACG,QAAxB;AACD,WAFD,MAEO;AACLA,YAAAA,QAAQ;AACN;AACC,iBAAK1B,OAAL,CAAa2B,MAAd,CAAsBC,IAAtB,KAA+B,MAA/B,GAAwC,KAAxC,GAAgD,MAFlD;AAGD;;AAEDJ,UAAAA,YAAY,CAACK,GAAb,CAAiB,UAAjB,EAA6BH,QAA7B;;AAEA,cAAI,OAAOH,YAAY,CAACO,QAApB,KAAiC,WAArC,EAAkD;AAChDN,YAAAA,YAAY,CAACK,GAAb,CAAiB,UAAjB,EAA6BN,YAAY,CAACO,QAA1C;AACD;;AAED,cAAI,OAAOP,YAAY,CAACQ,QAApB,KAAiC,WAArC,EAAkD;AAChDP,YAAAA,YAAY,CAACK,GAAb,CAAiB,UAAjB,EAA6BN,YAAY,CAACQ,QAA1C;AACD;AAED;;;AACA,cAAIC,QAAJ,CAnCgC,CAqChC;AACA;;AACA,cAAMC,YAAY,GAAGX,eAAe,CAACM,IAAhB,KAAyB,QAA9C,CAvCgC,CAyChC;;AACA,cAAI,OAAOL,YAAY,CAACS,QAApB,KAAiC,WAArC,EAAkD;AAChDA,YAAAA,QAAQ,GAAGT,YAAY,CAACS,QAAxB;AACD,WAFD,CAGA;AAHA,eAIK,IACH,OAAOV,eAAe,CAACtB,OAAhB,CAAwBkC,IAA/B,KAAwC,WAAxC,IACA,CAACD,YAFE,EAGH;AACAD,YAAAA,QAAQ,GAAGV,eAAe,CAACtB,OAAhB,CAAwBkC,IAAnC;AACD,WALI,CAML;AANK,eAOA,IAAI,OAAO,KAAKlC,OAAL,CAAakC,IAApB,KAA6B,WAAjC,EAA8C;AACjDF,YAAAA,QAAQ,GAAG,KAAKhC,OAAL,CAAakC,IAAxB;AACD,WAFI,CAGL;AAHK,eAIA;AACHF,YAAAA,QAAQ,GAAG,SAAX;AACD;;AAEDR,UAAAA,YAAY,CAACK,GAAb,CAAiB,UAAjB,EAA6BG,QAA7B;AAEA;;AACA,cAAIG,IAAJ,CAhEgC,CAkEhC;;AACA,cAAI,OAAOZ,YAAY,CAACY,IAApB,KAA6B,WAAjC,EAA8C;AAC5CA,YAAAA,IAAI,GAAGZ,YAAY,CAACY,IAApB;AACD,WAFD,CAGA;AAHA,eAIK,IACH,OAAOb,eAAe,CAACtB,OAAhB,CAAwBmC,IAA/B,KAAwC,WAAxC,IACA,CAACF,YAFE,EAGH;AACAE,YAAAA,IAAI,GAAGb,eAAe,CAACtB,OAAhB,CAAwBmC,IAA/B;AACD,WALI,CAML;AANK,eAOA,IAAI,OAAO,KAAKnC,OAAL,CAAamC,IAApB,KAA6B,QAAjC,EAA2C;AAC9CA,YAAAA,IAAI,GAAG,KAAKnC,OAAL,CAAamC,IAApB;AACD,WAFI,CAGL;AAHK,eAIA,IACH,OAAO,KAAKnC,OAAL,CAAamC,IAApB,KAA6B,QAA7B,IACA,KAAKnC,OAAL,CAAamC,IAAb,KAAsB,MAFnB,EAGH;AACAA,YAAAA,IAAI,GAAGC,MAAM,CAAC,KAAKpC,OAAL,CAAamC,IAAd,CAAb;AACD,WALI,CAML;AANK,eAOA;AACHA,YAAAA,IAAI,GAAG,GAAP;AACD;;AAEDX,UAAAA,YAAY,CAACK,GAAb,CAAiB,MAAjB,EAAyBQ,MAAM,CAACF,IAAD,CAA/B;AAEA;;AACA,cAAIG,QAAQ,GAAG,EAAf,CAhGgC,CAkGhC;;AACA,cAAI,OAAOf,YAAY,CAACe,QAApB,KAAiC,WAArC,EAAkD;AAChDA,YAAAA,QAAQ,GAAGf,YAAY,CAACe,QAAxB;AACD,WAFD,CAGA;AAHA,eAIK,IACH,OAAOhB,eAAe,CAACtB,OAAhB,CAAwBuC,MAA/B,KAA0C,WAA1C,IACA,OAAOjB,eAAe,CAACtB,OAAhB,CAAwBb,IAA/B,KAAwC,WAFrC,EAGH;AACAmD,YAAAA,QAAQ,GACNhB,eAAe,CAACtB,OAAhB,CAAwBuC,MAAxB,IAAkCjB,eAAe,CAACtB,OAAhB,CAAwBb,IAD5D;AAED;;AAEDqC,UAAAA,YAAY,CAACK,GAAb,CAAiB,UAAjB,EAA6BS,QAA7B;AAEA,cAAMlB,MAAM;AAAG;AAAoC,eAAKpB,OAAL,CAAaoB,MAAhE;;AAEA,cAAI,OAAOA,MAAM,CAACoB,OAAd,KAA0B,WAA9B,EAA2C;AACzChB,YAAAA,YAAY,CAACK,GAAb,CAAiB,SAAjB,EAA4BT,MAAM,CAACoB,OAAnC;AACD;;AAED,cAAI,OAAOpB,MAAM,CAACqB,SAAd,KAA4B,WAAhC,EAA6C;AAC3CjB,YAAAA,YAAY,CAACK,GAAb,CACE,WADF,EAEE,OAAOT,MAAM,CAACqB,SAAd,KAA4B,QAA5B,GACIJ,MAAM,CAACjB,MAAM,CAACqB,SAAR,CADV,GAEI,IAJN;AAMD;;AAEDpB,UAAAA,eAAe,GAAGG,YAAY,CAACkB,QAAb,EAAlB;AACD;;AAED5B,QAAAA,iBAAiB,CAAC6B,IAAlB,WACKzD,OAAO,CAAC0D,OAAR,CAAgB,oBAAhB,CADL,cAC8CvB,eAD9C;AAGD;;AAED,UAAI,KAAKrB,OAAL,CAAa6C,GAAb,KAAqB,MAAzB,EAAiC;AAC/B/B,QAAAA,iBAAiB,CAAC6B,IAAlB,CAAuBzD,OAAO,CAAC0D,OAAR,CAAgB,6BAAhB,CAAvB;AACD,OAFD,MAEO,IAAI,KAAK5C,OAAL,CAAa6C,GAAjB,EAAsB;AAC3B/B,QAAAA,iBAAiB,CAAC6B,IAAlB,CAAuBzD,OAAO,CAAC0D,OAAR,CAAgB,wBAAhB,CAAvB;AACD;;AAED,UAAME,OAAO,GAAG7C,QAAQ,CAAC6C,OAAT,IAAoB5D,OAAO,CAAC,SAAD,CAA3C,CArK6B,CAuK7B;;;AACA,UAAI,OAAO4D,OAAO,CAACC,WAAf,KAA+B,WAAnC,EAAgD;AAAA,mDAChBjC,iBADgB;AAAA;;AAAA;AAC9C,8DAAiD;AAAA,gBAAtCkC,eAAsC;AAC/C,gBAAIF,OAAO,CAACC,WAAZ,CAAwB9C,QAAQ,CAACgD,OAAjC,EAA0CD,eAA1C,EAA2D;AACzD;AACA5C,cAAAA,IAAI,EAAES;AAFmD,aAA3D,EAGGqC,KAHH,CAGSjD,QAHT;AAID;AAN6C;AAAA;AAAA;AAAA;AAAA;AAO/C,OAPD,CAQA;AARA,WASK;AACH;AACN;AACA;AACA;AACA;AACA;AACM,YAAMkD,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAgBC,oBAAhB,EAAyC;AAC5D,cAAI,OAAOD,aAAP,KAAyB,UAA7B,EAAyC;AACvC,mBAAO;AAAA,qBACLE,OAAO,CAACV,OAAR,CAAgBQ,aAAa,EAA7B,EAAiCG,IAAjC,CAAsC,UAACC,KAAD;AAAA,uBACpCL,YAAY,CAACK,KAAD,EAAQH,oBAAR,CADwB;AAAA,eAAtC,CADK;AAAA,aAAP;AAID;;AAED,cACE,QAAOD,aAAP,MAAyB,QAAzB,IACA,CAACK,KAAK,CAACC,OAAN,CAAcN,aAAd,CAFH,EAGE;AACA;AACA,gBAAMO,KAAK,GAAG,EAAd;AAEAC,YAAAA,MAAM,CAACC,IAAP,CAAYT,aAAZ,EAA2BU,OAA3B,CAAmC,UAACC,GAAD,EAAS;AAC1C;AACA,kBAAMC,gBAAgB,GAAGZ,aAAa,CAACW,GAAD,CAAtC;AAEAJ,cAAAA,KAAK,CAACI,GAAD,CAAL,GAAaZ,YAAY,CAACa,gBAAD,EAAmBX,oBAAnB,CAAzB;AACD,aALD;AAOA,mBAAOM,KAAP;AACD,WAvB2D,CAyB5D;AACA;;AACA;;;AACA,cAAMM,YAAY,GAAGnD,iBAAiB,CAACoD,KAAlB,CAAwB,CAAxB,CAArB;AAEA,aAAGC,MAAH,CAAUf,aAAV,EAAyBU,OAAzB,CAAiC,UAACM,QAAD,EAAc;AAC7C,gBAAI,CAACH,YAAY,CAAC/C,QAAb,CAAsBkD,QAAtB,CAAL,EAAsC;AACpCH,cAAAA,YAAY,CAACtB,IAAb,CAAkByB,QAAlB;AACD;AACF,WAJD;AAMA,iBAAOH,YAAP;AACD,SArCD;;AAuCAhE,QAAAA,QAAQ,CAACD,OAAT,CAAiBwD,KAAjB,GAAyBL,YAAY,CACnClD,QAAQ,CAACD,OAAT,CAAiBwD,KAAjB,IAA0B,OADS,EAEnC1C,iBAFmC,CAArC;AAIAb,QAAAA,QAAQ,CAACC,KAAT,CAAemE,WAAf,CAA2BC,IAA3B;AACE;AAAuBrE,QAAAA,QAAQ,CAACD,OAAT,CAAiBiD,OAD1C,EAEEhD,QAAQ,CAACD,OAAT,CAAiBwD,KAFnB;AAID;AACF;AAED;AACF;AACA;AACA;;;;WACE,8BAAqB;AACnB,UACE;AAAQ;AAA8B,WAAKvD,QAAN,CAAgBsE,SAArD,KACA,WAFF,EAGE;AACA;AAAI;AAA8B,aAAKtE,QAAN,CAAgBsE,SAAhB,CAA0BC,MAA1B,KAAqC,CAAtE,EAAyE;AACvE;AACE;AACC,iBAAKvE,QAAN,CAAgBsE,SAAhB,CAA0B,CAA1B,EAA6BvE;AAF/B;AAID,SAND,CAQA;;;AACA,YAAMyE,qBAAqB;AACzB;AACC,aAAKxE,QAAN,CAAgBsE,SAAhB,CAA0BG,IAA1B,CAA+B,UAACC,MAAD;AAAA,iBAAYA,MAAM,CAAC3E,OAAP,CAAe4E,SAA3B;AAAA,SAA/B,CAFF;;AAIA,YAAIH,qBAAJ,EAA2B;AACzB,iBAAOA,qBAAqB,CAACzE,OAA7B;AACD,SAfD,CAiBA;;;AACA,YAAM6E,qBAAqB;AACzB;AACC,aAAK5E,QAAN,CAAgBsE,SAAhB,CAA0BG,IAA1B,CACE,UAACC,MAAD;AAAA,iBACGA,MAAM,CAAC3E,OAAP,CAAegB,gBAAf,IACC2D,MAAM,CAAC3E,OAAP,CAAegB,gBAAf,CAAgCC,GADlC,IAEA,CACE,KADF,EAEE,WAFF,EAGE,kBAHF,EAIE,mBAJF,EAKE,aALF,EAME;AACAJ,UAAAA,SAPF,EAQE,IARF,EASEK,QATF;AASW;AAAuByD,UAAAA,MAAM,CAAC3E,OAAP,CAAemB,MATjD,CAHF;AAAA,SADF,CAFF;;AAkBA,YAAI0D,qBAAJ,EAA2B;AACzB,iBAAOA,qBAAqB,CAAC7E,OAA7B;AACD,SAtCD,CAwCA;;;AACA;AAAO;AAA8B,eAAKC,QAAN,CAAgBsE,SAAhB,CAA0B,CAA1B,EAA6BvE;AAAjE;AACD;;AAED;AAAO;AAAyB,aAAKC,QAAN,CAAgBD;AAA/C;AACD;AAED;AACF;AACA;AACA;;;;;sFACE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUA,gBAAAA,OADV,GACsB,IADtB,CACUA,OADV;AAEQ8E,gBAAAA,eAFR,GAE0B,KAAKC,kBAAL,EAF1B,EAGE;;AACMC,gBAAAA,oBAJR,GAI+BF,eAAe,CAACG,YAAhB,IAAgC,EAJ/D;AAKE;AACJ;AACA;AACA;;AACUC,gBAAAA,eATR,GAS0B,SAAlBA,eAAkB,GAAuB;AAAA,sBAAtBD,YAAsB,uEAAP,EAAO;;AAC7C,sBAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,wBAAI,OAAOF,YAAY,CAACG,UAApB,KAAmC,WAAvC,EAAoD;AAClD,6BAAOH,YAAY,CAACG,UAApB;AACD;;AAED,wBAAI,OAAOH,YAAY,CAACI,IAApB,KAA6B,WAAjC,EAA8C;AAC5C,6BAAOC,OAAO,CAACL,YAAY,CAACI,IAAd,CAAd;AACD;;AAED,wBAAI,OAAOL,oBAAoB,CAACK,IAA5B,KAAqC,WAAzC,EAAsD;AACpD,6BAAOC,OAAO,CAACN,oBAAoB,CAACK,IAAtB,CAAd;AACD;;AAED,2BAAO,KAAP;AACD,mBAdD;;AAeA,sBAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,wBAAI,OAAON,YAAY,CAACO,QAApB,KAAiC,WAArC,EAAkD;AAChD,6BAAOP,YAAY,CAACO,QAApB;AACD;;AAED,wBAAI,OAAOP,YAAY,CAACI,IAApB,KAA6B,QAAjC,EAA2C;AACzC,6BAAOJ,YAAY,CAACI,IAApB;AACD;;AAED,wBAAI,OAAOL,oBAAoB,CAACK,IAA5B,KAAqC,QAAzC,EAAmD;AACjD,6BAAOL,oBAAoB,CAACK,IAA5B;AACD;AACF,mBAZD;;AAcA,sBAAMD,UAAU,GAAGD,UAAU,EAA7B;AACA,sBAAMK,QAAQ,GAAGD,WAAW,EAA5B;;AACA,sBAAQF,IAAR,GAA0BJ,YAA1B,CAAQI,IAAR;AAAA,sBAAiBI,IAAjB,4BAA0BR,YAA1B;;AAEA;AACES,oBAAAA,aAAa,EAAE,IADjB;AAEEC,oBAAAA,UAAU,EAAE,IAFd;AAGEC,oBAAAA,cAAc,EAAE,KAHlB;AAIEC,oBAAAA,MAAM,EAAE,KAJV;AAKEC,oBAAAA,UAAU,EAAE,IALd;AAMEC,oBAAAA,sBAAsB,EAAE,IAN1B;AAOE;AACAX,oBAAAA,UAAU,EAAVA,UARF;AASEI,oBAAAA,QAAQ,EAARA,QATF;AAUEQ,oBAAAA,OAAO,EAAEf,YAAY,CAACe;AAVxB,qBAYKP,IAZL;AAcD,iBAzDH;AA0DE;AACJ;AACA;AACA;;;AACUQ,gBAAAA,aA9DR,GA8DwB,SAAhBA,aAAgB,CAACC,gBAAD,EAAsB;AAC1C,sBAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,2BAAO;AACLC,sBAAAA,SAAS,EAAEjH,IAAI,CAACkH,IAAL,CAAUzG,OAAO,CAAC0G,GAAR,EAAV,EAAyB,QAAzB,CADN;AAELC,sBAAAA,aAAa,EAAE,EAFV;AAGLC,sBAAAA,UAAU,EAAE,CAAC,GAAD,CAHP;AAILC,sBAAAA,UAAU,EAAE;AAAEC,wBAAAA,KAAK,EAAE;AAAT,uBAJP;AAKLC,sBAAAA,KAAK,EAAEzB,eAAe;AALjB,qBAAP;AAOD,mBARD;AAUA;;;AACA,sBAAI0B,IAAJ;;AAEA,sBAAI,OAAOV,gBAAP,KAA4B,WAAhC,EAA6C;AAC3CU,oBAAAA,IAAI,GAAGT,uBAAuB,EAA9B;AACD,mBAFD,MAEO,IAAI,OAAOD,gBAAP,KAA4B,QAAhC,EAA0C;AAC/CU,oBAAAA,IAAI,mCACCT,uBAAuB,EADxB;AAEFC,sBAAAA,SAAS,EAAEF;AAFT,sBAAJ;AAID,mBALM,MAKA;AACL,wBAAMW,GAAG,GAAGV,uBAAuB,EAAnC;AAEAS,oBAAAA,IAAI,GAAG;AACLR,sBAAAA,SAAS,EACP,OAAOF,gBAAgB,CAACE,SAAxB,KAAsC,WAAtC,GACIF,gBAAgB,CAACE,SADrB,GAEIS,GAAG,CAACT,SAJL;AAKL;AACAG,sBAAAA,aAAa,EACX,OAAOL,gBAAgB,CAACK,aAAxB,KAA0C,WAA1C,GACIL,gBAAgB,CAACK,aADrB,GAEIM,GAAG,CAACN,aATL;AAULC,sBAAAA,UAAU,EACR;AACA,6BAAON,gBAAgB,CAACM,UAAxB,KAAuC,WAAvC,GACI/C,KAAK,CAACC,OAAN,CAAcwC,gBAAgB,CAACM,UAA/B,IACEN,gBAAgB,CAACM,UADnB,GAEE,CAACN,gBAAgB,CAACM,UAAlB,CAHN,GAIIK,GAAG,CAACL,UAhBL;AAiBL;AACAC,sBAAAA,UAAU,EACR;AACA,6BAAOP,gBAAgB,CAACO,UAAxB,KAAuC,WAAvC,GACI,OAAOP,gBAAgB,CAACO,UAAxB,KAAuC,SAAvC,IACAP,gBAAgB,CAACO,UADjB,GAEEI,GAAG,CAACJ,UAFN,GAGEP,gBAAgB,CAACO,UAJvB,GAKII,GAAG,CAACJ,UAzBL;AA0BLE,sBAAAA,KAAK,EACH;AACA,6BAAOT,gBAAgB,CAACS,KAAxB,KAAkC,WAAlC,GACI;AACA,6BAAOT,gBAAgB,CAACS,KAAxB,KAAkC,SAAlC,GACET,gBAAgB,CAACS,KAAjB,GACEE,GAAG,CAACF,KADN,GAEE,KAHJ,GAIEzB,eAAe,CAACgB,gBAAgB,CAACS,KAAlB,CANrB,GAOIE,GAAG,CAACF;AAnCL,qBAAP;AAqCD;;AAED,sBAAI5G,MAAM,CAAC+G,aAAP,CAAqBF,IAAI,CAACR,SAA1B,CAAJ,EAA0C;AACxC,0BAAM,IAAIW,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAED,yBAAOH,IAAP;AACD,iBAlIH;;AAoIE,oBAAI,OAAO5G,OAAO,CAACgH,YAAf,KAAgC,WAApC,EAAiD;AAC/C;AACAhH,kBAAAA,OAAO,CAACgH,YAAR,GAAuB,MAAvB;AACD,iBAHD,CAIA;AAJA,qBAKK,IACH,OAAOhH,OAAO,CAACgH,YAAf,KAAgC,QAAhC,IACAhH,OAAO,CAACgH,YAAR,KAAyB,MADzB,IAEAhH,OAAO,CAACgH,YAAR,KAAyB,KAHtB,EAIH;AACAhH,kBAAAA,OAAO,CAACgH,YAAR,GAAuB,CAAChH,OAAO,CAACgH,YAAT,CAAvB;AACD,iBANI,CAOL;AAPK,qBAQA,IACHvD,KAAK,CAACC,OAAN,CAAc1D,OAAO,CAACgH,YAAtB,KACAhH,OAAO,CAACgH,YAAR,CAAqB9F,QAArB,CAA8B,KAA9B,CAFG,EAGH;AACAlB,kBAAAA,OAAO,CAACgH,YAAR,GAAuB,KAAvB;AACD;;AAED,oBAAI,OAAOhH,OAAO,CAACiH,OAAf,KAA2B,WAA/B,EAA4C;AAC1CjH,kBAAAA,OAAO,CAACiH,OAAR,GAAkB,KAAlB;AACD,iBAFD,MAEO,IAAI,OAAOjH,OAAO,CAACiH,OAAf,KAA2B,SAA/B,EAA0C;AAC/CjH,kBAAAA,OAAO,CAACiH,OAAR,GAAkBjH,OAAO,CAACiH,OAAR,GAAkB,EAAlB,GAAuB,KAAzC;AACD;;AAED,oBACE,OAAOjH,OAAO,CAACoB,MAAf,KAA0B,WAA1B,IACC,QAAOpB,OAAO,CAACoB,MAAf,MAA0B,QAA1B,IAAsCpB,OAAO,CAACoB,MAAR,KAAmB,IAF5D,EAGE;AACA,sBAAI,CAACpB,OAAO,CAACoB,MAAb,EAAqB;AACnBpB,oBAAAA,OAAO,CAACoB,MAAR,GAAiB,EAAjB;AACD;;AAED,sBAAI,OAAOpB,OAAO,CAACoB,MAAR,CAAeG,YAAtB,KAAuC,WAA3C,EAAwD;AACtDvB,oBAAAA,OAAO,CAACoB,MAAR,CAAeG,YAAf,GAA8B,EAA9B;AACD,mBAFD,MAEO,IAAI,OAAOvB,OAAO,CAACoB,MAAR,CAAeG,YAAtB,KAAuC,QAA3C,EAAqD;AACpD2F,oBAAAA,SADoD,GACxC,IAAIC,GAAJ,CAAQnH,OAAO,CAACoB,MAAR,CAAeG,YAAvB,CADwC;AAG1DvB,oBAAAA,OAAO,CAACoB,MAAR,CAAeG,YAAf,GAA8B;AAC5BG,sBAAAA,QAAQ,EAAEwF,SAAS,CAACxF,QADQ;AAE5BM,sBAAAA,QAAQ,EAAEkF,SAAS,CAAClF,QAFQ;AAG5BG,sBAAAA,IAAI,EAAE+E,SAAS,CAAC/E,IAAV,CAAeqC,MAAf,GAAwB,CAAxB,GAA4BpC,MAAM,CAAC8E,SAAS,CAAC/E,IAAX,CAAlC,GAAqD,EAH/B;AAI5BG,sBAAAA,QAAQ,EAAE4E,SAAS,CAAC5E,QAJQ;AAK5BR,sBAAAA,QAAQ,EAAEoF,SAAS,CAACpF,QALQ;AAM5BC,sBAAAA,QAAQ,EAAEmF,SAAS,CAACnF;AANQ,qBAA9B;AAQD,mBAXM,MAWA,IAAI,OAAO/B,OAAO,CAACoB,MAAR,CAAeG,YAAf,CAA4BY,IAAnC,KAA4C,QAAhD,EAA0D;AAC/DnC,oBAAAA,OAAO,CAACoB,MAAR,CAAeG,YAAf,CAA4BY,IAA5B,GAAmCC,MAAM,CACvCpC,OAAO,CAACoB,MAAR,CAAeG,YAAf,CAA4BY,IADW,CAAzC;AAGD,mBAtBD,CAwBA;;;AACA,sBAAI,OAAOnC,OAAO,CAACoB,MAAR,CAAegG,OAAtB,KAAkC,WAAtC,EAAmD;AACjDpH,oBAAAA,OAAO,CAACoB,MAAR,CAAegG,OAAf,GAAyB,IAAzB;AACD,mBAFD,MAEO,IAAI,OAAOpH,OAAO,CAACoB,MAAR,CAAegG,OAAtB,KAAkC,SAAtC,EAAiD;AACtDpH,oBAAAA,OAAO,CAACoB,MAAR,CAAegG,OAAf;AACEC,sBAAAA,MAAM,EAAE,IADV;AAEEC,sBAAAA,QAAQ,EAAE;AAFZ,uBAGKtH,OAAO,CAACoB,MAAR,CAAegG,OAHpB;AAKD;;AAED,sBAAI,OAAOpH,OAAO,CAACoB,MAAR,CAAeqB,SAAtB,KAAoC,WAAxC,EAAqD;AACnDzC,oBAAAA,OAAO,CAACoB,MAAR,CAAeqB,SAAf,GAA2B,EAA3B;AACD,mBAFD,MAEO,IAAIzC,OAAO,CAACoB,MAAR,CAAeqB,SAAf,KAA6B,IAAjC,EAAuC;AAC5CzC,oBAAAA,OAAO,CAACoB,MAAR,CAAeqB,SAAf,GAA2B8E,QAA3B;AACD,mBAFM,MAEA,IAAIvH,OAAO,CAACoB,MAAR,CAAeqB,SAAf,KAA6B,KAAjC,EAAwC;AAC7CzC,oBAAAA,OAAO,CAACoB,MAAR,CAAeqB,SAAf,GAA2B,CAA3B;AACD,mBAzCD,CA2CA;;;AACA,sBAAI,OAAOzC,OAAO,CAACoB,MAAR,CAAeoB,OAAtB,KAAkC,WAAtC,EAAmD;AACjDxC,oBAAAA,OAAO,CAACoB,MAAR,CAAeoB,OAAf,GAAyBsC,eAAe,CAAC0C,qBAAhB,GACrB1C,eAAe,CAAC0C,qBAAhB,CAAsCC,KADjB,GAErB,MAFJ;AAGD;AACF;;AAED,oBAAI,OAAOzH,OAAO,CAAC0H,QAAf,KAA4B,WAAhC,EAA6C;AAC3C1H,kBAAAA,OAAO,CAAC0H,QAAR,GAAmB,IAAnB;AACD;;AAED,oBAAI,OAAO1H,OAAO,CAAC2H,aAAf,KAAiC,WAArC,EAAkD;AAChD3H,kBAAAA,OAAO,CAAC2H,aAAR,GAAwB,EAAxB;AACD,iBA1NH,CA4NE;;;AAEA,oBAAI,OAAO3H,OAAO,CAAC4H,kBAAf,KAAsC,WAA1C,EAAuD;AACrD5H,kBAAAA,OAAO,CAAC4H,kBAAR,GAA6B,KAA7B;AACD,iBAFD,MAEO,IACL,OAAO5H,OAAO,CAAC4H,kBAAf,KAAsC,SAAtC,IACA5H,OAAO,CAAC4H,kBAFH,EAGL;AACA5H,kBAAAA,OAAO,CAAC4H,kBAAR,GAA6B,EAA7B;AACD,iBArOH,CAuOE;;;AAEA5H,gBAAAA,OAAO,CAAC6C,GAAR,GACE,OAAO7C,OAAO,CAAC6C,GAAf,KAAuB,SAAvB,IAAoC7C,OAAO,CAAC6C,GAAR,KAAgB,MAApD,GACI7C,OAAO,CAAC6C,GADZ,GAEI,IAHN;AAKMgF,gBAAAA,OA9OR,GA8OkBvC,OAAO,CAACtF,OAAO,CAAC8H,KAAT,CA9OzB;AA+OQC,gBAAAA,MA/OR,GA+OiBzC,OAAO,CAACtF,OAAO,CAACgI,KAAT,CA/OxB;;AAiPE,oBAAIH,OAAJ,EAAa;AACX;AACAxI,kBAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,+DAFF,EAGE,8BAHF;AAKD;;AAED,oBAAI4H,MAAJ,EAAY;AACV;AACA1I,kBAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,+DAFF,EAGE,8BAHF;AAKD;;AAEDH,gBAAAA,OAAO,CAAC2B,MAAR,GAAiB;AACfC,kBAAAA,IAAI,EACF;AACA,yBAAO5B,OAAO,CAAC2B,MAAf,KAA0B,QAA1B,GACI3B,OAAO,CAAC2B,MADZ,GAEI;AACF,yBAAO,CAAC3B,OAAO,CAAC2B,MAAR,IAAkB,EAAnB,EAAuBC,IAA9B,KAAuC,QAAvC;AACE;AAAoC5B,kBAAAA,OAAO,CAAC2B,MAAT,CAAiBC,IAAjB,IAAyB,MAD9D,GAEE;AACFmG,kBAAAA,MAAM,GACJ,MADI,GAEJF,OAAO,GACP,OADO,GAEP,MAbS;AAcf7H,kBAAAA,OAAO;AACF;AAA8BA,kBAAAA,OAAO,CAAC8H,KADpC;AAEF;AAAmC,mBAAC9H,OAAO,CAAC2B,MAAR,IAAkB,EAAnB,EAAuB3B,OAFxD;AAdQ,iBAAjB;;AAoBA,oBACEA,OAAO,CAAC2B,MAAR,CAAeC,IAAf,KAAwB,MAAxB,IACA;AAAQ;AAA8B5B,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBiI,IAA9D,KACE,WAHJ,EAIE;AACA;AACCjI,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBiI,IAAzB,GAAgC;AAC9BC,oBAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,UAAP;AADmB,mBAAhC;AAGD;;AAhSH,sBAkSMlI,OAAO,CAAC2B,MAAR,CAAeC,IAAf,KAAwB,OAAxB,IAAmC5B,OAAO,CAAC2B,MAAR,CAAeC,IAAf,KAAwB,MAlSjE;AAAA;AAAA;AAAA;;AAmSI,oBACE;AACE;AAA8B5B,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBmI,WADxD,KAEM,WAHR,EAIE;AACA;AACCnI,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBmI,WAAzB,GAAuC,KAAvC;AACD;;AAEKC,gBAAAA,eA5SV;AA6SM;AACC,iBAAC,QAAD,EAAW,IAAX,EAAiB,MAAjB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC,KAAvC,CA9SP;;AAAA;AAgTS,sBAAMC,QAAQ,uBAAd;;AACH,sBACE;AACE;AAA8BrI,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBqI,QAAzB,CAD/B,KAEM,WAHR,EAIE;AACA;AACA;AACD,mBAxTP,CA0TM;;;AACA,sBAAIA,QAAQ,KAAK,QAAjB,EAA2B;AACzB;AACAhJ,oBAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,gEAFF,EAGE,+BAHF;AAKD;AAED;;;AACA,sBAAMmI,KAAK;AACT;AACCtI,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBqI,QAAzB,CAFF;AAGA;AACR;AACA;AACA;;AACQ,sBAAME,QAAQ,GAAG,SAAXA,QAAW,CAAC3B,IAAD,EAAU;AACzB,wBACE4B,MAAM,CAACC,QAAP,CAAgB7B,IAAhB,KACC,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAArC,IAA6C,CAACnD,KAAK,CAACC,OAAN,CAAckD,IAAd,CAFjD,EAGE;AACA,6BAAOA,IAAP;AACD;;AAED,wBAAIA,IAAJ,EAAU;AACR,0BAAI8B,KAAK,GAAG,IAAZ;;AAEA,0BAAI;AACFA,wBAAAA,KAAK,GAAGpJ,EAAE,CAACqJ,SAAH,CAAarJ,EAAE,CAACsJ,YAAH,CAAgBhC,IAAhB,CAAb,EAAoCiC,MAApC,EAAR;AACD,uBAFD,CAEE,OAAOC,KAAP,EAAc,CACd;AACD,uBAPO,CASR;;;AACA,6BAAOJ,KAAK,GAAGpJ,EAAE,CAACyJ,YAAH,CAAgBnC,IAAhB,CAAH,GAA2BA,IAAvC;AACD;AACF,mBApBD;AAsBA;;;AACC5G,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBqI,QAAzB,IAAqC5E,KAAK,CAACC,OAAN,CAAc4E,KAAd,IACjCA,KAAK,CAACU,GAAN,CAAU,UAACpC,IAAD;AAAA,2BAAU2B,QAAQ,CAAC3B,IAAD,CAAlB;AAAA,mBAAV,CADiC,GAEjC2B,QAAQ,CAACD,KAAD,CAFZ;AAnWN;;AAAA,2CAgT2BF,eAhT3B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,sBA2WM;AAAE;AAA8BpI,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyB+D,GAAxD;AACA;AAA6B,iBAAC,CAAC/D,OAAO,CAAC2B,MAAR,CAAe3B,OAAjB,EAA0BiJ,IA5W7D;AAAA;AAAA;AAAA;;AA8WYC,gBAAAA,cA9WZ,GA8W6BnJ,MAAM,CAACoJ,YAAP,EA9W7B;AA+WYC,gBAAAA,eA/WZ,GA+W8BjK,IAAI,CAACkH,IAAL,CAAU6C,cAAV,EAA0B,YAA1B,CA/W9B;AAAA;AAAA;AAAA,uBAmXkC5J,EAAE,CAAC+J,QAAH,CAAYC,IAAZ,CAAiBF,eAAjB,CAnXlC;;AAAA;AAmXcG,gBAAAA,WAnXd;AAoXQC,gBAAAA,iBAAiB,GAAGD,WAAW,CAACV,MAAZ,EAApB;AApXR;AAAA;;AAAA;AAAA;AAAA;AAsXQW,gBAAAA,iBAAiB,GAAG,KAApB;;AAtXR;AAAA,qBAyXUA,iBAzXV;AAAA;AAAA;AAAA;;AA0XcC,gBAAAA,cA1Xd,GA0X+B,OAAO,EAAP,GAAY,EAAZ,GAAiB,EA1XhD;AAAA;AAAA,uBA2XsCnK,EAAE,CAAC+J,QAAH,CAAYC,IAAZ,CAAiBF,eAAjB,CA3XtC;;AAAA;AA2XcM,gBAAAA,eA3Xd;AA4XcC,gBAAAA,GA5Xd,GA4XoBvH,MAAM,CAAC,IAAIwH,IAAJ,EAAD,CA5X1B,EA8XQ;;AA9XR,sBA+XY,CAACD,GAAG,GAAGvH,MAAM,CAACsH,eAAe,CAACG,KAAjB,CAAb,IAAwCJ,cAAxC,GAAyD,EA/XrE;AAAA;AAAA;AAAA;;AAgYgBK,gBAAAA,GAhYhB,GAgYsB5K,OAAO,CAAC,KAAD,CAhY7B;AAkYU,qBAAKoB,MAAL,CAAYyJ,IAAZ,CACE,uDADF;AAlYV;AAAA,uBAsYgBD,GAAG,CAAC,CAACV,eAAD,CAAD,EAAoB;AAAEY,kBAAAA,KAAK,EAAE;AAAT,iBAApB,CAtYnB;;AAAA;AAwYUR,gBAAAA,iBAAiB,GAAG,KAApB;;AAxYV;AAAA,oBA4YWA,iBA5YX;AAAA;AAAA;AAAA;;AA6YQ,qBAAKlJ,MAAL,CAAYyJ,IAAZ,CAAiB,+BAAjB,EA7YR,CA+YQ;;AACME,gBAAAA,UAhZd,GAgZ2B/K,OAAO,CAAC,YAAD,CAhZlC;AAiZcgL,gBAAAA,UAjZd,GAiZ2B,CAAC;AAAE9J,kBAAAA,IAAI,EAAE,YAAR;AAAsBkI,kBAAAA,KAAK,EAAE;AAA7B,iBAAD,CAjZ3B;AAkZc6B,gBAAAA,IAlZd,GAkZqBF,UAAU,CAACG,QAAX,CAAoBF,UAApB,EAAgC;AAC3CG,kBAAAA,SAAS,EAAE,QADgC;AAE3CC,kBAAAA,IAAI,EAAE,EAFqC;AAG3CC,kBAAAA,OAAO,EAAE,IAHkC;AAI3CC,kBAAAA,UAAU,EAAE,CACV;AACEpK,oBAAAA,IAAI,EAAE,kBADR;AAEEqK,oBAAAA,EAAE,EAAE;AAFN,mBADU,EAKV;AACErK,oBAAAA,IAAI,EAAE,UADR;AAEEsK,oBAAAA,WAAW,EAAE,IAFf;AAGEC,oBAAAA,gBAAgB,EAAE,IAHpB;AAIEC,oBAAAA,cAAc,EAAE,IAJlB;AAKEC,oBAAAA,eAAe,EAAE,IALnB;AAMEC,oBAAAA,gBAAgB,EAAE;AANpB,mBALU,EAaV;AACE1K,oBAAAA,IAAI,EAAE,aADR;AAEE2K,oBAAAA,UAAU,EAAE,IAFd;AAGEC,oBAAAA,UAAU,EAAE,IAHd;AAIEC,oBAAAA,WAAW,EAAE,IAJf;AAKEC,oBAAAA,YAAY,EAAE;AALhB,mBAbU,EAoBV;AACE9K,oBAAAA,IAAI,EAAE,gBADR;AAEE+K,oBAAAA,QAAQ,EAAE,CACR;AACE;AACAvJ,sBAAAA,IAAI,EAAE,CAFR;AAGE0G,sBAAAA,KAAK,EAAE;AAHT,qBADQ,EAMR;AACE1G,sBAAAA,IAAI,EAAE,CADR;AAEE0G,sBAAAA,KAAK,EAAE;AAFT,qBANQ,EAUR;AACE1G,sBAAAA,IAAI,EAAE,CADR;AAEE0G,sBAAAA,KAAK,EAAE;AAFT,qBAVQ,EAcR;AACE1G,sBAAAA,IAAI,EAAE,CADR;AAEE0G,sBAAAA,KAAK,EAAE;AAFT,qBAdQ,EAkBR;AACE1G,sBAAAA,IAAI,EAAE,CADR;AAEE0G,sBAAAA,KAAK,EAAE;AAFT,qBAlBQ,EAsBR;AACE;AACA1G,sBAAAA,IAAI,EAAE,CAFR;AAGEwJ,sBAAAA,EAAE,EAAE;AAHN,qBAtBQ,EA2BR;AACExJ,sBAAAA,IAAI,EAAE,CADR;AAEEwJ,sBAAAA,EAAE,EAAE;AAFN,qBA3BQ;AAFZ,mBApBU;AAJ+B,iBAAhC,CAlZrB;AAAA;AAAA,uBAgdc9L,EAAE,CAAC+J,QAAH,CAAYgC,KAAZ,CAAkBnC,cAAlB,EAAkC;AAAEoC,kBAAAA,SAAS,EAAE;AAAb,iBAAlC,CAhdd;;AAAA;AAAA;AAAA,uBAkdchM,EAAE,CAAC+J,QAAH,CAAYkC,SAAZ,CACJnC,eADI,EAEJe,IAAI,CAACqB,OAAL,GAAerB,IAAI,CAAClB,IAFhB,EAGJ;AACEwC,kBAAAA,QAAQ,EAAE;AADZ,iBAHI,CAldd;;AAAA;AAAA;AAAA,uBA2duBnM,EAAE,CAAC+J,QAAH,CAAYd,QAAZ,CAAqBa,eAArB,CA3dvB;;AAAA;AA2dMsC,gBAAAA,QA3dN;AA6dM,qBAAKpL,MAAL,CAAYyJ,IAAZ,4BAAqCX,eAArC;;AA7dN;AAgeI;AACE;AACEpJ,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAD+C,CAE9D2L,MAHJ,EAIE;AACA;AAAI;AAA8B3L,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyB4L,EAA1D,EAA8D;AAC5D,yBAAKtL,MAAL,CAAYuL,IAAZ,CACE,kFADF;AAGD,mBAJD,MAIO;AACL;AACC7L,oBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyB4L,EAAzB;AACE;AACC5L,oBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyB2L,MAF3B;AAGD;;AAED;AACE;AACE3L,kBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAD+C,CAE9D2L,MAHJ;AAKD;AAED;;;AACC3L,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyB+D,GAAzB;AACE;AACC/D,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyB+D,GAAzB,IAAgC2H,QAFlC;AAGA;;AACC1L,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBiJ,IAAzB;AACE;AACCjJ,gBAAAA,OAAO,CAAC2B,MAAR,CAAe3B,OAAhB,CAAyBiJ,IAAzB,IAAiCyC,QAFnC;;AA5fJ;AAigBE,oBAAI,OAAO1L,OAAO,CAAC8L,GAAf,KAAuB,SAA3B,EAAsC;AAC9BC,kBAAAA,SAD8B,GAClBnM,OAAO,CAACoM,QAAR,KAAqB,OADH;AAE9BC,kBAAAA,UAF8B,GAEjBF,SAAS,GAAG,eAAH,GAAqB9M,EAAE,CAACiN,MAAH,EAFb;AAG9BC,kBAAAA,QAH8B,GAGnB,yBAHmB;AAKpCnM,kBAAAA,OAAO,CAAC8L,GAAR,GAAc3M,IAAI,CAACkH,IAAL,CAAU4F,UAAV,EAAsBE,QAAtB,CAAd;AACD;;AAEDnM,gBAAAA,OAAO,CAACoM,UAAR,GACE,OAAOpM,OAAO,CAACoM,UAAf,KAA8B,WAA9B,GAA4CpM,OAAO,CAACoM,UAApD,GAAiE,IADnE;AAGApM,gBAAAA,OAAO,CAACqM,SAAR,GACE,OAAOrM,OAAO,CAACqM,SAAf,KAA6B,WAA7B,GAA2CrM,OAAO,CAACqM,SAAnD,GAA+D,IADjE,CA5gBF,CA+gBE;;AACMC,gBAAAA,kBAhhBR,GAghB6B;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAhhB7B;AAihBE;AACJ;AACA;AACA;AACI;;AACMC,gBAAAA,sBAthBR,GAshBiC,SAAzBA,sBAAyB,QAAyB;AAAA,sBAAtBrL,MAAsB,SAAtBA,MAAsB;AAAA,sBAAXsE,IAAW;;AACtD,sBAAMgH,iBAAiB,mCAAQH,kBAAR,GAA+B7G,IAA/B,CAAvB;;AAEA,sBAAI,OAAOgH,iBAAiB,CAACC,GAAzB,KAAiC,QAArC,EAA+C;AAC7CD,oBAAAA,iBAAiB,CAACC,GAAlB,GAAwB;AACtBtM,sBAAAA,IAAI,EAAEqM,iBAAiB,CAACC;AADF,qBAAxB;AAGD;;AAED,sBAAMC,gBAAgB,GAAG,OAAOxL,MAAP,KAAkB,WAAlB,GAAgC,OAAhC,GAA0CA,MAAnE;;AAEA,sBAAIsC,KAAK,CAACC,OAAN,CAAciJ,gBAAd,CAAJ,EAAqC;AACnC,2BAAOA,gBAAgB,CAAC3D,GAAjB,CAAqB,UAAC4D,YAAD,EAAkB;AAC5C,6BAAO;AAAEzL,wBAAAA,MAAM,EAAEyL,YAAV;AAAwB5M,wBAAAA,OAAO,EAAEyM;AAAjC,uBAAP;AACD,qBAFM,CAAP;AAGD;;AAED,yBAAO,CAAC;AAAEtL,oBAAAA,MAAM,EAAEwL,gBAAV;AAA4B3M,oBAAAA,OAAO,EAAEyM;AAArC,mBAAD,CAAP;AACD,iBAxiBH;;AA0iBE,oBAAI,OAAOzM,OAAO,CAAC6M,IAAf,KAAwB,WAA5B,EAAyC;AACvC;AACC7M,kBAAAA,OAAO,CAAC6M,IAAT,GAAiB,EAAjB;AACD,iBAHD,MAGO,IAAI,OAAO7M,OAAO,CAAC6M,IAAf,KAAwB,SAA5B,EAAuC;AAC5C;AACC7M,kBAAAA,OAAO,CAAC6M,IAAT,GAAiB7M,OAAO,CAAC6M,IAAR,GACb,CACE;AACE1L,oBAAAA,MAAM,EAAE,OADV;AAEEnB,oBAAAA,OAAO;AAAE;AAA4BsM,oBAAAA;AAFvC,mBADF,CADa,GAOb,EAPJ;AAQD,iBAVM,MAUA,IAAI,OAAOtM,OAAO,CAAC6M,IAAf,KAAwB,QAA5B,EAAsC;AAC3C;AACC7M,kBAAAA,OAAO,CAAC6M,IAAT,GAAiB,CAAC;AAAE1L,oBAAAA,MAAM,EAAEnB,OAAO,CAAC6M,IAAlB;AAAwB7M,oBAAAA,OAAO,EAAEsM;AAAjC,mBAAD,CAAjB;AACD,iBAHM,MAGA,IAAI7I,KAAK,CAACC,OAAN,CAAc1D,OAAO,CAAC6M,IAAtB,CAAJ,EAAiC;AACtC;AACN;AACA;AACYC,kBAAAA,MAJgC,GAIvB,EAJuB;AAMtC9M,kBAAAA,OAAO,CAAC6M,IAAR,CAAa/I,OAAb,CAAqB,UAAC8C,IAAD,EAAU;AAC7B,wBAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BkG,sBAAAA,MAAM,CAACnK,IAAP,CAAY;AAAExB,wBAAAA,MAAM,EAAEyF,IAAV;AAAgB5G,wBAAAA,OAAO,EAAEsM;AAAzB,uBAAZ;AAEA;AACD;;AAEDQ,oBAAAA,MAAM,CAACnK,IAAP,OAAAmK,MAAM,qBAASN,sBAAsB,CAAC5F,IAAD,CAA/B,EAAN;AACD,mBARD;AAUA;;AACC5G,kBAAAA,OAAO,CAAC6M,IAAT,GAAiBC,MAAjB;AACD,iBAlBM,MAkBA;AACL;AACC9M,kBAAAA,OAAO,CAAC6M,IAAT,sBAAqBL,sBAAsB,CAACxM,OAAO,CAAC6M,IAAT,CAA3C;AACD;;AAED,oBAAI7M,OAAO,CAAC+M,sBAAZ,EAAoC;AAClC;AACA1N,kBAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,0FAFF;AAKD;;AAED,oBAAIH,OAAO,CAACgN,uBAAZ,EAAqC;AACnC;AACA3N,kBAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,2FAFF;AAKD;;AAED,oBAAI,OAAOH,OAAO,CAACmC,IAAf,KAAwB,QAAxB,IAAoCnC,OAAO,CAACmC,IAAR,KAAiB,MAAzD,EAAiE;AAC/DnC,kBAAAA,OAAO,CAACmC,IAAR,GAAeC,MAAM,CAACpC,OAAO,CAACmC,IAAT,CAArB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,oBAAI,OAAOnC,OAAO,CAACiN,KAAf,KAAyB,WAA7B,EAA0C;AACxC;AACA,sBAAI,CAACxJ,KAAK,CAACC,OAAN,CAAc1D,OAAO,CAACiN,KAAtB,CAAL,EAAmC;AACjC,wBACErJ,MAAM,CAACsJ,SAAP,CAAiBC,cAAjB,CAAgC7I,IAAhC,CAAqCtE,OAAO,CAACiN,KAA7C,EAAoD,QAApD,KACArJ,MAAM,CAACsJ,SAAP,CAAiBC,cAAjB,CAAgC7I,IAAhC,CAAqCtE,OAAO,CAACiN,KAA7C,EAAoD,QAApD,CAFF,EAGE;AACA;AACCjN,sBAAAA,OAAO,CAACiN,KAAT,GAAkB;AAAC;AAA+BjN,sBAAAA,OAAO,CAACiN,KAAxC,CAAlB;AACD,qBAND,MAMO;AACL;AACCjN,sBAAAA,OAAO,CAACiN,KAAT,GAAkBrJ,MAAM,CAACC,IAAP,CAAY7D,OAAO,CAACiN,KAApB,EAA2BjE,GAA3B;AAChB;AACZ;AACA;AACA;AACY,gCAAC/F,OAAD,EAAa;AACX,4BAAImK,YAAJ,CADW,CAEX;;AACA,4BAAMC,gBAAgB,GAAGpK,OAAO,CAC7BqK,OADsB,CACd,MADc,EACN,IADM,EAEtBA,OAFsB,CAEd,OAFc,EAEL,EAFK,CAAzB;;AAIA,4BACE;AACE;AAA+BtN,wBAAAA,OAAO,CAACiN,KAAT,CAAgBhK,OAAhB,CADhC,KAEM,QAHR,EAIE;AACAmK,0BAAAA,YAAY,GAAG;AACbnK,4BAAAA,OAAO,EAAEoK,gBADI;AAEblM,4BAAAA,MAAM;AACJ;AACCnB,4BAAAA,OAAO,CAACiN,KAAT,CAAgBhK,OAAhB;AAJW,2BAAf;AAMD,yBAXD,MAWO;AACLmK,0BAAAA,YAAY;AAEP;AAA+BpN,0BAAAA,OAAO,CAACiN,KAAT,CAAgBhK,OAAhB,CAFvB,CAAZ;AAIAmK,0BAAAA,YAAY,CAACnK,OAAb,GAAuBoK,gBAAvB;AACD;;AAED,+BAAOD,YAAP;AACD,uBAhCe,CAAlB;AAkCD;AACF;AAED;;;AACCpN,kBAAAA,OAAO,CAACiN,KAAT;AACE;AACCjN,kBAAAA,OAAO,CAACiN,KAAT,CAAgBjE,GAAhB,CAAoB,UAACpC,IAAD,EAAU;AAC5B,wBAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,6BAAOA,IAAP;AACD;AAED;AACV;AACA;AACA;;;AACU,wBAAM2G,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC9F,KAAD,EAAW;AACrC,0BAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,+BAAO,QAAP;AACD;;AAED,0BAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,+BAAO,MAAP;AACD;;AAED,0BAAIA,KAAK,KAAK,SAAd,EAAyB;AACvB,+BAAO,OAAP;AACD;;AAED,6BAAOA,KAAP;AACD,qBAdD;;AAgBA,wBAAI,OAAOb,IAAI,CAAC4G,QAAZ,KAAyB,WAA7B,EAA0C;AACxC5G,sBAAAA,IAAI,CAAC4G,QAAL,GAAgBD,mBAAmB,CACjCzI,eAAe,CAAC0C,qBAAhB,GACI1C,eAAe,CAAC0C,qBAAhB,CAAsCC,KAD1C,GAEI,MAH6B,CAAnC;AAKD;;AAED,wBAAI,OAAOb,IAAI,CAAC6G,WAAZ,KAA4B,WAAhC,EAA6C;AAC3C7G,sBAAAA,IAAI,CAAC6G,WAAL,GAAmB;AAAA,+BAAM,KAAI,CAACnN,MAAX;AAAA,uBAAnB;AACD;;AAED,2BAAOsG,IAAP;AACD,mBAtCD,CAFF;AAyCD;;AAED,oBAAI,OAAO5G,OAAO,CAAC0N,gBAAf,KAAoC,WAAxC,EAAqD;AACnD1N,kBAAAA,OAAO,CAAC0N,gBAAR,GAA2B,IAA3B;AACD;;AAED,oBAAI,OAAO1N,OAAO,CAAC2N,MAAf,KAA0B,WAA9B,EAA2C;AACzC3N,kBAAAA,OAAO,CAAC2N,MAAR,GAAiB,CAAC1H,aAAa,EAAd,CAAjB;AACD,iBAFD,MAEO,IAAI,OAAOjG,OAAO,CAAC2N,MAAf,KAA0B,SAA9B,EAAyC;AAC9C3N,kBAAAA,OAAO,CAAC2N,MAAR,GAAiB3N,OAAO,CAAC2N,MAAR,GAAiB,CAAC1H,aAAa,EAAd,CAAjB,GAAqC,KAAtD;AACD,iBAFM,MAEA,IAAI,OAAOjG,OAAO,CAAC2N,MAAf,KAA0B,QAA9B,EAAwC;AAC7C3N,kBAAAA,OAAO,CAAC2N,MAAR,GAAiB,CAAC1H,aAAa,CAACjG,OAAO,CAAC2N,MAAT,CAAd,CAAjB;AACD,iBAFM,MAEA,IAAIlK,KAAK,CAACC,OAAN,CAAc1D,OAAO,CAAC2N,MAAtB,CAAJ,EAAmC;AACxC3N,kBAAAA,OAAO,CAAC2N,MAAR,GAAiB3N,OAAO,CAAC2N,MAAR,CAAe3E,GAAf,CAAmB,UAACpC,IAAD;AAAA,2BAAUX,aAAa,CAACW,IAAD,CAAvB;AAAA,mBAAnB,CAAjB;AACD,iBAFM,MAEA;AACL5G,kBAAAA,OAAO,CAAC2N,MAAR,GAAiB,CAAC1H,aAAa,CAACjG,OAAO,CAAC2N,MAAT,CAAd,CAAjB;AACD;;AAED,oBAAI,OAAO3N,OAAO,CAAC4N,UAAf,KAA8B,QAAlC,EAA4C;AAC1C5N,kBAAAA,OAAO,CAAC4N,UAAR,GAAqB,CACnB;AAAEC,oBAAAA,KAAK,EAAE7N,OAAO,CAAC4N,UAAjB;AAA6B5N,oBAAAA,OAAO,EAAEkF,eAAe;AAArD,mBADmB,CAArB;AAGD,iBAJD,MAIO,IACL,QAAOlF,OAAO,CAAC4N,UAAf,MAA8B,QAA9B,IACA5N,OAAO,CAAC4N,UAAR,KAAuB,IADvB,IAEA,CAACnK,KAAK,CAACC,OAAN,CAAc1D,OAAO,CAAC4N,UAAtB,CAHI,EAIL;AACA5N,kBAAAA,OAAO,CAAC4N,UAAR,GAAqB,CACnB;AACEC,oBAAAA,KAAK,EAAE7N,OAAO,CAAC4N,UAAR,CAAmBC,KAD5B;AAEE7N,oBAAAA,OAAO,EAAEkF,eAAe,CAAClF,OAAO,CAAC4N,UAAR,CAAmB5N,OAAnB,IAA8B,EAA/B;AAF1B,mBADmB,CAArB;AAMD,iBAXM,MAWA,IAAIyD,KAAK,CAACC,OAAN,CAAc1D,OAAO,CAAC4N,UAAtB,CAAJ,EAAuC;AAC5C5N,kBAAAA,OAAO,CAAC4N,UAAR,GAAqB5N,OAAO,CAAC4N,UAAR,CAAmB5E,GAAnB,CAAuB,UAACpC,IAAD,EAAU;AACpD,wBAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,6BAAO;AAAEiH,wBAAAA,KAAK,EAAEjH,IAAT;AAAe5G,wBAAAA,OAAO,EAAEkF,eAAe;AAAvC,uBAAP;AACD;;AAED,2BAAO;AACL2I,sBAAAA,KAAK,EAAEjH,IAAI,CAACiH,KADP;AAEL7N,sBAAAA,OAAO,EAAEkF,eAAe,CAAC0B,IAAI,CAAC5G,OAAL,IAAgB,EAAjB;AAFnB,qBAAP;AAID,mBAToB,CAArB;AAUD,iBAXM,MAWA;AACLA,kBAAAA,OAAO,CAAC4N,UAAR,GAAqB,EAArB;AACD;;AAEKE,gBAAAA,0BA3vBR,GA2vBqC,IA3vBrC;AA4vBQC,gBAAAA,6BA5vBR,GA4vBwC;AAAE5O,kBAAAA,IAAI,EAAE;AAAR,iBA5vBxC;;AA8vBE,oBAAI,OAAOa,OAAO,CAACsB,eAAf,KAAmC,WAAvC,EAAoD;AAClDtB,kBAAAA,OAAO,CAACsB,eAAR,GAA0B;AACxBM,oBAAAA,IAAI,EAAEkM,0BADkB;AAExB9N,oBAAAA,OAAO,EAAE+N;AAFe,mBAA1B;AAID,iBALD,MAKO,IACL,OAAO/N,OAAO,CAACsB,eAAf,KAAmC,SAAnC,IACA,CAACtB,OAAO,CAACsB,eAFJ,EAGL;AACAtB,kBAAAA,OAAO,CAACsB,eAAR,GAA0B,KAA1B;AACD,iBALM,MAKA,IACL,OAAOtB,OAAO,CAACsB,eAAf,KAAmC,QAAnC,IACA,OAAOtB,OAAO,CAACsB,eAAf,KAAmC,UAF9B,EAGL;AACAtB,kBAAAA,OAAO,CAACsB,eAAR,GAA0B;AACxBM,oBAAAA,IAAI,EAAE5B,OAAO,CAACsB,eADU;AAExBtB,oBAAAA,OAAO,EAAE+N;AAFe,mBAA1B;AAID,iBARM,MAQA;AACL/N,kBAAAA,OAAO,CAACsB,eAAR,GAA0B;AACxBM,oBAAAA,IAAI;AACF;AACC5B,oBAAAA,OAAO,CAACsB,eAAT,CAA0BM,IAA1B,IAAkCkM,0BAHZ;AAIxB9N,oBAAAA,OAAO,kCACF+N,6BADE;AAEF;AACF/N,oBAAAA,OAAO,CAACsB,eAAT,CAA0BtB,OAHrB;AAJiB,mBAA1B;AAWMsB,kBAAAA,eAZD;AAaH;AACCtB,kBAAAA,OAAO,CAACsB,eAdN;;AAgBL,sBAAI,OAAOA,eAAe,CAACtB,OAAhB,CAAwBmC,IAA/B,KAAwC,QAA5C,EAAsD;AACpDb,oBAAAA,eAAe,CAACtB,OAAhB,CAAwBmC,IAAxB,GAA+BC,MAAM,CAACd,eAAe,CAACtB,OAAhB,CAAwBmC,IAAzB,CAArC;AACD;AACF;;AAnyBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAsyBA;AACF;AACA;AACA;;;;WACE,8BAAqB;AACnB,UAAI6L,oBAAJ;AACA,UAAIC,yBAAyB,GAAG,IAAhC;AAEA,UAAMC,oCAAoC,GACxC,KAAKlO,OAAL,CAAasB,eAAb,IACA;AACE;AACC,WAAKtB,OAAL,CAAasB,eAAd,CAA+BM,IAFjC,KAGM,QAJN,MAKA;AACC,WAAK5B,OAAL,CAAasB,eAAb,CAA6BM,IAA7B,KAAsC,IAAtC;AACC;AACC,WAAK5B,OAAL,CAAasB,eAAd,CAA+BM,IAA/B,KAAwC,QAR1C,CADF;AAWA,UAAIuM,eAAJ;;AAEA,UAAI,KAAKnO,OAAL,CAAaoB,MAAjB,EAAyB;AACvB,YACE;AACE;AACC,aAAKpB,OAAL,CAAaoB,MAAd,CAAsBgN,kBAFxB,KAGM,WAJR,EAKE;AACAD,UAAAA,eAAe;AACb;AACC,eAAKnO,OAAL,CAAaoB,MAAd,CAAsBgN,kBAFxB;AAGD,SATD,MASO,IAAIF,oCAAJ,EAA0C;AAC/CC,UAAAA,eAAe;AACb;AACC,eAAKnO,OAAL,CAAasB,eAAd,CAA+BM,IAFjC;AAGD,SAJM,MAIA;AACLuM,UAAAA,eAAe,GAAG,IAAlB;AACD;AACF,OAjBD,MAiBO;AACLA,QAAAA,eAAe,GAAG,IAAlB;AACD;;AAED,sBAAeA,eAAf;AACE,aAAK,QAAL;AACE;AACA,cAAIA,eAAe,KAAK,QAAxB,EAAkC;AAChCH,YAAAA,oBAAoB,GAAG9O,OAAO,CAAC0D,OAAR,CACrB,gCADqB,CAAvB;AAGD,WAJD,MAIO,IAAIuL,eAAe,KAAK,IAAxB,EAA8B;AACnCH,YAAAA,oBAAoB,GAAG9O,OAAO,CAAC0D,OAAR,CACrB,mCADqB,CAAvB;AAGD,WAJM,MAIA;AACL,gBAAI;AACFoL,cAAAA,oBAAoB,GAAG9O,OAAO,CAAC0D,OAAR,CAAgBuL,eAAhB,CAAvB;AACD,aAFD,CAEE,OAAOE,CAAP,EAAU;AACVJ,cAAAA,yBAAyB,GAAG,KAA5B;AACD;AACF;;AACD;;AACF;AACEA,UAAAA,yBAAyB,GAAG,KAA5B;AApBJ;;AAuBA,UAAI,CAACA,yBAAL,EAAgC;AAC9B,cAAM,IAAIlH,KAAJ,WAEF,CAACmH,oCAAD,GACI,uGADJ,GAEI,EAJF,oLAAN;AAOD;;AAED;AAAO;AAAuBF,QAAAA;AAA9B;AACD;AAED;AACF;AACA;AACA;;;;WACE,8BAAqB;AACnB,UAAIM,cAAJ;AACA,UAAIC,mBAAmB,GAAG,IAA1B;;AAEA;AAEI;AACC,WAAKvO,OAAL,CAAasB,eAAd,CAA+BM,IAHnC;AAME,aAAK,QAAL;AACE;AACA;AACE;AACE,eAAK5B,OAAL,CAAasB,eAD6B,CAE1CM,IAF0C,KAEjC,QAHb,EAIE;AACA0M,YAAAA,cAAc,GAAGpP,OAAO,CAAC,wBAAD,CAAxB;AACD,WAND,MAMO;AACL;AACE,eAAKc,OAAL,CAAasB,eAD6B,CAE1CM,IAF0C,KAEjC,IAHN,EAIL;AACA0M,YAAAA,cAAc,GAAGpP,OAAO,CAAC,2BAAD,CAAxB;AACD,WANM,MAMA;AACL,gBAAI;AACF;AACAoP,cAAAA,cAAc,GAAGpP,OAAO;AAAC;AACvB,mBAAKc,OAAL,CAAasB,eADsD,CAEnEM,IAFsB,CAAxB;AAGD,aALD,CAKE,OAAOkH,KAAP,EAAc;AACdyF,cAAAA,mBAAmB,GAAG,KAAtB;AACD;AACF;;AACD;;AACF,aAAK,UAAL;AACED,UAAAA,cAAc;AAAG;AACf,eAAKtO,OAAL,CAAasB,eAD8C,CAE3DM,IAFF;AAGA;;AACF;AACE2M,UAAAA,mBAAmB,GAAG,KAAtB;AArCJ;;AAwCA,UAAI,CAACA,mBAAL,EAA0B;AACxB,cAAM,IAAIxH,KAAJ,CACJ,qIACE,sGADF,GAEE,wEAHE,CAAN;AAKD;;AAED,aAAOuH,cAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,+BAAsB;AAAA;;AACpB;AACE;AACC,WAAKrO,QAAN,CAAgBsE,SAAhB;AACI;AAA6B,WAAKtE,QAAN,CAAgBsE,SAAhB,CAA0B,CAA1B,EAA6BzB,OAD7D;AAEI;AAAwB,WAAK7C,QAAN,CAAgB6C,OAAhB,IACvB;AACA5D,MAAAA,OAAO,CAAC,SAAD,CANb;AAAA,UAAQsP,cAAR,SAAQA,cAAR;;AAQA,UAAIA,cAAJ;AACE;AACN;AACA;AACA;AACA;AACA;AACM,gBAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,UAAxB,EAAuC;AACrCH,QAAAA,OAAO,GAAGI,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAG,GAArB,CAAV;;AAEA,YAAIA,OAAO,KAAK,GAAhB,EAAqB;AACnBC,UAAAA,GAAG,GAAG,uBAAN;AACD;;AAED,YAAIC,OAAJ,EAAa;AACXD,UAAAA,GAAG,aAAMA,GAAN,eAAcC,OAAd,MAAH;AACD;;AAED,YAAI,MAAI,CAACrN,eAAT,EAA0B;AACxB,UAAA,MAAI,CAACyN,WAAL,CAAiB,MAAI,CAACzN,eAAL,CAAqB0N,OAAtC,EAA+C,iBAA/C,EAAkE;AAChEP,YAAAA,OAAO,EAAPA,OADgE;AAEhEC,YAAAA,GAAG,EAAHA,GAFgE;AAGhEE,YAAAA,UAAU,EAAVA;AAHgE,WAAlE;AAKD;;AAED,YAAI,MAAI,CAACjN,MAAT,EAAiB;AACf,UAAA,MAAI,CAACA,MAAL,CAAYsN,IAAZ,CAAiB,iBAAjB,EAAoC;AAAER,YAAAA,OAAO,EAAPA,OAAF;AAAWC,YAAAA,GAAG,EAAHA,GAAX;AAAgBE,YAAAA,UAAU,EAAVA;AAAhB,WAApC;AACD;AACF,OA7BH,EA8BE1L,KA9BF,CA8BQ,KAAKjD,QA9Bb;AA+BD;AAED;AACF;AACA;AACA;;;;;gFACE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,oBAAI,KAAKD,OAAL,CAAasB,eAAjB,EAAkC;AAC1BiD,kBAAAA,SAD0B;AAE9B;AACC,uBAAKtE,QAAN,CAAgBsE,SAAhB,IAA6B,CAAC,KAAKtE,QAAN,CAHC;AAKhCsE,kBAAAA,SAAS,CAACT,OAAV,CAAkB,UAAC7D,QAAD,EAAc;AAC9B,oBAAA,MAAI,CAACiP,oBAAL,CAA0BjP,QAA1B;;AAEA,wBAAM6C,OAAO,GAAG7C,QAAQ,CAAC6C,OAAT,IAAoB5D,OAAO,CAAC,SAAD,CAA3C;;AAEA,wBAAI4D,OAAO,CAACqM,aAAZ,CAA0B;AACxBC,sBAAAA,6BAA6B,EAAE,MAAI,CAACC,kBAAL;AADP,qBAA1B,EAEGnM,KAFH,CAESjD,QAFT,EAL8B,CAS9B;;AACAA,oBAAAA,QAAQ,CAACD,OAAT,CAAiBsP,OAAjB,GAA2BrP,QAAQ,CAACD,OAAT,CAAiBsP,OAAjB,IAA4B,EAAvD;;AAEA,wBAAI,MAAI,CAACtP,OAAL,CAAa6C,GAAjB,EAAsB;AACpB,0BAAM0M,eAAe,GAAGtP,QAAQ,CAACD,OAAT,CAAiBsP,OAAjB,CAAyB5K,IAAzB,CACtB,UAAC8K,CAAD;AAAA,+BAAOA,CAAC,CAACC,WAAF,KAAkB3M,OAAO,CAAC4M,0BAAjC;AAAA,uBADsB,CAAxB;;AAIA,0BAAIH,eAAJ,EAAqB;AACnB,wBAAA,MAAI,CAACjP,MAAL,CAAYuL,IAAZ;AAGD,uBAJD,MAIO;AACL;AACA,4BAAM8D,MAAM,GAAG,IAAI7M,OAAO,CAAC4M,0BAAZ,EAAf;AAEAC,wBAAAA,MAAM,CAACzM,KAAP,CAAajD,QAAb;AACD;AACF;AACF,mBA5BD;;AA8BA,sBACE,KAAKD,OAAL,CAAaoB,MAAb;AACA;AAAoC,uBAAKpB,OAAL,CAAaoB,MAAd,CAAsBwO,QAF3D,EAGE;AACA,yBAAKC,mBAAL;AACD;AACF;;AAED,qBAAKC,UAAL;AACA,qBAAKC,QAAL;AACA,qBAAKC,oBAAL;AACA,qBAAKC,kBAAL,GA/CF,CAgDE;;AACA,qBAAKC,kBAAL;AACA,qBAAKC,eAAL;AACA,qBAAKC,qBAAL;AACA,qBAAKC,gBAAL;AACA,qBAAKC,YAAL;;AAEA,oBAAI,KAAKtQ,OAAL,CAAa0N,gBAAjB,EAAmC;AAC3B6C,kBAAAA,OAD2B,GACjB,CAAC,QAAD,EAAW,SAAX,CADiB;AAG7BC,kBAAAA,iBAH6B,GAGT,KAHS;AAKjCD,kBAAAA,OAAO,CAACzM,OAAR,CAAgB,UAAC2M,MAAD,EAAY;AAC1B,wBAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,0BAAIF,iBAAJ,EAAuB;AACrB5Q,wBAAAA,OAAO,CAAC+Q,IAAR;AACD;;AAED,sBAAA,MAAI,CAACrQ,MAAL,CAAYyJ,IAAZ,CACE,yEADF;;AAIAyG,sBAAAA,iBAAiB,GAAG,IAApB;;AAEA,sBAAA,MAAI,CAACI,YAAL,CAAkB,YAAM;AACtB,4BAAI,OAAO,MAAI,CAAC3Q,QAAL,CAAc4Q,KAArB,KAA+B,UAAnC,EAA+C;AAC7C,0BAAA,MAAI,CAAC5Q,QAAL,CAAc4Q,KAAd,CAAoB,YAAM;AACxBjR,4BAAAA,OAAO,CAAC+Q,IAAR;AACD,2BAFD;AAGD,yBAJD,MAIO;AACL/Q,0BAAAA,OAAO,CAAC+Q,IAAR;AACD;AACF,uBARD;AASD,qBApBD;;AAsBA,oBAAA,MAAI,CAAClQ,SAAL,CAAekC,IAAf,CAAoB;AAAEvC,sBAAAA,IAAI,EAAEqQ,MAAR;AAAgBC,sBAAAA,QAAQ,EAARA;AAAhB,qBAApB;;AAEA9Q,oBAAAA,OAAO,CAACkR,EAAR,CAAWL,MAAX,EAAmBC,QAAnB;AACD,mBA1BD;AA2BD,iBAvFH,CAyFE;AACA;;AACA;;;AACC,qBAAKhQ,gBAAN,CAAwBoD,OAAxB,CAAgC,UAACiN,cAAD,EAAoB;AAClD;AACC,kBAAA,MAAI,CAACpP,MAAN,CAAcmP,EAAd,CACE,SADF;AAEE;AACCC,kBAAAA,cAAD,CAAiBC,OAHnB;AAKD,iBAPD,EAOG,IAPH;;AA5FF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAsGA;AACF;AACA;AACA;;;;WACE,oBAAW;AACT;AACA;AACA,WAAKtE,GAAL,GAAW;AAAI;AAAoBjN,MAAAA,OAAxB,EAAX;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,kBAASwR,QAAT,EAAmB;AACjB,UAAMvI,KAAK,GAAG3I,MAAM,CAACmR,aAArB;AACA,UAAMpM,eAAe,GAAG,KAAKC,kBAAL,EAAxB,CAFiB,CAIjB;;AACA,UAAID,eAAe,CAAC4D,KAAhB,IAAyB5D,eAAe,CAAC4D,KAAhB,CAAsByI,cAAnD,EAAmE;AACjE;AACAzI,QAAAA,KAAK,CAACyI,cAAN,GAAuBrM,eAAe,CAAC4D,KAAhB,CAAsByI,cAA7C;AACD;;AAED,aAAOF,QAAQ,CAACG,MAAT,CAAgB1I,KAAhB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,sBAAa;AAAA;;AACX,WAAKzI,QAAL,CAAcC,KAAd,CAAoBmR,OAApB,CAA4BC,GAA5B,CAAgC,oBAAhC,EAAsD,YAAM;AAC1D,YAAI,MAAI,CAAChQ,eAAT,EAA0B;AACxB,UAAA,MAAI,CAACyN,WAAL,CAAiB,MAAI,CAACzN,eAAL,CAAqB0N,OAAtC,EAA+C,SAA/C;AACD;AACF,OAJD;AAKA,WAAK/O,QAAL,CAAcC,KAAd,CAAoBqR,IAApB,CAAyBD,GAAzB,CACE,oBADF;AAEE;AACN;AACA;AACM,gBAAC5I,KAAD,EAAW;AACT,YAAI,MAAI,CAACpH,eAAT,EAA0B;AACxB,UAAA,MAAI,CAACkQ,SAAL,CAAe,MAAI,CAAClQ,eAAL,CAAqB0N,OAApC,EAA6C,MAAI,CAACyC,QAAL,CAAc/I,KAAd,CAA7C;AACD;AAED;AACR;AACA;AACA;;;AACQ,QAAA,MAAI,CAACA,KAAL,GAAaA,KAAb;AACD,OAfH;AAiBD;AAED;AACF;AACA;AACA;;;;WACE,gCAAuB;AAAA;;AACrB;AACC,WAAKgE,GAAN,CAAWgF,GAAX,CACE,GADF;AAEE;AACN;AACA;AACA;AACA;AACA;AACM,gBAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,YACE,MAAI,CAACC,WAAL;AACE;AACCH,QAAAA,GAAG,CAACI,OAFP,EAGE,MAHF,CADF,EAME;AACA,iBAAOF,IAAI,EAAX;AACD;;AAEDD,QAAAA,GAAG,CAACI,IAAJ,CAAS,qBAAT;AACD,OApBH;AAsBD;AAED;AACF;AACA;AACA;;;;WACE,8BAAqB;AACnB,UAAMC,oBAAoB,GAAG/S,OAAO,CAAC,wBAAD,CAApC,CADmB,CAGnB;;;AACA,WAAKgT,UAAL,GAAkBD,oBAAoB,CACpC,KAAKhS,QAD+B,EAEpC,KAAKD,OAAL,CAAa2H,aAFuB,CAAtC;AAID;AAED;AACF;AACA;AACA;;;;WACE,8BAAqB;AAAA;;AACnB,UAAQ+E,GAAR,GAA4B,IAA5B,CAAQA,GAAR;AAAA,UAAawF,UAAb,GAA4B,IAA5B,CAAaA,UAAb;AAEA;;AACCxF,MAAAA,GAAD,CAAMyF,GAAN,CACE,0CADF;AAEE;AACN;AACA;AACA;AACA;AACM,gBAACR,GAAD,EAAMC,GAAN,EAAc;AACZA,QAAAA,GAAG,CAACQ,SAAJ,CAAc,cAAd,EAA8B,wBAA9B;AAEA,YAAQC,gBAAR,GAA6B/S,EAA7B,CAAQ+S,gBAAR;AACA,YAAMC,UAAU,GAAGnT,IAAI,CAACkH,IAAL,CAAUkM,SAAV,EAAqB,IAArB,EAA2B,QAA3B,CAAnB;AAEAF,QAAAA,gBAAgB,CACdlT,IAAI,CAACkH,IAAL,CAAUiM,UAAV,EAAsB,gCAAtB,CADc,CAAhB,CAEEE,IAFF,CAEOZ,GAFP;AAGD,OAhBH;AAmBA;;AACClF,MAAAA,GAAD,CAAMyF,GAAN,CACE,gCADF;AAEE;AACN;AACA;AACA;AACA;AACM,gBAACM,IAAD,EAAOb,GAAP,EAAe;AACb,QAAA,MAAI,CAACc,UAAL;;AAEAd,QAAAA,GAAG,CAACe,GAAJ;AACD,OAXH;AAcA;;AACCjG,MAAAA,GAAD,CAAMyF,GAAN,CACE,qBADF;AAEE;AACN;AACA;AACA;AACA;AACM,gBAACR,GAAD,EAAMC,GAAN,EAAc;AACZ;AACCM,QAAAA,UAAD,CAAaU,cAAb,CAA4B,UAAClK,KAAD,EAAW;AACrCkJ,UAAAA,GAAG,CAACQ,SAAJ,CAAc,cAAd,EAA8B,WAA9B;AACAR,UAAAA,GAAG,CAACiB,KAAJ,CACE,iEADF;AAIA,cAAMC,aAAa,GACjB;AAAQ;AAA2BpK,UAAAA,KAAD,CAAQA,KAA1C,KAAqD,WAArD;AACI;AAA2BA,UAAAA,KAAD,CAAQ0I,MAAR,GAAiB2B,QAD/C,GAEI;AAAC;AAAsBrK,UAAAA,KAAD,CAAQ0I,MAAR,EAAtB,CAHN;AAKAQ,UAAAA,GAAG,CAACiB,KAAJ;AAEA;AACV;AACA;;AACWC,UAAAA,aAAD,CAAgBhP,OAAhB,CAAwB,UAAC8C,IAAD,EAAOoM,KAAP,EAAiB;AACvCpB,YAAAA,GAAG,CAACiB,KAAJ,CAAU,OAAV;AAEA,gBAAMzS,IAAI,GACR;AACA,mBAAOwG,IAAI,CAACxG,IAAZ,KAAqB,WAArB,GACIwG,IAAI,CAACxG,IADT;AAEI;AAA2BsI,YAAAA,KAAD,CAAQA,KAAR,qBACfsK,KADe,SAE1B,SANN;AAQApB,YAAAA,GAAG,CAACiB,KAAJ,4BAA8BzS,IAA9B;AACAwR,YAAAA,GAAG,CAACiB,KAAJ,CAAU,MAAV;AAEA,gBAAMrM,UAAU,GACdI,IAAI,CAACJ,UAAL,KAAoB,MAApB,GAA6B,EAA7B,GAAkCI,IAAI,CAACJ,UADzC;;AAduC;AAiBnB;AAClBI,YAAAA,IAAI,CAACqM,MAlBgC;AAAA;;AAAA;AAiBvC,qEAEG;AAAA,oBAFQC,KAER;AACD,oBAAMC,SAAS,GAAGD,KAAK,CAAC9S,IAAxB;AACA,oBAAMgT,QAAQ,aAAM5M,UAAN,SAAmB2M,SAAnB,CAAd;AAEAvB,gBAAAA,GAAG,CAACiB,KAAJ,iDAEmBO,QAFnB,kCAEgDD,SAFhD;AAKD;AA5BsC;AAAA;AAAA;AAAA;AAAA;;AA8BvCvB,YAAAA,GAAG,CAACiB,KAAJ,CAAU,OAAV;AACAjB,YAAAA,GAAG,CAACiB,KAAJ,CAAU,QAAV;AACD,WAhCD;AAkCAjB,UAAAA,GAAG,CAACe,GAAJ,CAAQ,gBAAR;AACD,SAnDD;AAoDD,OA7DH;AA+DD;AAED;AACF;AACA;AACA;;;;WACE,iCAAwB;AAAA;;AACtB;AAAI;AAAmC,WAAK3S,OAAL,CAAa2N,MAAd,CAAsBnJ,MAAtB,GAA+B,CAArE,EAAwE;AACtE;AACC,aAAKxE,OAAL,CAAa2N,MAAd,CAAsB7J,OAAtB,CAA8B,UAACuP,YAAD,EAAkB;AAC9C,cAAIA,YAAY,CAAC1M,KAAjB,EAAwB;AACtB,YAAA,MAAI,CAACiH,UAAL,CAAgByF,YAAY,CAACjN,SAA7B,EAAwCiN,YAAY,CAAC1M,KAArD;AACD;AACF,SAJD;AAKD;AACF;AAED;AACF;AACA;AACA;;;;WACE,2BAAkB;AAAA;;AAChB,UAAQiH,UAAR,GAAuB,KAAK5N,OAA5B,CAAQ4N,UAAR;;AAEA;AAAI;AAA6BA,MAAAA,UAAD,CAAapJ,MAAb,GAAsB,CAAtD,EAAyD;AACvD;AACCoJ,QAAAA,UAAD,CAAa9J,OAAb,CAAqB,UAAC8C,IAAD,EAAU;AAC7B,UAAA,MAAI,CAACgH,UAAL,CAAgBhH,IAAI,CAACiH,KAArB,EAA4BjH,IAAI,CAAC5G,OAAjC;AACD,SAFD;AAGD;AACF;AAED;AACF;AACA;AACA;;;;WACE,4BAAmB;AAAA;;AACjB;AACJ;AACA;AACI,UAAIsT,WAAW,GAAG,EAAlB,CAJiB,CAMjB;;AACA,UAAI,KAAKtT,OAAL,CAAa0H,QAAjB,EAA2B;AACzB,YAAM6L,WAAW,GAAGrU,OAAO,CAAC,aAAD,CAA3B;;AAEAoU,QAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AAAEvC,UAAAA,IAAI,EAAE,aAAR;AAAuB8R,UAAAA,UAAU,EAAEqB,WAAW;AAA9C,SAAjB;AACD;;AAED,UAAI,OAAO,KAAKvT,OAAL,CAAagN,uBAApB,KAAgD,UAApD,EAAgE;AAC9D,aAAKhN,OAAL,CAAagN,uBAAb,CAAqC,IAArC;AACD;;AAED,UAAI,OAAO,KAAKhN,OAAL,CAAa+R,OAApB,KAAgC,WAApC,EAAiD;AAC/CuB,QAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,UAAAA,IAAI,EAAE,aADS;AAEfjB,UAAAA,IAAI,EAAE,GAFS;AAGf+S,UAAAA,UAAU,EAAE,KAAKsB,UAAL,CAAgBC,IAAhB,CAAqB,IAArB;AAHG,SAAjB;AAKD;;AAEDH,MAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,QAAAA,IAAI,EAAE,wBADS;AAEf8R,QAAAA,UAAU;AACR;AACC,aAAKA;AAJO,OAAjB;;AAOA,UAAI,KAAKlS,OAAL,CAAaiN,KAAjB,EAAwB;AACtB,wBAAkC/N,OAAO,CAAC,uBAAD,CAAzC;AAAA,YAAQwU,qBAAR,aAAQA,qBAAR;AAEA;AACN;AACA;AACA;;;AACM,YAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD,EAAiB;AAC1C;AACA;AACA,cAAIA,WAAW,CAACzS,MAAhB,EAAwB;AACtB,gBAAM8B,OAAO,GAAG2Q,WAAW,CAAC3Q,OAAZ,IAAuB2Q,WAAW,CAACzU,IAAnD;AAEA,mBAAOuU,qBAAqB;AAC1B;AAAuBzQ,YAAAA,OADG,EAE1B2Q,WAF0B,CAA5B;AAID;;AAED,cAAIA,WAAW,CAACC,MAAhB,EAAwB;AACtB,mBAAOH,qBAAqB,CAACE,WAAD,CAA5B;AACD;AACF,SAfD;AAiBA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM;;;AACC,aAAK5T,OAAL,CAAaiN,KAAd,CAAqBnJ,OAArB,CAA6B,UAACgQ,qBAAD,EAA2B;AACtD;AACR;AACA;AACQ,cAAIC,eAAJ;AAEA,cAAIH,WAAW,GACb,OAAOE,qBAAP,KAAiC,UAAjC,GACIA,qBAAqB,EADzB,GAEIA,qBAHN;AAKAC,UAAAA,eAAe;AACb;AACCJ,UAAAA,kBAAkB,CAACC,WAAD,CAFrB;;AAIA,cAAIA,WAAW,CAACI,EAAhB,EAAoB;AAClB,YAAA,MAAI,CAACtT,gBAAL,CAAsBiC,IAAtB,CAA2BoR,eAA3B;AACD;AAED;AACR;AACA;AACA;AACA;AACA;;;AACQ,cAAME,OAAO;AAAA,gFAAG,kBAAOtC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,0BAAI,OAAOiC,qBAAP,KAAiC,UAArC,EAAiD;AACzCI,wBAAAA,cADyC,GACxBJ,qBAAqB,CAACnC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CADG;;AAG/C,4BAAIqC,cAAc,KAAKN,WAAvB,EAAoC;AAClCA,0BAAAA,WAAW,GAAGM,cAAd;AACAH,0BAAAA,eAAe;AACb;AACCJ,0BAAAA,kBAAkB,CAACC,WAAD,CAFrB;AAGD;AACF,uBAVa,CAYd;AACA;AACA;AACA;;;AACMO,sBAAAA,mBAhBQ,GAgBc,OAAOP,WAAW,CAACQ,MAAnB,KAA8B,UAhB5C;;AAAA,2BAiBID,mBAjBJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBJ;AAAuBP,wBAAAA,WAAW,CAACQ,MAAb,CAC1BzC,GAD0B,EAE1BC,GAF0B,EAG1BgC,WAH0B;AAlBlB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qCAuBV,IAvBU;;AAAA;AAiBRS,sBAAAA,SAjBQ;;AAAA,4BAyBV,OAAOA,SAAP,KAAqB,SAzBX;AAAA;AAAA;AAAA;;AA0BZ;AACA;AACA1C,sBAAAA,GAAG,CAACvS,GAAJ,GAAU,IAAV;AACAyS,sBAAAA,IAAI;AA7BQ;AAAA;;AAAA;AAAA,4BA8BH,OAAOwC,SAAP,KAAqB,QA9BlB;AAAA;AAAA;AAAA;;AA+BZ;AACA1C,sBAAAA,GAAG,CAACvS,GAAJ,GAAUiV,SAAV;AACAxC,sBAAAA,IAAI;AAjCQ;AAAA;;AAAA;AAAA,2BAkCHkC,eAlCG;AAAA;AAAA;AAAA;;AAAA,wDAmCLA,eAAe,CAACpC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAnCV;;AAAA;AAqCZA,sBAAAA,IAAI;;AArCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH;;AAAA,4BAAPoC,OAAO;AAAA;AAAA;AAAA,aAAb;;AAyCAX,UAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,YAAAA,IAAI,EAAE,uBADS;AAEf8R,YAAAA,UAAU,EAAE+B;AAFG,WAAjB,EAlEsD,CAsEtD;;AACAX,UAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,YAAAA,IAAI,EAAE,qCADS;AAEf8R,YAAAA,UAAU;AACR;AACZ;AACA;AACA;AACA;AACA;AACA;AACY,gCAACpJ,KAAD,EAAQ6I,GAAR,EAAaC,GAAb,EAAkBC,IAAlB;AAAA,qBAA2BoC,OAAO,CAACtC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAlC;AAAA;AAVa,WAAjB;AAYD,SAnFD;AAqFAyB,QAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,UAAAA,IAAI,EAAE,wBADS;AAEf8R,UAAAA,UAAU;AACR;AACC,eAAKA;AAJO,SAAjB;AAMD;;AAED;AAAI;AAAmC,WAAKlS,OAAL,CAAa2N,MAAd,CAAsBnJ,MAAtB,GAA+B,CAArE,EAAwE;AACtE;AACC,aAAKxE,OAAL,CAAa2N,MAAd,CAAsB7J,OAAtB,CAA8B,UAACuP,YAAD,EAAkB;AAC9CA,UAAAA,YAAY,CAAC7M,UAAb,CAAwB1C,OAAxB,CAAgC,UAAC0C,UAAD,EAAgB;AAC9C8M,YAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,cAAAA,IAAI,EAAE,gBADS;AAEfjB,cAAAA,IAAI,EAAEqH,UAFS;AAGf0L,cAAAA,UAAU,EAAEzS,OAAO,CAACkO,MAAR,CACV0F,YAAY,CAACjN,SADH,EAEViN,YAAY,CAAC9M,aAFH;AAHG,aAAjB;AAQD,WATD;AAUD,SAXD;AAYD;;AAED,UAAI,KAAKvG,OAAL,CAAa4H,kBAAjB,EAAqC;AACnC,YAAM0M,yBAAyB,GAAGpV,OAAO,CAAC,8BAAD,CAAzC;;AACA,YAAQ0I,kBAAR,GAA+B,KAAK5H,OAApC,CAAQ4H,kBAAR;;AAEA,YACE;AACE;AACCA,QAAAA,kBAAD,CAAqBtH,MAFvB,KAGM,WAHN,IAIA;AACE;AACCsH,QAAAA,kBAAD,CAAqB2M,OAPzB,EASE;AACA;AACA3M,UAAAA,kBAAkB,CAACtH,MAAnB,GAA4B,KAAKA,MAAL,CAAYkU,GAAZ,CAAgBf,IAAhB,CAC1B,KAAKnT,MADqB,EAE1B,gCAF0B,CAA5B;AAID,SAnBkC,CAqBnC;;;AACAgT,QAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,UAAAA,IAAI,EAAE,8BADS;AAEf8R,UAAAA,UAAU,EAAEoC,yBAAyB;AACnC;AACC1M,UAAAA,kBAFkC;AAFtB,SAAjB,EAtBmC,CA8BnC;AACA;;AACA0L,QAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,UAAAA,IAAI,EAAE,wBADS;AAEf8R,UAAAA,UAAU;AACR;AACC,eAAKA;AAJO,SAAjB;;AAOA;AAAI;AAAmC,aAAKlS,OAAL,CAAa2N,MAAd,CAAsBnJ,MAAtB,GAA+B,CAArE,EAAwE;AACtE;AACC,eAAKxE,OAAL,CAAa2N,MAAd,CAAsB7J,OAAtB,CAA8B,UAACuP,YAAD,EAAkB;AAC9CA,YAAAA,YAAY,CAAC7M,UAAb,CAAwB1C,OAAxB,CAAgC,UAAC0C,UAAD,EAAgB;AAC9C8M,cAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,gBAAAA,IAAI,EAAE,gBADS;AAEfjB,gBAAAA,IAAI,EAAEqH,UAFS;AAGf0L,gBAAAA,UAAU,EAAEzS,OAAO,CAACkO,MAAR,CACV0F,YAAY,CAACjN,SADH,EAEViN,YAAY,CAAC9M,aAFH;AAHG,eAAjB;AAQD,aATD;AAUD,WAXD;AAYD;AACF;;AAED;AAAI;AAAmC,WAAKvG,OAAL,CAAa2N,MAAd,CAAsBnJ,MAAtB,GAA+B,CAArE,EAAwE;AACtE,YAAMiC,UAAU,GAAGvH,OAAO,CAAC,aAAD,CAA1B;AAEA;;;AACC,aAAKc,OAAL,CAAa2N,MAAd,CAAsB7J,OAAtB,CAA8B,UAACuP,YAAD,EAAkB;AAC9CA,UAAAA,YAAY,CAAC7M,UAAb,CAAwB1C,OAAxB,CAAgC,UAAC0C,UAAD,EAAgB;AAC9C,gBAAI6M,YAAY,CAAC5M,UAAjB,EAA6B;AAC3B6M,cAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,gBAAAA,IAAI,EAAE,aADS;AAEfjB,gBAAAA,IAAI,EAAEqH,UAFS;;AAGf;AACd;AACA;AACA;AACA;AACA;AACc0L,gBAAAA,UAAU,EAAE,oBAACP,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9B;AACA,sBAAIF,GAAG,CAAC8C,MAAJ,KAAe,KAAf,IAAwB9C,GAAG,CAAC8C,MAAJ,KAAe,MAA3C,EAAmD;AACjD,2BAAO5C,IAAI,EAAX;AACD;;AAEDpL,kBAAAA,UAAU,CACR4M,YAAY,CAACjN,SADL;AAER;AACCiN,kBAAAA,YAAY,CAAC5M,UAHN,CAAV,CAIEkL,GAJF,EAIOC,GAJP,EAIYC,IAJZ;AAKD;AApBc,eAAjB;AAsBD;AACF,WAzBD;AA0BD,SA3BD;AA4BD;;AAED,UAAI,KAAK7R,OAAL,CAAaqM,SAAjB,EAA4B;AAC1BiH,QAAAA,WAAW,CAAC3Q,IAAZ,CAAiB;AACfvC,UAAAA,IAAI,EAAE,kBADS;AAEf8R,UAAAA,UAAU,EAAE,KAAKwC,cAAL,CAAoBjB,IAApB,CAAyB,IAAzB;AAFG,SAAjB;AAID;;AAED,UAAI,OAAO,KAAKzT,OAAL,CAAaqQ,gBAApB,KAAyC,UAA7C,EAAyD;AACvDiD,QAAAA,WAAW,GAAG,KAAKtT,OAAL,CAAaqQ,gBAAb,CAA8BiD,WAA9B,EAA2C,IAA3C,CAAd;AACD;;AAEDA,MAAAA,WAAW,CAACxP,OAAZ,CAAoB,UAACoO,UAAD,EAAgB;AAClC,YAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpC;AACC,UAAA,MAAI,CAACxF,GAAN,CAAWiI,GAAX,CAAezC,UAAf;AACD,SAHD,MAGO,IAAI,OAAOA,UAAU,CAAC/S,IAAlB,KAA2B,WAA/B,EAA4C;AACjD;AACC,UAAA,MAAI,CAACuN,GAAN,CAAWiI,GAAX,CAAezC,UAAU,CAAC/S,IAA1B,EAAgC+S,UAAU,CAACA,UAA3C;AACD,SAHM,MAGA;AACL;AACC,UAAA,MAAI,CAACxF,GAAN,CAAWiI,GAAX,CAAezC,UAAU,CAACA,UAA1B;AACD;AACF,OAXD;;AAaA,UAAI,OAAO,KAAKlS,OAAL,CAAa+M,sBAApB,KAA+C,UAAnD,EAA+D;AAC7D,aAAK/M,OAAL,CAAa+M,sBAAb,CAAoC,IAApC;AACD;AACF;AAED;AACF;AACA;AACA;;;;WACE,wBAAe;AAAA;;AACb;AAA0B;AACxB,WAAK/M,OAAL,CAAa2B,MADf;AAAA,UAAQC,IAAR,wBAAQA,IAAR;AAAA,UAAc5B,OAAd,wBAAcA,OAAd;AAIA;AACA;;AACA,WAAK2B,MAAL,GAAczC,OAAO;AAAC;AAAuB0C,MAAAA,IAAxB,CAAP,CAAsC0O,YAAtC,CACZtQ,OADY,EAEZ,KAAK0M,GAFO,CAAd;AAKA;;AACC,WAAK/K,MAAN,CAAcmP,EAAd,CACE,YADF;AAEE;AACN;AACA;AACM,gBAAC8D,MAAD,EAAY;AACV;AACA,QAAA,OAAI,CAACjU,OAAL,CAAagC,IAAb,CAAkBiS,MAAlB;;AAEAA,QAAAA,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAqB,YAAM;AACzB;AACA,UAAA,OAAI,CAAClU,OAAL,CAAamU,MAAb,CAAoB,OAAI,CAACnU,OAAL,CAAaoU,OAAb,CAAqBH,MAArB,CAApB,EAAkD,CAAlD;AACD,SAHD;AAID,OAbH;AAgBA;;AACC,WAAKjT,MAAN,CAAcmP,EAAd,CACE,OADF;AAEE;AACN;AACA;AACM,gBAAChI,KAAD,EAAW;AACT,cAAMA,KAAN;AACD,OAPH;AASD;AAED;AACF;AACA;AACA;AACE;;;;WACA,iCAAwB;AAAA;;AACtB;AACA,WAAKxH,eAAL,GAAuB;AAAI;AAAoB,WAAK0T,kBAAL,EAAxB,EACrB,IADqB,CAAvB;AAGA;;AACC,WAAK1T,eAAN,CAAuBgN,cAAvB,CAAsCwC,EAAtC,CACE,YADF;AAEE;AACN;AACA;AACA;AACM,gBAAC1P,MAAD,EAAS6T,OAAT,EAAqB;AACnB;AACA,YAAMlD,OAAO,GACX;AACA,eAAOkD,OAAP,KAAmB,WAAnB;AACI;AACCA,QAAAA,OAAO,CAAClD,OAFb,GAGI;AACE;AAA4C3Q,QAAAA,MAAD,CAAS2Q,OADtD,KAEM,WAFN;AAGA;AAA4C3Q,QAAAA,MAAD,CAAS2Q,OAHpD,GAIA;AACAlR,QAAAA,SAVN;;AAYA,YAAI,CAACkR,OAAL,EAAc;AACZ,UAAA,OAAI,CAACzR,MAAL,CAAYuL,IAAZ,CACE,6EADF;AAGD;;AAED,YACE,CAACkG,OAAD,IACA,CAAC,OAAI,CAACD,WAAL,CAAiBC,OAAjB,EAA0B,MAA1B,CADD,IAEA,CAAC,OAAI,CAACD,WAAL,CAAiBC,OAAjB,EAA0B,QAA1B,CAHH,EAIE;AACA,UAAA,OAAI,CAAChD,WAAL,CAAiB,CAAC3N,MAAD,CAAjB,EAA2B,OAA3B,EAAoC,4BAApC,EADA,CAGA;AACA;;;AACAA,UAAAA,MAAM,CAACyP,KAAP;AAEA;AACD;;AAED,YAAI,OAAI,CAAC7Q,OAAL,CAAa6C,GAAb,KAAqB,IAArB,IAA6B,OAAI,CAAC7C,OAAL,CAAa6C,GAAb,KAAqB,MAAtD,EAA8D;AAC5D,UAAA,OAAI,CAACkM,WAAL,CAAiB,CAAC3N,MAAD,CAAjB,EAA2B,KAA3B;AACD;;AAED,YAAI,OAAI,CAACpB,OAAL,CAAaoM,UAAjB,EAA6B;AAC3B,UAAA,OAAI,CAAC2C,WAAL,CAAiB,CAAC3N,MAAD,CAAjB,EAA2B,YAA3B;AACD;;AAED,YACE,OAAI,CAACpB,OAAL,CAAaoB,MAAb;AACA;AACC,QAAA,OAAI,CAACpB,OAAL,CAAaoB,MAAd,CAAsBwO,QAHxB,EAIE;AACA,UAAA,OAAI,CAACb,WAAL,CACE,CAAC3N,MAAD,CADF,EAEE,UAFF;AAGE;AACC,UAAA,OAAI,CAACpB,OAAL,CAAaoB,MAAd,CAAsBwO,QAJxB;AAMD;;AAED,YACE,OAAI,CAAC5P,OAAL,CAAaoB,MAAb;AACA;AAAoC,QAAA,OAAI,CAACpB,OAAL,CAAaoB,MAAd,CAAsBqB,SAF3D,EAGE;AACA,UAAA,OAAI,CAACsM,WAAL,CACE,CAAC3N,MAAD,CADF,EAEE,WAFF;AAGE;AACC,UAAA,OAAI,CAACpB,OAAL,CAAaoB,MAAd,CAAsBqB,SAJxB;AAMD;;AAED,YACE,OAAI,CAACzC,OAAL,CAAaoB,MAAb;AACA;AACC,QAAA,OAAI,CAACpB,OAAL,CAAaoB,MAAd,CAAsBgG,OAHxB,EAIE;AACA,UAAA,OAAI,CAAC2H,WAAL,CACE,CAAC3N,MAAD,CADF,EAEE,SAFF;AAGE;AACC,UAAA,OAAI,CAACpB,OAAL,CAAaoB,MAAd,CAAsBgG,OAJxB;AAMD;;AAED,YAAI,CAAC,OAAI,CAACsB,KAAV,EAAiB;AACf;AACD;;AAED,QAAA,OAAI,CAAC8I,SAAL,CAAe,CAACpQ,MAAD,CAAf,EAAyB,OAAI,CAACqQ,QAAL,CAAc,OAAI,CAAC/I,KAAnB,CAAzB,EAAoD,IAApD;AACD,OA3FH;AA6FD;AAED;AACF;AACA;AACA;AACA;;;;WACE,qBAAYwM,iBAAZ,EAA+B;AAAA;;AAC7B,UAAMrI,IAAI,GAAG3N,OAAO,CAAC,MAAD,CAApB;;AAEAoE,MAAAA,OAAO,CAACoO,GAAR;AACE;AACC,WAAK1R,OAAL,CAAa6M,IAAd,CAAoB7D,GAApB,CAAwB,UAACpC,IAAD,EAAU;AAChC;AACR;AACA;AACQ,YAAIuO,UAAJ;;AAEA,YAAIvO,IAAI,CAACzF,MAAL,KAAgB,OAApB,EAA6B;AAC3BgU,UAAAA,UAAU,GAAGD,iBAAb;AACD,SAFD,MAEO;AACLC,UAAAA,UAAU,GAAGpV,MAAM,CAAC+G,aAAP,CAAqBF,IAAI,CAACzF,MAA1B,IACTyF,IAAI,CAACzF,MADI,GAET,IAAIgG,GAAJ,CAAQP,IAAI,CAACzF,MAAb,EAAqB+T,iBAArB,EAAwCxS,QAAxC,EAFJ;AAGD;;AAED,eAAOmK,IAAI,CAACsI,UAAD,EAAavO,IAAI,CAAC5G,OAAlB,CAAJ,CAA+BoV,KAA/B,CAAqC,YAAM;AAChD,UAAA,OAAI,CAAC9U,MAAL,CAAYuL,IAAZ,4BACqBsJ,UADrB,oBAEIvO,IAAI,CAAC5G,OAAL,CAAa0M,GAAb;AAEM;AACC9F,UAAAA,IAAI,CAAC5G,OAAL,CAAa0M,GAAd,CAAmBtM,IAHzB;AAKM;AACCwG,UAAAA,IAAI,CAAC5G,OAAL,CAAa0M,GAAd,CAAmB2I,SAAnB;AAEM;AACCzO,UAAAA,IAAI,CAAC5G,OAAL,CAAa0M,GAAd,CAAmB2I,SAAnB,CAA6BhP,IAA7B,CAAkC,GAAlC,CAHN,oBAKI,EAXV,IAaI,EAfR;AAkBD,SAnBM,CAAP;AAoBD,OAlCD,CAFF;AAsCD;AAED;AACF;AACA;AACA;;;;WACE,sBAAa;AACX;AACJ;AACA;AACA;AACI,WAAKY,OAAL,GAAe/H,OAAO,CAAC,SAAD,CAAP,EAAf;AACA,WAAK+H,OAAL,CAAaqO,OAAb;AACElV,QAAAA,IAAI,+BAAwBnB,EAAE,CAAC+C,QAAH,EAAxB,cAAyC,KAAKhC,OAAL,CAAamC,IAAtD,CADN;AAEEA,QAAAA,IAAI;AAAE;AAAuB,aAAKnC,OAAL,CAAamC,IAF5C;AAGEP,QAAAA,IAAI;AACF;AACC,aAAK5B,OAAL,CAAa2B,MAAd,CAAsBC,IAAtB,KAA+B,MAA/B,GAAwC,MAAxC,GAAiD,OALrD;AAME2T,QAAAA,QAAQ,EAAE,CAAC,SAAD;AANZ;AAOK;AAA+B,WAAKvV,OAAL,CAAaiH,OAPjD;AASD;AAED;AACF;AACA;AACA;;;;WACE,uBAAiC;AAAA;;AAAA,UAArBuO,QAAqB,uEAAV,YAAM,CAAE,CAAE;;AAC/B;AACC,WAAKvO,OAAN,CAAewO,YAAf,CAA4B,YAAM;AAChC;AACC,QAAA,OAAI,CAACxO,OAAN,CAAeyO,OAAf;;AAEA,YAAIF,QAAJ,EAAc;AACZA,UAAAA,QAAQ;AACT;AACF,OAPD;AAQD;AAED;AACF;AACA;AACA;;;;WACE,qBAAY;AACV,sBAAwCtW,OAAO,CAAC,WAAD,CAA/C;AAAA,UAAQyW,gBAAR,aAAQA,gBAAR;AAAA,UAA0BC,IAA1B,aAA0BA,IAA1B;AAAA,UAAgCC,GAAhC,aAAgCA,GAAhC;AAEA;AACJ;AACA;AACA;;;AACI,UAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAChR,eAAD,EAAqB;AAC3C;AACN;AACA;AACM,YAAIiR,aAAJ;;AAEA,YACEjR,eAAe,CAAC4D,KAAhB,IACA;AAAQ;AAA6B5D,QAAAA,eAAe,CAAC4D,KAAjB,CAAwBsN,MAA5D,KACE,WAHJ,EAIE;AACAD,UAAAA,aAAa;AACX;;AACC;AAA6BjR,UAAAA,eAAe,CAAC4D,KAAjB,CAAwBsN,MAFvD;AAGD,SARD,MAQO;AACLD,UAAAA,aAAa,GAAGJ,gBAAhB;AACD;;AAED,eAAOI,aAAP;AACD,OAnBD;;AAqBA,UAAMC,MAAM,GAAG;AACb;AACN;AACA;AACA;AACA;AACMjM,QAAAA,IANa,gBAMRkM,QANQ,EAMEvH,GANF,EAMO;AAClB,cAAIuH,QAAJ,EAAc;AACZ,mBAAOL,IAAI,CAAClH,GAAD,CAAX;AACD;;AAED,iBAAOA,GAAP;AACD,SAZY;;AAab;AACN;AACA;AACA;AACA;AACM5F,QAAAA,KAlBa,iBAkBPmN,QAlBO,EAkBGvH,GAlBH,EAkBQ;AACnB,cAAIuH,QAAJ,EAAc;AACZ,mBAAOJ,GAAG,CAACnH,GAAD,CAAV;AACD;;AAED,iBAAOA,GAAP;AACD;AAxBY,OAAf;AA0BA,UAAMuH,QAAQ,GAAGH,eAAe,CAAC,KAAK/Q,kBAAL,EAAD,CAAhC;;AAEA,UAAI,KAAK/E,OAAL,CAAa8L,GAAjB,EAAsB;AACpB,aAAKxL,MAAL,CAAYyJ,IAAZ;AAEI;AACC,aAAKpI,MAAN,CAAcuU,OAAd,EAHJ;AAMD,OAPD,MAOO;AACL,YAAMxU,QAAQ;AACZ;AACC,aAAK1B,OAAL,CAAa2B,MAAd,CAAsBC,IAAtB,KAA+B,MAA/B,GAAwC,MAAxC,GAAiD,OAFnD;;AAGA;AACE;;AAEE;AACC,aAAKD,MAAN,CAAcuU,OAAd,EAJJ;AAAA,YAAQA,OAAR,wBAAQA,OAAR;AAAA,YAAiB/T,IAAjB,wBAAiBA,IAAjB;AAMA;AACN;AACA;AACA;;;AACM,YAAMgU,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD;AAAA,iBACrBhX,GAAG,CAACiX,MAAJ,CAAW;AAAE3U,YAAAA,QAAQ,EAARA,QAAF;AAAYM,YAAAA,QAAQ,EAAEoU,WAAtB;AAAmCjU,YAAAA,IAAI,EAAJA,IAAnC;AAAyCG,YAAAA,QAAQ,EAAE;AAAnD,WAAX,CADqB;AAAA,SAAvB;;AAGA,YAAIX,MAAJ;AACA,YAAI2U,SAAJ;AACA,YAAIC,YAAJ;AACA,YAAIC,YAAJ;AACA,YAAIC,cAAJ;AACA,YAAIC,cAAJ;;AAEA,YAAI,KAAK1W,OAAL,CAAakC,IAAjB,EAAuB;AACrB,cAAI,KAAKlC,OAAL,CAAakC,IAAb,KAAsB,WAA1B,EAAuC;AACrCoU,YAAAA,SAAS,GAAGH,cAAc,CAAC,WAAD,CAA1B;AACD,WAFD,MAEO;AACL,gBAAIQ,IAAJ;;AAEA,gBAAI;AACFA,cAAAA,IAAI,GAAGpX,MAAM,CAACqX,KAAP,CAAa,KAAK5W,OAAL,CAAakC,IAA1B,CAAP;AACD,aAFD,CAEE,OAAO4G,KAAP,EAAc,CACd;AACD;;AAED,gBAAI,CAAC6N,IAAL,EAAW;AACThV,cAAAA,MAAM,GAAGwU,cAAc,CAAC,KAAKnW,OAAL,CAAakC,IAAd,CAAvB;AACD;AACF;AACF;;AAED,YAAM2U,QAAQ,GAAGtX,MAAM,CAACqX,KAAP,CAAaV,OAAb,CAAjB;;AAEA,YAAIW,QAAQ,CAACC,KAAT,OAAqB,aAAzB,EAAwC;AACtCR,UAAAA,SAAS,GAAGH,cAAc,CAAC,WAAD,CAA1B;AAEA,cAAMY,WAAW,GAAGhX,MAAM,CAACiX,cAAP,CAAsB,IAAtB,CAApB;;AAEA,cAAID,WAAJ,EAAiB;AACfN,YAAAA,cAAc,GAAGN,cAAc,CAACY,WAAD,CAA/B;AACD;;AAED,cAAME,WAAW,GAAGlX,MAAM,CAACiX,cAAP,CAAsB,IAAtB,CAApB;;AAEA,cAAIC,WAAJ,EAAiB;AACfP,YAAAA,cAAc,GAAGP,cAAc,CAACc,WAAD,CAA/B;AACD;AACF,SAdD,MAcO,IAAIJ,QAAQ,CAACC,KAAT,OAAqB,UAAzB,EAAqC;AAC1C,cAAID,QAAQ,CAACK,IAAT,OAAoB,MAAxB,EAAgC;AAC9BX,YAAAA,YAAY,GAAGJ,cAAc,CAACU,QAAQ,CAACnU,QAAT,EAAD,CAA7B;AACD,WAFD,MAEO,IAAImU,QAAQ,CAACK,IAAT,OAAoB,MAAxB,EAAgC;AACrCV,YAAAA,YAAY,GAAGL,cAAc,CAACU,QAAQ,CAACnU,QAAT,EAAD,CAA7B;AACD;AACF,SANM,MAMA;AACL+T,UAAAA,cAAc,GACZI,QAAQ,CAACK,IAAT,OAAoB,MAApB;AACA;AACCL,UAAAA,QAAD,CAAWM,mBAAX,EAFA,GAGIhB,cAAc;AACZ;AACCU,UAAAA,QAAD,CAAWO,aAAX,GAA2B1U,QAA3B,EAFY,CAHlB,GAOIyT,cAAc,CAACD,OAAD,CARpB;;AAUA,cAAIW,QAAQ,CAACK,IAAT,OAAoB,MAAxB,EAAgC;AAC9BR,YAAAA,cAAc,GAAGP,cAAc,CAACD,OAAD,CAA/B;AACD;AACF;;AAED,aAAK5V,MAAL,CAAYyJ,IAAZ,CAAiB,wBAAjB;;AAEA,YAAIpI,MAAJ,EAAY;AACV,eAAKrB,MAAL,CAAYyJ,IAAZ,mBAA4BiM,MAAM,CAACjM,IAAP,CAAYkM,QAAZ,EAAsBtU,MAAtB,CAA5B;AACD;;AAED,YAAI2U,SAAS,IAAIC,YAAb,IAA6BC,YAAjC,EAA+C;AAC7C,cAAMa,SAAS,GAAG,EAAlB;;AAEA,cAAIf,SAAJ,EAAe;AACbe,YAAAA,SAAS,CAAC1U,IAAV,CAAe,CAACqT,MAAM,CAACjM,IAAP,CAAYkM,QAAZ,EAAsBK,SAAtB,CAAD,CAAf;AACD;;AAED,cAAIC,YAAJ,EAAkB;AAChBc,YAAAA,SAAS,CAAC1U,IAAV,CAAe,CAACqT,MAAM,CAACjM,IAAP,CAAYkM,QAAZ,EAAsBM,YAAtB,CAAD,CAAf;AACD;;AAED,cAAIC,YAAJ,EAAkB;AAChBa,YAAAA,SAAS,CAAC1U,IAAV,CAAe,CAACqT,MAAM,CAACjM,IAAP,CAAYkM,QAAZ,EAAsBO,YAAtB,CAAD,CAAf;AACD;;AAED,eAAKlW,MAAL,CAAYyJ,IAAZ,qBAA8BsN,SAAS,CAAChR,IAAV,CAAe,IAAf,CAA9B;AACD;;AAED,YAAIoQ,cAAJ,EAAoB;AAClB,eAAKnW,MAAL,CAAYyJ,IAAZ,mCAC6BiM,MAAM,CAACjM,IAAP,CAAYkM,QAAZ,EAAsBQ,cAAtB,CAD7B;AAGD;;AAED,YAAIC,cAAJ,EAAoB;AAClB,eAAKpW,MAAL,CAAYyJ,IAAZ,mCAC6BiM,MAAM,CAACjM,IAAP,CAAYkM,QAAZ,EAAsBS,cAAtB,CAD7B;AAGD;;AAED;AAAI;AAAiC,aAAK1W,OAAL,CAAa6M,IAAd,CAAoBrI,MAApB,GAA6B,CAAjE,EAAoE;AAClE,cAAM2Q,UAAU,GAAGgB,cAAc,CAAC,KAAKnW,OAAL,CAAakC,IAAb,IAAqB,WAAtB,CAAjC;AAEA,eAAKoV,WAAL,CAAiBnC,UAAjB;AACD;AACF;;AAED;AAAI;AAAmC,WAAKnV,OAAL,CAAa2N,MAAd,CAAsBnJ,MAAtB,GAA+B,CAArE,EAAwE;AACtE,aAAKlE,MAAL,CAAYyJ,IAAZ,oDAC8CiM,MAAM,CAACjM,IAAP,CAC1CkM,QAD0C;AAE1C;AACC,aAAKjW,OAAL,CAAa2N,MAAd,CACG3E,GADH,CACO,UAACqK,YAAD;AAAA,iBAAkBA,YAAY,CAACjN,SAA/B;AAAA,SADP,EAEGC,IAFH,CAEQ,IAFR,CAH0C,CAD9C;AASD;;AAED,UAAI,KAAKrG,OAAL,CAAa4H,kBAAjB,EAAqC;AACnC,aAAKtH,MAAL,CAAYyJ,IAAZ,kCAC4BiM,MAAM,CAACjM,IAAP,CACxBkM,QADwB;AAExB;AACE,aAAKjW,OAAL,CAAa4H,kBADiC,CAE9CoL,KAF8C,IAErC,aAJa,CAD5B;AAQD;;AAED,UAAI,KAAKhT,OAAL,CAAaiH,OAAjB,EAA0B;AACxB,YAAMsQ,eAAe;AACnB;AACC,aAAKvX,OAAL,CAAaiH,OAAd,CAAuBrF,IAAvB;AACA;AACC,aAAK5B,OAAL,CAAa2B,MAAd,CAAsBC,IAAtB,KAA+B,MAF/B,GAGI,MAHJ,GAII,OANN;AAQA,aAAKtB,MAAL,CAAYyJ,IAAZ,0BACmBwN,eADnB;AAGD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,oBAAW5F,GAAX,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AACzB,UAAME,OAAN,GAAkB,KAAK/R,OAAvB,CAAM+R,OAAN;;AAEA,UAAIA,OAAJ,EAAa;AACX,YAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjCA,UAAAA,OAAO,GAAGA,OAAO,CACfJ,GADe,EAEfC,GAFe;AAGf;AACC,eAAKM,UAAN,CAAkBjP,OAJH,CAAjB;AAMD;AAED;AACN;AACA;;;AACM,YAAMuU,UAAU,GAAG,EAAnB;;AAEA,YAAI,CAAC/T,KAAK,CAACC,OAAN,CAAcqO,OAAd,CAAL,EAA6B;AAC3B;AACA,eAAK,IAAM3R,IAAX,IAAmB2R,OAAnB,EAA4B;AAC1B;AACAyF,YAAAA,UAAU,CAAC7U,IAAX,CAAgB;AAAEoB,cAAAA,GAAG,EAAE3D,IAAP;AAAakI,cAAAA,KAAK,EAAEyJ,OAAO,CAAC3R,IAAD;AAA3B,aAAhB;AACD;;AAED2R,UAAAA,OAAO,GAAGyF,UAAV;AACD;;AAEDzF,QAAAA,OAAO,CAACjO,OAAR;AACE;AACR;AACA;AACQ,kBAAC2T,MAAD,EAAY;AACV7F,UAAAA,GAAG,CAACQ,SAAJ,CAAcqF,MAAM,CAAC1T,GAArB,EAA0B0T,MAAM,CAACnP,KAAjC;AACD,SANH;AAQD;;AAEDuJ,MAAAA,IAAI;AACL;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,qBAAYE,OAAZ,EAAqB2F,aAArB,EAAoC;AAClC;AACA;AACA,UAAI,KAAK1X,OAAL,CAAagH,YAAb,KAA8B,KAAlC,EAAyC;AACvC,eAAO,IAAP;AACD,OALiC,CAOlC;AACA;;;AACA,UAAM2Q,UAAU,GAAG5F,OAAO,CAAC2F,aAAD,CAA1B;;AAEA,UAAI,CAACC,UAAL,EAAiB;AACf,eAAO,KAAP;AACD;;AAED,UAAI,yBAAyBC,IAAzB,CAA8BD,UAA9B,CAAJ,EAA+C;AAC7C,eAAO,IAAP;AACD,OAjBiC,CAmBlC;;;AACA,UAAM3V,QAAQ,GAAG5C,GAAG,CAACwX,KAAJ,EACf;AACA,oBAAcgB,IAAd,CAAmBD,UAAnB,IAAiCA,UAAjC,eAAmDA,UAAnD,CAFe,EAGf,KAHe,EAIf,IAJe,EAKf3V,QALF,CApBkC,CA2BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAM6V,eAAe,GAClB7V,QAAQ,KAAK,IAAb,IAAqBzC,MAAM,CAACuY,IAAP,CAAYC,OAAZ,CAAoB/V,QAApB,CAAtB,IACCA,QAAQ,KAAK,IAAb,IAAqBzC,MAAM,CAACyY,IAAP,CAAYD,OAAZ,CAAoB/V,QAApB,CADtB,IAEAA,QAAQ,KAAK,WAFb,IAGAA,QAAQ,KAAK,KAAKhC,OAAL,CAAakC,IAJ5B;;AAMA,UAAI2V,eAAJ,EAAqB;AACnB,eAAO,IAAP;AACD;;AAED,UAAQ7Q,YAAR,GAAyB,KAAKhH,OAA9B,CAAQgH,YAAR,CA7CkC,CA+ClC;AACA;;AACA,UAAIvD,KAAK,CAACC,OAAN,CAAcsD,YAAd,KAA+BA,YAAY,CAACxC,MAAb,GAAsB,CAAzD,EAA4D;AAC1D,aAAK,IAAIyT,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAGjR,YAAY,CAACxC,MAA7C,EAAqDyT,OAAO,EAA5D,EAAgE;AAC9D,cAAMC,WAAW,GAAGlR,YAAY,CAACiR,OAAD,CAAhC;;AAEA,cAAIC,WAAW,KAAKlW,QAApB,EAA8B;AAC5B,mBAAO,IAAP;AACD,WAL6D,CAO9D;AACA;;;AACA,cAAIkW,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAvB,EAA4B;AAC1B;AACA;AACA,gBACElW,QAAQ,KAAKkW,WAAW,CAACC,SAAZ,CAAsB,CAAtB,CAAb;AACA;AAAuBnW,YAAAA,QAAD,CAAWoW,QAAX,CAAoBF,WAApB,CAFxB,EAGE;AACA,qBAAO,IAAP;AACD;AACF;AACF;AACF,OAtEiC,CAwElC;;;AACA,UACE,KAAKlY,OAAL,CAAaoB,MAAb,IACA;AACE;AAAoC,WAAKpB,OAAL,CAAaoB,MAAd,CAAsBG,YAD3D,KAEM,WAJR,EAKE;AACA;AACE;;AACC;AAAoC,eAAKvB,OAAL,CAAaoB,MAAd,CAAsBG,YAA1D,CACGS,QADH,KACgBA;AAHlB;AAKD,OApFiC,CAsFlC;;;AACA,aAAO,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACE;;;;WACA,qBAAYgN,OAAZ,EAAqBpN,IAArB,EAA2ByW,IAA3B,EAAiCC,MAAjC,EAAyC;AAAA,kDAClBtJ,OADkB;AAAA;;AAAA;AACvC,+DAA8B;AAAA,cAAnB5N,MAAmB;;AAC5B;AACA;AACA,cAAIA,MAAM,CAACmX,UAAP,KAAsB,CAA1B,EAA6B;AAC3BnX,YAAAA,MAAM,CAAC4Q,IAAP,CAAYwG,IAAI,CAACC,SAAL,CAAe;AAAE7W,cAAAA,IAAI,EAAJA,IAAF;AAAQyW,cAAAA,IAAI,EAAJA,IAAR;AAAcC,cAAAA,MAAM,EAANA;AAAd,aAAf,CAAZ;AACD;AACF;AAPsC;AAAA;AAAA;AAAA;AAAA;AAQxC;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,wBAAe3G,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAAA;;AAC7B,UAAIF,GAAG,CAAC8C,MAAJ,KAAe,KAAf,IAAwB9C,GAAG,CAAC8C,MAAJ,KAAe,MAA3C,EAAmD;AACjD,eAAO5C,IAAI,EAAX;AACD;AAED;;;AACC,WAAKK,UAAN,CAAkBU,cAAlB,CAAiC,YAAM;AACrC,YAAM8F,KAAK,GAAG/G,GAAG,CAACxS,IAAlB;;AAEA,YAAI;AACF,cAAMwZ,QAAQ;AACZ;AACC,UAAA,OAAI,CAACzG,UAAN,CAAkB0G,kBAAlB,WAAwCF,KAAxC,SAFF;;AAGA,cAAM7P,MAAM;AACV;;AAEE;AACC,UAAA,OAAI,CAACqJ,UAAN,CAAkBjP,OAAlB,CAA0B4V,gBAF5B,CAIGC,QAJH;AAIY;AAAsCH,UAAAA,QAJlD,EAKG9P,MALH,EAFF;;AASA,cAAI,CAACA,MAAL,EAAa;AACX,mBAAOgJ,IAAI,EAAX;AACD,WAfC,CAiBF;AACA;;;AACA,cAAMkH,OAAO,GAAGpH,GAAG,CAACqH,UAAJ,CAAeC,MAAf,IAAyB,EAAzC;AACA,cAAMC,YAAY,uIAAyHR,KAAzH,gBAAoIK,OAApI,+BAAlB;AAEAnH,UAAAA,GAAG,CAACI,IAAJ,CAASkH,YAAT;AACD,SAvBD,CAuBE,OAAOpQ,KAAP,EAAc;AACd,iBAAO+I,IAAI,EAAX;AACD;AACF,OA7BD;AA8BD,K,CAED;;AACA;AACF;AACA;AACA;AACA;AACA;;;;WACE,mBAAU7C,OAAV,EAAmBtG,KAAnB,EAA0BsB,KAA1B,EAAiC;AAC/B,UAAMmP,UAAU,GACd,CAACnP,KAAD,IACAtB,KADA,KAEC,CAACA,KAAK,CAACrB,MAAP,IAAiBqB,KAAK,CAACrB,MAAN,CAAa7C,MAAb,KAAwB,CAF1C,MAGC,CAACkE,KAAK,CAACpB,QAAP,IAAmBoB,KAAK,CAACpB,QAAN,CAAe9C,MAAf,KAA0B,CAH9C,KAIA,KAAK5D,WAAL,KAAqB8H,KAAK,CAAC0Q,IAL7B;;AAOA,UAAID,UAAJ,EAAgB;AACd,aAAKpK,WAAL,CAAiBC,OAAjB,EAA0B,UAA1B;AAEA;AACD;;AAED,WAAKpO,WAAL,GAAmB8H,KAAK,CAAC0Q,IAAzB;AACA,WAAKrK,WAAL,CAAiBC,OAAjB,EAA0B,MAA1B,EAAkCtG,KAAK,CAAC0Q,IAAxC;;AAEA;AACE;AACC1Q,MAAAA,KAAK,CAACrB,MAAP,CAAe7C,MAAf,GAAwB,CAAxB;AACA;AACCkE,MAAAA,KAAK,CAACpB,QAAP,CAAiB9C,MAAjB,GAA0B,CAJ5B,EAKE;AACA,YAAM6U,SAAS;AACb;AACC3Q,QAAAA,KAAK,CAACrB,MAAP,CAAe7C,MAAf,GAAwB,CAF1B;;AAIA;AACE;AACCkE,QAAAA,KAAK,CAACpB,QAAP,CAAiB9C,MAAjB,GAA0B,CAF5B,EAGE;AACA,cAAI8T,MAAJ;;AAEA,cAAIe,SAAJ,EAAe;AACbf,YAAAA,MAAM,GAAG;AAAEgB,cAAAA,gBAAgB,EAAE;AAApB,aAAT;AACD;;AAED,eAAKvK,WAAL,CAAiBC,OAAjB,EAA0B,UAA1B,EAAsCtG,KAAK,CAACpB,QAA5C,EAAsDgR,MAAtD;AACD;;AAED;AACE;AAAwD5P,QAAAA,KAAK,CAACrB,MAAP,CACpD7C,MADoD,GAC3C,CAFd,EAGE;AACA,eAAKuK,WAAL,CAAiBC,OAAjB,EAA0B,QAA1B,EAAoCtG,KAAK,CAACrB,MAA1C;AACD;AACF,OA7BD,MA6BO;AACL,aAAK0H,WAAL,CAAiBC,OAAjB,EAA0B,IAA1B;AACD;AACF;AAED;AACF;AACA;AACA;;;;WACE,oBAAWuK,SAAX,EAAsBtU,YAAtB,EAAoC;AAAA;;AAClC,UAAMuU,QAAQ,GAAGta,OAAO,CAAC,UAAD,CAAxB;;AACA,UAAMua,OAAO,GAAGD,QAAQ,CAAC7S,KAAT,CAAe4S,SAAf,EAA0BtU,YAA1B,CAAhB,CAFkC,CAIlC;;AACA,UAAI,KAAKjF,OAAL,CAAaoM,UAAjB,EAA6B;AAC3BqN,QAAAA,OAAO,CAAC3I,EAAR,CAAW,QAAX,EAAqB,UAAClK,IAAD,EAAU;AAC7B,cAAI,OAAI,CAACtF,eAAT,EAA0B;AACxB,YAAA,OAAI,CAACyN,WAAL,CACE,OAAI,CAACzN,eAAL,CAAqB0N,OADvB,EAEE,gBAFF,EAGEpI,IAHF;AAKD;AACF,SARD;AASD;;AAED,WAAKpG,cAAL,CAAoBmC,IAApB,CAAyB8W,OAAzB;AACD;AAED;AACF;AACA;;;;WACE,sBAAgC;AAAA,UAArBjE,QAAqB,uEAAV,YAAM,CAAE,CAAE;;AAC9B,UAAI,KAAKtD,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBQ,UAAhB,CAA2B8C,QAA3B;AACD;AACF;AAED;AACF;AACA;;;;;2EACE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAKkE,gBAAL,EADR;;AAAA;AAAA,qBAGM,KAAK1Z,OAAL,CAAa8L,GAHnB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIU;AACJ,sBAAIxI,OAAJ,CAAY,UAACV,OAAD,EAAU+W,MAAV,EAAqB;AAC/B,wBAAMC,GAAG,GAAG1a,OAAO,CAAC,KAAD,CAAnB;;AACA,wBAAM0V,MAAM,GAAG,IAAIgF,GAAG,CAACC,MAAR,EAAf;AAEAjF,oBAAAA,MAAM,CAAC9D,EAAP,CACE,OADF;AAEE;AACZ;AACA;AACY,8BAAChI,KAAD,EAAW;AACT,0BAAIA,KAAK,CAACgR,IAAN,KAAe,cAAnB,EAAmC;AACjC;AACAxa,wBAAAA,EAAE,CAACya,UAAH;AAAc;AAAuB,wBAAA,OAAI,CAAC/Z,OAAL,CAAa8L,GAAlD;AAEAlJ,wBAAAA,OAAO;AAEP;AACD,uBAPD,MAOO,IAAIkG,KAAK,CAACgR,IAAN,KAAe,QAAnB,EAA6B;AAClClX,wBAAAA,OAAO;AAEP;AACD;;AAED+W,sBAAAA,MAAM,CAAC7Q,KAAD,CAAN;AACD,qBApBH;AAuBA8L,oBAAAA,MAAM,CAACoF,OAAP,CACE;AAAE7a,sBAAAA,IAAI;AAAE;AAAuB,sBAAA,OAAI,CAACa,OAAL,CAAa8L;AAA5C,qBADF,EAEE,YAAM;AACJ,4BAAM,IAAI/E,KAAJ,iBAAkB,OAAI,CAAC/G,OAAL,CAAa8L,GAA/B,wBAAN;AACD,qBAJH;AAMD,mBAjCD;AALN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAyC8B/L,MAAM,CAACka,WAAP;AACxB;AAAqB,qBAAKja,OAAL,CAAakC,IADV,CAzC9B;;AAAA;AAyCI,qBAAKlC,OAAL,CAAakC,IAzCjB;AAAA;AAAA,uBA4C8BnC,MAAM,CAACma,WAAP;AACxB;AAAqB,qBAAKla,OAAL,CAAamC,IADV,CA5C9B;;AAAA;AA4CI,qBAAKnC,OAAL,CAAamC,IA5CjB;;AAAA;AAAA;AAAA,uBAiDQ,KAAKgY,UAAL,EAjDR;;AAAA;AAmDQC,gBAAAA,aAnDR,GAmDwB,KAAKpa,OAAL,CAAa8L,GAAb,GAClB;AAAE3M,kBAAAA,IAAI,EAAE,KAAKa,OAAL,CAAa8L;AAArB,iBADkB,GAElB;AAAE5J,kBAAAA,IAAI,EAAE,KAAKlC,OAAL,CAAakC,IAArB;AAA2BC,kBAAAA,IAAI,EAAE,KAAKnC,OAAL,CAAamC;AAA9C,iBArDN;AAAA;AAAA;AAuDQ;AACJ,sBAAImB,OAAJ,CAAY,UAACV,OAAD,EAAa;AACvB;AACC,oBAAA,OAAI,CAACjB,MAAN,CAAc0Y,MAAd,CAAqBD,aAArB,EAAoC,YAAM;AACxCxX,sBAAAA,OAAO;AACR,qBAFD;AAGD,mBALD;AAxDJ;;AAAA;AAAA,qBAgEM,KAAK5C,OAAL,CAAa8L,GAhEnB;AAAA;AAAA;AAAA;;AAiEI;AACMwO,gBAAAA,UAlEV,GAkEuB,GAlEvB;AAAA;AAAA,uBAoEUhb,EAAE,CAAC+J,QAAH,CAAYkR,KAAZ;AACJ;AAAuB,qBAAKva,OAAL,CAAa8L,GADhC,EAEJwO,UAFI,CApEV;;AAAA;AA0EE,oBAAI,KAAKta,OAAL,CAAasB,eAAjB,EAAkC;AAChC,uBAAKkZ,qBAAL;AACD;;AAED,oBAAI,KAAKxa,OAAL,CAAaiH,OAAjB,EAA0B;AACxB,uBAAKwT,UAAL;AACD;;AAED,qBAAKC,SAAL;;AAEA,oBAAI,OAAO,KAAK1a,OAAL,CAAa2a,WAApB,KAAoC,UAAxC,EAAoD;AAClD,uBAAK3a,OAAL,CAAa2a,WAAb,CAAyB,IAAzB;AACD;;AAtFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAyFA;AACF;AACA;;;;WACE,yBAAmC;AAAA,UAArBnF,QAAqB,uEAAV,YAAM,CAAE,CAAE;AACjC,WAAKoF,KAAL,GACGrX,IADH,CACQ;AAAA,eAAMiS,QAAQ,EAAd;AAAA,OADR,EAC0BA,QAD1B,EAEGJ,KAFH,CAESI,QAFT;AAGD;AAED;AACF;AACA;;;;;0EACE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAKvO,OADX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEU;AACJ,sBAAI3D,OAAJ,CAAY,UAACV,OAAD,EAAa;AACvB,oBAAA,OAAI,CAACiY,WAAL,CAAiB,YAAM;AACrBjY,sBAAAA,OAAO;AACR,qBAFD;AAGD,mBAJD;AAHN;;AAAA;AAWE,qBAAKlC,gBAAL,GAAwB,EAAxB;AAXF;AAAA,uBAaQ4C,OAAO,CAACoO,GAAR,CAAY,KAAKlR,cAAL,CAAoBwI,GAApB,CAAwB,UAACyQ,OAAD;AAAA,yBAAaA,OAAO,CAAC5I,KAAR,EAAb;AAAA,iBAAxB,CAAZ,CAbR;;AAAA;AAeE,qBAAKrQ,cAAL,GAAsB,EAAtB;;AAfF,qBAiBM,KAAKc,eAjBX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBU;AACJ,sBAAIgC,OAAJ,CAAY,UAACV,OAAD,EAAa;AACvB;AACC,oBAAA,OAAI,CAACtB,eAAN,CAAuBgN,cAAvB,CAAsCuC,KAAtC,CAA4C,YAAM;AAChD,sBAAA,OAAI,CAACvP,eAAL,GAAuB,IAAvB;AAEAsB,sBAAAA,OAAO;AACR,qBAJD;;AAFuB;AAQF;AACnB,oBAAA,OAAI,CAACtB,eAD2D,CAEhE0N,OAVqB;AAAA;;AAAA;AAQvB,6EAEW;AAAA,4BAFA5N,MAEA;AACTA,wBAAAA,MAAM,CAAC0Z,SAAP;AACD;AAED;;AAduB;AAAA;AAAA;AAAA;AAAA;AAcvB;;;AAAA;AACC,oBAAA,OAAI,CAACxZ,eAAN,CAAuB0N,OAAvB,GAAiC,EAAjC;AACD,mBAhBD;AAnBN;;AAAA;AAAA,qBAuCM,KAAKrN,MAvCX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwCU;AACJ,sBAAI2B,OAAJ,CAAY,UAACV,OAAD,EAAa;AACvB;AACC,oBAAA,OAAI,CAACjB,MAAN,CAAckP,KAAd,CAAoB,YAAM;AACxB,sBAAA,OAAI,CAAClP,MAAL,GAAc,IAAd;AAEAiB,sBAAAA,OAAO;AACR,qBAJD;;AAFuB,gEAQF,OAAI,CAACjC,OARH;AAAA;;AAAA;AAQvB,6EAAmC;AAAA,4BAAxBiU,MAAwB;AACjCA,wBAAAA,MAAM,CAACc,OAAP;AACD;AAVsB;AAAA;AAAA;AAAA;AAAA;;AAYvB,oBAAA,OAAI,CAAC/U,OAAL,GAAe,EAAf;AACD,mBAbD;AAzCN;;AAAA;AAAA,qBAyDQ,KAAKuR,UAzDb;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0DY;AACJ,sBAAI5O,OAAJ,CAAY,UAACV,OAAD,EAAU+W,MAAV,EAAqB;AAC/B;AACC,oBAAA,OAAI,CAACzH,UAAN,CAAkBrB,KAAlB,CAAwB,UAAC/H,KAAD,EAAW;AACjC,0BAAIA,KAAJ,EAAW;AACT6Q,wBAAAA,MAAM,CAAC7Q,KAAD,CAAN;AAEA;AACD;;AAEDlG,sBAAAA,OAAO;AACR,qBARD;AASD,mBAXD;AA3DR;;AAAA;AAyEM,qBAAKsP,UAAL,GAAkB,IAAlB;;AAzEN;AA6EE;AACA;AA9EF,wDA+EqB,KAAKzR,SA/E1B;;AAAA;AA+EE,yEAAmC;AAAxBmG,oBAAAA,IAAwB;AACjChH,oBAAAA,OAAO,CAACmb,cAAR,CAAuBnU,IAAI,CAACxG,IAA5B,EAAkCwG,IAAI,CAAC8J,QAAvC;AACD;AAjFH;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAoFA;AACF;AACA;;;;WACE,wBAAkC;AAAA,UAArB8E,QAAqB,uEAAV,YAAM,CAAE,CAAE;AAChC,WAAKwF,IAAL,GACGzX,IADH,CACQ;AAAA,eAAMiS,QAAQ,EAAd;AAAA,OADR,EAC0BA,QAD1B,EAEGJ,KAFH,CAESI,QAFT;AAGD,K,CAED;;AACA;AACF;AACA;AACA;AACA;AACA;;;;WACE,gBAAOrT,IAAP,EAAaH,QAAb,EAAuBiZ,EAAvB,EAA2B;AAAA;;AACzB5b,MAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,iFAFF,EAGE,+BAHF;;AAMA,UAAI,OAAOgC,IAAP,KAAgB,UAApB,EAAgC;AAC9B8Y,QAAAA,EAAE,GAAG9Y,IAAL;AACD;;AAED,UACE,OAAOA,IAAP,KAAgB,WAAhB,IACA,OAAO,KAAKnC,OAAL,CAAamC,IAApB,KAA6B,WAD7B,IAEAA,IAAI,KAAK,KAAKnC,OAAL,CAAamC,IAHxB,EAIE;AACA,aAAKnC,OAAL,CAAamC,IAAb,GAAoBA,IAApB;AAEA,aAAK7B,MAAL,CAAYuL,IAAZ,CACE,gHADF;AAGD;;AAED,UAAI,CAAC,KAAK7L,OAAL,CAAamC,IAAlB,EAAwB;AACtB,aAAKnC,OAAL,CAAamC,IAAb,GAAoBA,IAApB;AACD;;AAED,UACE,OAAOH,QAAP,KAAoB,WAApB,IACA,OAAO,KAAKhC,OAAL,CAAakC,IAApB,KAA6B,WAD7B,IAEAF,QAAQ,KAAK,KAAKhC,OAAL,CAAakC,IAH5B,EAIE;AACA,aAAKlC,OAAL,CAAakC,IAAb,GAAoBF,QAApB;AAEA,aAAK1B,MAAL,CAAYuL,IAAZ,CACE,gHADF;AAGD;;AAED,UAAI,CAAC,KAAK7L,OAAL,CAAakC,IAAlB,EAAwB;AACtB,aAAKlC,OAAL,CAAakC,IAAb,GAAoBF,QAApB;AACD;;AAED,WAAK4Y,KAAL,GACGrX,IADH,CACQ,YAAM;AACV,YAAI0X,EAAJ,EAAQ;AACNA,UAAAA,EAAE,CAAC3W,IAAH,CAAQ,OAAI,CAAC3C,MAAb;AACD;AACF,OALH,EAMGyT,KANH,CAMS,UAACtM,KAAD,EAAW;AAChB;AACA,YAAImS,EAAJ,EAAQ;AACNA,UAAAA,EAAE,CAAC3W,IAAH,CAAQ,OAAI,CAAC3C,MAAb,EAAqBmH,KAArB;AACD;AACF,OAXH;AAYD;AAED;AACF;AACA;AACA;AACE;;;;WACA,eAAM0M,QAAN,EAAgB;AACdnW,MAAAA,IAAI,CAACc,SAAL,CACE,YAAM,CAAE,CADV,EAEE,8EAFF,EAGE,8BAHF;AAMA,WAAK6a,IAAL,GACGzX,IADH,CACQ,YAAM;AACV,YAAIiS,QAAJ,EAAc;AACZA,UAAAA,QAAQ;AACT;AACF,OALH,EAMGJ,KANH,CAMS,UAACtM,KAAD,EAAW;AAChB,YAAI0M,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAAC1M,KAAD,CAAR;AACD;AACF,OAVH;AAWD;;;SA5lGD,eAAiB;AACf,aAAO;AACL,YAAIoS,YAAJ,GAAmB;AACjB,iBAAO;AAAA,mBAAMhc,OAAO,CAAC,kBAAD,CAAb;AAAA,WAAP;AACD,SAHI;;AAIL,YAAIic,gBAAJ,GAAuB;AACrB,iBAAOjc,OAAO,CAAC,0BAAD,CAAd;AACD;;AANI,OAAP;AAQD;;;SAED,eAAoB;AAClB,aAAOS,MAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;SACE,eAA2B;AACzB,aAAO;AACL+R,QAAAA,GAAG,EAAE,KADA;AAEL0H,QAAAA,IAAI,EAAE,IAFD;AAGL9R,QAAAA,QAAQ,EAAE,IAHL;AAILD,QAAAA,MAAM,EAAE,IAJH;AAKL+T,QAAAA,YAAY,EAAE;AALT,OAAP;AAOD;AAED;AACF;AACA;AACA;;;;WACE,uBAAqBjU,GAArB,EAA0B;AACxB;AACA,UAAI,eAAeyQ,IAAf,CAAoBzQ,GAApB,CAAJ,EAA8B;AAC5B,eAAO,KAAP;AACD,OAJuB,CAMxB;AACA;;;AACA,aAAO,4BAA4ByQ,IAA5B,CAAiCzQ,GAAjC,CAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,gBAAckU,OAAd,EAAuB;AACrB,UAAMC,SAAS,GAAG/b,MAAM,CAACqX,KAAP,CAAayE,OAAb,CAAlB,CADqB,CAGrB;;AACA,yCAAwBzX,MAAM,CAAC2X,MAAP,CAActc,EAAE,CAACuc,iBAAH,EAAd,CAAxB,sCAA+D;AAA1D,YAAMC,SAAS,sBAAf;;AAA0D;AACtC;AACrBA,QAAAA,SAF2D;AAAA;;AAAA;AAC7D,iEAEG;AAAA,gBAFUC,IAEV,gBAFUA,IAEV;AACD,gBAAM9B,GAAG,GAAGra,MAAM,CAACoc,SAAP;AAAiB;AAAuBD,YAAAA,IAAxC,CAAZ;;AAEA,gBACE9B,GAAG,CAAC,CAAD,CAAH,IACAA,GAAG,CAAC,CAAD,CAAH,CAAO1C,IAAP,OAAkBoE,SAAS,CAACpE,IAAV,EADlB,IAEAoE,SAAS,CAACM,KAAV,CAAgBhC,GAAhB,CAHF,EAIE;AACA,qBAAOA,GAAG,CAAC,CAAD,CAAH,CAAOlX,QAAP,EAAP;AACD;AACF;AAb4D;AAAA;AAAA;AAAA;AAAA;AAc9D;AACF;AAED;AACF;AACA;AACA;;;;;gFACE,kBAAwBmZ,MAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE8Brc,cAAc,CAACqc,MAAD,CAAd,EAF9B;;AAAA;AAAA;AAEYR,gBAAAA,OAFZ,yBAEYA,OAFZ;AAAA,kDAGWtb,MAAM,CAAC+b,MAAP,CAAcT,OAAd,CAHX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AASA;AACF;AACA;AACA;;;;WACE,wBAAsBQ,MAAtB,EAA8B;AAC5B,UAAI;AACF,oCAAoBrc,cAAc,CAACqc,MAAD,CAAd,CAAuBE,IAAvB,EAApB;AAAA,YAAQV,OAAR,yBAAQA,OAAR;;AACA,eAAOtb,MAAM,CAAC+b,MAAP,CAAcT,OAAd,CAAP;AACD,OAHD,CAGE,iBAAM,CACN;AACD;AACF;AAED;AACF;AACA;AACA;;;;;iFACE,kBAAyBrZ,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,sBACMA,QAAQ,KAAK,UADnB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGajC,MAAM,CAACic,UAAP,CAAkB,IAAlB,CAHb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIajc,MAAM,CAACic,UAAP,CAAkB,IAAlB,CAJb;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,+BAKM,SALN;;AAAA;AAAA;;AAAA;AAAA,sBAOaha,QAAQ,KAAK,YAP1B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQkBjC,MAAM,CAACic,UAAP,CAAkB,IAAlB,CARlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,+BAQ8C,SAR9C;;AAAA;AAAA;;AAAA;AAAA,sBASaha,QAAQ,KAAK,YAT1B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAUkBjC,MAAM,CAACic,UAAP,CAAkB,IAAlB,CAVlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,+BAU8C,IAV9C;;AAAA;AAAA;;AAAA;AAAA,kDAaSha,QAbT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAgBA;AACF;AACA;AACA;;;;;iFACE,kBAAyBG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,OAAOA,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,KAAK,IAAxC,IAAgDA,IAAI,KAAK,MAD/D;AAAA;AAAA;AAAA;;AAAA,kDAEWA,IAFX;;AAAA;AAKQ8Z,gBAAAA,MALR,GAKiB/c,OAAO,CAAC,SAAD,CALxB;AAMQgd,gBAAAA,UANR,GAMqBhd,OAAO,CAAC,YAAD,CAN5B;AAQEgd,gBAAAA,UAAU,CAACC,QAAX,GACE,OAAOvc,OAAO,CAACC,GAAR,CAAYuc,4BAAnB,KAAoD,WAApD,GACIC,QAAQ,CAACzc,OAAO,CAACC,GAAR,CAAYuc,4BAAb,EAA2C,EAA3C,CADZ,GAEI,IAHN,CARF,CAaE;AACA;;AACME,gBAAAA,gBAfR,GAgBI,OAAO1c,OAAO,CAACC,GAAR,CAAY0c,6BAAnB,KAAqD,WAArD,GACIF,QAAQ,CAACzc,OAAO,CAACC,GAAR,CAAY0c,6BAAb,EAA4C,EAA5C,CADZ,GAEI,CAlBR;AAAA,kDAoBSN,MAAM,CAAC;AAAA,yBAAMC,UAAU,CAACM,cAAX,EAAN;AAAA,iBAAD,EAAoC;AAC/CC,kBAAAA,OAAO,EAAEH;AADsC,iBAApC,CApBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAyBA;AACF;AACA;;;;WACE,wBAAsB;AACpB,UAAMhW,GAAG,GAAG1G,OAAO,CAAC0G,GAAR,EAAZ;AAEA;AACJ;AACA;;AACI,UAAIoW,GAAG,GAAGpW,GAAV;;AAEA,eAAS;AACP,YAAI;AACF,cAAIhH,EAAE,CAACwZ,QAAH,CAAY3Z,IAAI,CAACkH,IAAL,CAAUqW,GAAV,EAAe,cAAf,CAAZ,EAA4C7T,MAA5C,EAAJ,EAA0D,MADxD,CAEF;AACD,SAHD,CAGE,OAAOwF,CAAP,EAAU,CAAE;;AAEd,YAAMsO,MAAM,GAAGxd,IAAI,CAACyd,OAAL,CAAaF,GAAb,CAAf;;AAEA,YAAIA,GAAG,KAAKC,MAAZ,EAAoB;AAClB;AACAD,UAAAA,GAAG,GAAG7b,SAAN;AACA;AACD;;AAED6b,QAAAA,GAAG,GAAGC,MAAN;AACD;;AAED,UAAI,CAACD,GAAL,EAAU;AACR,eAAOvd,IAAI,CAACyD,OAAL,CAAa0D,GAAb,EAAkB,2BAAlB,CAAP;AACD,OAFD,MAEO,IAAI1G,OAAO,CAACid,QAAR,CAAiBC,GAAjB,KAAyB,GAA7B,EAAkC;AACvC,eAAO3d,IAAI,CAACyD,OAAL,CAAa8Z,GAAb,EAAkB,gCAAlB,CAAP;AACD,OAFM,MAEA,IAAI9c,OAAO,CAACid,QAAR,CAAiBC,GAAjB,KAAyB,GAA7B,EAAkC;AACvC,eAAO3d,IAAI,CAACyD,OAAL,CAAa8Z,GAAb,EAAkB,iCAAlB,CAAP;AACD;;AAED,aAAOvd,IAAI,CAACyD,OAAL,CAAa8Z,GAAb,EAAkB,wCAAlB,CAAP;AACD;;;;;;AAy6FHK,MAAM,CAACC,OAAP,GAAiBjd,MAAjB","sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst fs = require(\"graceful-fs\");\nconst ipaddr = require(\"ipaddr.js\");\nconst defaultGateway = require(\"default-gateway\");\nconst express = require(\"express\");\nconst { validate } = require(\"schema-utils\");\nconst schema = require(\"./options.json\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"webpack\").Stats} Stats */\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n/** @typedef {import(\"express\").Request} Request */\n/** @typedef {import(\"express\").Response} Response */\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n/** @typedef {import(\"anymatch\").Matcher} AnymatchMatcher */\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n/** @typedef {import(\"bonjour\").Bonjour} Bonjour */\n/** @typedef {import(\"bonjour\").BonjourOptions} BonjourOptions */\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n/** @typedef {import(\"net\").Socket} Socket */\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: AnymatchMatcher | string[], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: AnymatchMatcher | string[], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArrayItem} proxyConfig\n */\n\n/**\n * @typedef {{ path?: HttpProxyMiddlewareOptionsFilter | undefined, context?: HttpProxyMiddlewareOptionsFilter | undefined } & { bypass?: ByPass } & HttpProxyMiddlewareOptions } ProxyConfigArrayItem\n */\n\n/**\n * @typedef {(ProxyConfigArrayItem | ((req?: Request | undefined, res?: Response | undefined, next?: NextFunction | undefined) => ProxyConfigArrayItem))[]} ProxyConfigArray\n */\n\n/**\n * @typedef {{ [url: string]: string | ProxyConfigArrayItem }} ProxyConfigMap\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArrayItem | ProxyConfigArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if (/** @type {Compiler | MultiCompiler} */ (options).hooks) {\n      util.deprecate(\n        () => {},\n        \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\",\n        \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\"\n      )();\n\n      [options = {}, compiler] = [compiler, options];\n    }\n\n    validate(/** @type {Schema} */ (schema), options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\",\n    });\n\n    this.compiler = /** @type {Compiler | MultiCompiler} */ (compiler);\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options = /** @type {Configuration} */ (options);\n    /**\n     * @type {FSWatcher[]}\n     */\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n    this.listeners = [];\n    // Keep track of websocket proxies for external websocket upgrade.\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n    this.currentHash = undefined;\n  }\n\n  // TODO compatibility with webpack v4, remove it after drop\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      },\n    };\n  }\n\n  static get schema() {\n    return schema;\n  }\n\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false,\n    };\n  }\n\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    }\n\n    // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway);\n\n    // Look for the matching interface in all local interfaces.\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const { cidr } of /** @type {NetworkInterfaceInfo[]} */ (\n        addresses\n      )) {\n        const net = ipaddr.parseCIDR(/** @type {string} */ (cidr));\n\n        if (\n          net[0] &&\n          net[0].kind() === gatewayIp.kind() &&\n          gatewayIp.match(net)\n        ) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n  static async internalIP(family) {\n    try {\n      const { gateway } = await defaultGateway[family]();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n  static internalIPSync(family) {\n    try {\n      const { gateway } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n  static async getHostname(hostname) {\n    if (hostname === \"local-ip\") {\n      return (\n        (await Server.internalIP(\"v4\")) ||\n        (await Server.internalIP(\"v6\")) ||\n        \"0.0.0.0\"\n      );\n    } else if (hostname === \"local-ipv4\") {\n      return (await Server.internalIP(\"v4\")) || \"0.0.0.0\";\n    } else if (hostname === \"local-ipv6\") {\n      return (await Server.internalIP(\"v6\")) || \"::\";\n    }\n\n    return hostname;\n  }\n\n  /**\n   * @param {Port} port\n   * @returns {Promise<number | string>}\n   */\n  static async getFreePort(port) {\n    if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n      return port;\n    }\n\n    const pRetry = require(\"p-retry\");\n    const portfinder = require(\"portfinder\");\n\n    portfinder.basePort =\n      typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10)\n        : 8080;\n\n    // Try to find unused port and listen on it for 3 times,\n    // if port is not specified in options.\n    const defaultPortRetry =\n      typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10)\n        : 3;\n\n    return pRetry(() => portfinder.getPortPromise(), {\n      retries: defaultPortRetry,\n    });\n  }\n\n  /**\n   * @returns {string}\n   */\n  static findCacheDir() {\n    const cwd = process.cwd();\n\n    /**\n     * @type {string | undefined}\n     */\n    let dir = cwd;\n\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break;\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n\n      const parent = path.dirname(dir);\n\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n\n      dir = parent;\n    }\n\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n\n    const isWebTarget = compiler.options.externalsPresets\n      ? compiler.options.externalsPresets.web\n      : [\n          \"web\",\n          \"webworker\",\n          \"electron-preload\",\n          \"electron-renderer\",\n          \"node-webkit\",\n          // eslint-disable-next-line no-undefined\n          undefined,\n          null,\n        ].includes(/** @type {string} */ (compiler.options.target));\n\n    // TODO maybe empty empty client\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n\n      if (this.options.webSocketServer) {\n        const webSocketURL =\n          /** @type {WebSocketURL} */\n          (\n            /** @type {ClientConfiguration} */\n            (this.options.client).webSocketURL\n          );\n        const webSocketServer =\n          /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n          (this.options.webSocketServer);\n        const searchParams = new URLSearchParams();\n\n        /** @type {string} */\n        let protocol;\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol =\n            /** @type {ServerConfiguration} */\n            (this.options.server).type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n\n        searchParams.set(\"protocol\", protocol);\n\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n\n        /** @type {string} */\n        let hostname;\n\n        // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n        const isSockJSType = webSocketServer.type === \"sockjs\";\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        }\n        // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (\n          typeof webSocketServer.options.host !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          hostname = webSocketServer.options.host;\n        }\n        // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        }\n        // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n\n        searchParams.set(\"hostname\", hostname);\n\n        /** @type {number | string} */\n        let port;\n\n        // We are proxying dev server and need to specify custom `port`\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        }\n        // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (\n          typeof webSocketServer.options.port !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          port = webSocketServer.options.port;\n        }\n        // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        }\n        // The `port` option is specified using `string`\n        else if (\n          typeof this.options.port === \"string\" &&\n          this.options.port !== \"auto\"\n        ) {\n          port = Number(this.options.port);\n        }\n        // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n\n        searchParams.set(\"port\", String(port));\n\n        /** @type {string} */\n        let pathname = \"\";\n\n        // We are proxying dev server and need to specify custom `pathname`\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        }\n        // Web socket server works on custom `path`\n        else if (\n          typeof webSocketServer.options.prefix !== \"undefined\" ||\n          typeof webSocketServer.options.path !== \"undefined\"\n        ) {\n          pathname =\n            webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n\n        searchParams.set(\"pathname\", pathname);\n\n        const client = /** @type {ClientConfiguration} */ (this.options.client);\n\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\n            \"reconnect\",\n            typeof client.reconnect === \"number\"\n              ? String(client.reconnect)\n              : \"10\"\n          );\n        }\n\n        webSocketURLStr = searchParams.toString();\n      }\n\n      additionalEntries.push(\n        `${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`\n      );\n    }\n\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n\n    const webpack = compiler.webpack || require(\"webpack\");\n\n    // use a hook to add entries if available\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined,\n        }).apply(compiler);\n      }\n    }\n    // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () =>\n            Promise.resolve(originalEntry()).then((entry) =>\n              prependEntry(entry, newAdditionalEntries)\n            );\n        }\n\n        if (\n          typeof originalEntry === \"object\" &&\n          !Array.isArray(originalEntry)\n        ) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n\n          Object.keys(originalEntry).forEach((key) => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n\n          return clone;\n        }\n\n        // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n        /** @type {any} */\n        const entriesClone = additionalEntries.slice(0);\n\n        [].concat(originalEntry).forEach((newEntry) => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n\n        return entriesClone;\n      };\n\n      compiler.options.entry = prependEntry(\n        compiler.options.entry || \"./src\",\n        additionalEntries\n      );\n      compiler.hooks.entryOption.call(\n        /** @type {string} */ (compiler.options.context),\n        compiler.options.entry\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n  getCompilerOptions() {\n    if (\n      typeof (/** @type {MultiCompiler} */ (this.compiler).compilers) !==\n      \"undefined\"\n    ) {\n      if (/** @type {MultiCompiler} */ (this.compiler).compilers.length === 1) {\n        return (\n          /** @type {MultiCompiler} */\n          (this.compiler).compilers[0].options\n        );\n      }\n\n      // Configuration with the `devServer` options\n      const compilerWithDevServer =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find((config) => config.options.devServer);\n\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      }\n\n      // Configuration with `web` preset\n      const compilerWithWebPreset =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find(\n          (config) =>\n            (config.options.externalsPresets &&\n              config.options.externalsPresets.web) ||\n            [\n              \"web\",\n              \"webworker\",\n              \"electron-preload\",\n              \"electron-renderer\",\n              \"node-webkit\",\n              // eslint-disable-next-line no-undefined\n              undefined,\n              null,\n            ].includes(/** @type {string} */ (config.options.target))\n        );\n\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      }\n\n      // Fallback\n      return /** @type {MultiCompiler} */ (this.compiler).compilers[0].options;\n    }\n\n    return /** @type {Compiler} */ (this.compiler).options;\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async normalizeOptions() {\n    const { options } = this;\n    const compilerOptions = this.getCompilerOptions();\n    // TODO remove `{}` after drop webpack v4 support\n    const compilerWatchOptions = compilerOptions.watchOptions || {};\n    /**\n     * @param {WatchOptions & { aggregateTimeout?: number, ignored?: AnymatchMatcher | string[], poll?: number | boolean }} watchOptions\n     * @returns {WatchOptions}\n     */\n    const getWatchOptions = (watchOptions = {}) => {\n      const getPolling = () => {\n        if (typeof watchOptions.usePolling !== \"undefined\") {\n          return watchOptions.usePolling;\n        }\n\n        if (typeof watchOptions.poll !== \"undefined\") {\n          return Boolean(watchOptions.poll);\n        }\n\n        if (typeof compilerWatchOptions.poll !== \"undefined\") {\n          return Boolean(compilerWatchOptions.poll);\n        }\n\n        return false;\n      };\n      const getInterval = () => {\n        if (typeof watchOptions.interval !== \"undefined\") {\n          return watchOptions.interval;\n        }\n\n        if (typeof watchOptions.poll === \"number\") {\n          return watchOptions.poll;\n        }\n\n        if (typeof compilerWatchOptions.poll === \"number\") {\n          return compilerWatchOptions.poll;\n        }\n      };\n\n      const usePolling = getPolling();\n      const interval = getInterval();\n      const { poll, ...rest } = watchOptions;\n\n      return {\n        ignoreInitial: true,\n        persistent: true,\n        followSymlinks: false,\n        atomic: false,\n        alwaysStat: true,\n        ignorePermissionErrors: true,\n        // Respect options from compiler watchOptions\n        usePolling,\n        interval,\n        ignored: watchOptions.ignored,\n        // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n        ...rest,\n      };\n    };\n    /**\n     * @param {string | Static | undefined} [optionsForStatic]\n     * @returns {NormalizedStatic}\n     */\n    const getStaticItem = (optionsForStatic) => {\n      const getDefaultStaticOptions = () => {\n        return {\n          directory: path.join(process.cwd(), \"public\"),\n          staticOptions: {},\n          publicPath: [\"/\"],\n          serveIndex: { icons: true },\n          watch: getWatchOptions(),\n        };\n      };\n\n      /** @type {NormalizedStatic} */\n      let item;\n\n      if (typeof optionsForStatic === \"undefined\") {\n        item = getDefaultStaticOptions();\n      } else if (typeof optionsForStatic === \"string\") {\n        item = {\n          ...getDefaultStaticOptions(),\n          directory: optionsForStatic,\n        };\n      } else {\n        const def = getDefaultStaticOptions();\n\n        item = {\n          directory:\n            typeof optionsForStatic.directory !== \"undefined\"\n              ? optionsForStatic.directory\n              : def.directory,\n          // TODO: do merge in the next major release\n          staticOptions:\n            typeof optionsForStatic.staticOptions !== \"undefined\"\n              ? optionsForStatic.staticOptions\n              : def.staticOptions,\n          publicPath:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\"\n              ? Array.isArray(optionsForStatic.publicPath)\n                ? optionsForStatic.publicPath\n                : [optionsForStatic.publicPath]\n              : def.publicPath,\n          // TODO: do merge in the next major release\n          serveIndex:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\"\n              ? typeof optionsForStatic.serveIndex === \"boolean\" &&\n                optionsForStatic.serveIndex\n                ? def.serveIndex\n                : optionsForStatic.serveIndex\n              : def.serveIndex,\n          watch:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\"\n              ? // eslint-disable-next-line no-nested-ternary\n                typeof optionsForStatic.watch === \"boolean\"\n                ? optionsForStatic.watch\n                  ? def.watch\n                  : false\n                : getWatchOptions(optionsForStatic.watch)\n              : def.watch,\n        };\n      }\n\n      if (Server.isAbsoluteURL(item.directory)) {\n        throw new Error(\"Using a URL as static.directory is not supported\");\n      }\n\n      return item;\n    };\n\n    if (typeof options.allowedHosts === \"undefined\") {\n      // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n      options.allowedHosts = \"auto\";\n    }\n    // We store allowedHosts as array when supplied as string\n    else if (\n      typeof options.allowedHosts === \"string\" &&\n      options.allowedHosts !== \"auto\" &&\n      options.allowedHosts !== \"all\"\n    ) {\n      options.allowedHosts = [options.allowedHosts];\n    }\n    // CLI pass options as array, we should normalize them\n    else if (\n      Array.isArray(options.allowedHosts) &&\n      options.allowedHosts.includes(\"all\")\n    ) {\n      options.allowedHosts = \"all\";\n    }\n\n    if (typeof options.bonjour === \"undefined\") {\n      options.bonjour = false;\n    } else if (typeof options.bonjour === \"boolean\") {\n      options.bonjour = options.bonjour ? {} : false;\n    }\n\n    if (\n      typeof options.client === \"undefined\" ||\n      (typeof options.client === \"object\" && options.client !== null)\n    ) {\n      if (!options.client) {\n        options.client = {};\n      }\n\n      if (typeof options.client.webSocketURL === \"undefined\") {\n        options.client.webSocketURL = {};\n      } else if (typeof options.client.webSocketURL === \"string\") {\n        const parsedURL = new URL(options.client.webSocketURL);\n\n        options.client.webSocketURL = {\n          protocol: parsedURL.protocol,\n          hostname: parsedURL.hostname,\n          port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n          pathname: parsedURL.pathname,\n          username: parsedURL.username,\n          password: parsedURL.password,\n        };\n      } else if (typeof options.client.webSocketURL.port === \"string\") {\n        options.client.webSocketURL.port = Number(\n          options.client.webSocketURL.port\n        );\n      }\n\n      // Enable client overlay by default\n      if (typeof options.client.overlay === \"undefined\") {\n        options.client.overlay = true;\n      } else if (typeof options.client.overlay !== \"boolean\") {\n        options.client.overlay = {\n          errors: true,\n          warnings: true,\n          ...options.client.overlay,\n        };\n      }\n\n      if (typeof options.client.reconnect === \"undefined\") {\n        options.client.reconnect = 10;\n      } else if (options.client.reconnect === true) {\n        options.client.reconnect = Infinity;\n      } else if (options.client.reconnect === false) {\n        options.client.reconnect = 0;\n      }\n\n      // Respect infrastructureLogging.level\n      if (typeof options.client.logging === \"undefined\") {\n        options.client.logging = compilerOptions.infrastructureLogging\n          ? compilerOptions.infrastructureLogging.level\n          : \"info\";\n      }\n    }\n\n    if (typeof options.compress === \"undefined\") {\n      options.compress = true;\n    }\n\n    if (typeof options.devMiddleware === \"undefined\") {\n      options.devMiddleware = {};\n    }\n\n    // No need to normalize `headers`\n\n    if (typeof options.historyApiFallback === \"undefined\") {\n      options.historyApiFallback = false;\n    } else if (\n      typeof options.historyApiFallback === \"boolean\" &&\n      options.historyApiFallback\n    ) {\n      options.historyApiFallback = {};\n    }\n\n    // No need to normalize `host`\n\n    options.hot =\n      typeof options.hot === \"boolean\" || options.hot === \"only\"\n        ? options.hot\n        : true;\n\n    const isHTTPs = Boolean(options.https);\n    const isSPDY = Boolean(options.http2);\n\n    if (isHTTPs) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'https' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTPS\"\n      )();\n    }\n\n    if (isSPDY) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'http2' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTP2\"\n      )();\n    }\n\n    options.server = {\n      type:\n        // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\"\n          ? options.server\n          : // eslint-disable-next-line no-nested-ternary\n          typeof (options.server || {}).type === \"string\"\n          ? /** @type {ServerConfiguration} */ (options.server).type || \"http\"\n          : // eslint-disable-next-line no-nested-ternary\n          isSPDY\n          ? \"spdy\"\n          : isHTTPs\n          ? \"https\"\n          : \"http\",\n      options: {\n        .../** @type {ServerOptions} */ (options.https),\n        .../** @type {ServerConfiguration} */ (options.server || {}).options,\n      },\n    };\n\n    if (\n      options.server.type === \"spdy\" &&\n      typeof (/** @type {ServerOptions} */ (options.server.options).spdy) ===\n        \"undefined\"\n    ) {\n      /** @type {ServerOptions} */\n      (options.server.options).spdy = {\n        protocols: [\"h2\", \"http/1.1\"],\n      };\n    }\n\n    if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n      if (\n        typeof (\n          /** @type {ServerOptions} */ (options.server.options).requestCert\n        ) === \"undefined\"\n      ) {\n        /** @type {ServerOptions} */\n        (options.server.options).requestCert = false;\n      }\n\n      const httpsProperties =\n        /** @type {Array<keyof ServerOptions>} */\n        ([\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"]);\n\n      for (const property of httpsProperties) {\n        if (\n          typeof (\n            /** @type {ServerOptions} */ (options.server.options)[property]\n          ) === \"undefined\"\n        ) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        // @ts-ignore\n        if (property === \"cacert\") {\n          // TODO remove the `cacert` option in favor `ca` in the next major release\n          util.deprecate(\n            () => {},\n            \"The 'cacert' option is deprecated. Please use the 'ca' option.\",\n            \"DEP_WEBPACK_DEV_SERVER_CACERT\"\n          )();\n        }\n\n        /** @type {any} */\n        const value =\n          /** @type {ServerOptions} */\n          (options.server.options)[property];\n        /**\n         * @param {string | Buffer | undefined} item\n         * @returns {string | Buffer | undefined}\n         */\n        const readFile = (item) => {\n          if (\n            Buffer.isBuffer(item) ||\n            (typeof item === \"object\" && item !== null && !Array.isArray(item))\n          ) {\n            return item;\n          }\n\n          if (item) {\n            let stats = null;\n\n            try {\n              stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n            } catch (error) {\n              // Ignore error\n            }\n\n            // It is file\n            return stats ? fs.readFileSync(item) : item;\n          }\n        };\n\n        /** @type {any} */\n        (options.server.options)[property] = Array.isArray(value)\n          ? value.map((item) => readFile(item))\n          : readFile(value);\n      }\n\n      let fakeCert;\n\n      if (\n        !(/** @type {ServerOptions} */ (options.server.options).key) ||\n        /** @type {ServerOptions} */ (!options.server.options).cert\n      ) {\n        const certificateDir = Server.findCacheDir();\n        const certificatePath = path.join(certificateDir, \"server.pem\");\n        let certificateExists;\n\n        try {\n          const certificate = await fs.promises.stat(certificatePath);\n          certificateExists = certificate.isFile();\n        } catch {\n          certificateExists = false;\n        }\n\n        if (certificateExists) {\n          const certificateTtl = 1000 * 60 * 60 * 24;\n          const certificateStat = await fs.promises.stat(certificatePath);\n          const now = Number(new Date());\n\n          // cert is more than 30 days old, kill it with fire\n          if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n            const del = require(\"del\");\n\n            this.logger.info(\n              \"SSL certificate is more than 30 days old. Removing...\"\n            );\n\n            await del([certificatePath], { force: true });\n\n            certificateExists = false;\n          }\n        }\n\n        if (!certificateExists) {\n          this.logger.info(\"Generating SSL certificate...\");\n\n          // @ts-ignore\n          const selfsigned = require(\"selfsigned\");\n          const attributes = [{ name: \"commonName\", value: \"localhost\" }];\n          const pems = selfsigned.generate(attributes, {\n            algorithm: \"sha256\",\n            days: 30,\n            keySize: 2048,\n            extensions: [\n              {\n                name: \"basicConstraints\",\n                cA: true,\n              },\n              {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true,\n              },\n              {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true,\n              },\n              {\n                name: \"subjectAltName\",\n                altNames: [\n                  {\n                    // type 2 is DNS\n                    type: 2,\n                    value: \"localhost\",\n                  },\n                  {\n                    type: 2,\n                    value: \"localhost.localdomain\",\n                  },\n                  {\n                    type: 2,\n                    value: \"lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"*.lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"[::1]\",\n                  },\n                  {\n                    // type 7 is IP\n                    type: 7,\n                    ip: \"127.0.0.1\",\n                  },\n                  {\n                    type: 7,\n                    ip: \"fe80::1\",\n                  },\n                ],\n              },\n            ],\n          });\n\n          await fs.promises.mkdir(certificateDir, { recursive: true });\n\n          await fs.promises.writeFile(\n            certificatePath,\n            pems.private + pems.cert,\n            {\n              encoding: \"utf8\",\n            }\n          );\n        }\n\n        fakeCert = await fs.promises.readFile(certificatePath);\n\n        this.logger.info(`SSL certificate: ${certificatePath}`);\n      }\n\n      if (\n        /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n          options.server.options\n        ).cacert\n      ) {\n        if (/** @type {ServerOptions} */ (options.server.options).ca) {\n          this.logger.warn(\n            \"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\"\n          );\n        } else {\n          /** @type {ServerOptions} */\n          (options.server.options).ca =\n            /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            (options.server.options).cacert;\n        }\n\n        delete (\n          /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n            options.server.options\n          ).cacert\n        );\n      }\n\n      /** @type {ServerOptions} */\n      (options.server.options).key =\n        /** @type {ServerOptions} */\n        (options.server.options).key || fakeCert;\n      /** @type {ServerOptions} */\n      (options.server.options).cert =\n        /** @type {ServerOptions} */\n        (options.server.options).cert || fakeCert;\n    }\n\n    if (typeof options.ipc === \"boolean\") {\n      const isWindows = process.platform === \"win32\";\n      const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n      const pipeName = \"webpack-dev-server.sock\";\n\n      options.ipc = path.join(pipePrefix, pipeName);\n    }\n\n    options.liveReload =\n      typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n\n    options.magicHtml =\n      typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true;\n\n    // https://github.com/webpack/webpack-dev-server/issues/1990\n    const defaultOpenOptions = { wait: false };\n    /**\n     * @param {any} target\n     * @returns {NormalizedOpen[]}\n     */\n    // TODO: remove --open-app in favor of --open-app-name\n    const getOpenItemsFromObject = ({ target, ...rest }) => {\n      const normalizedOptions = { ...defaultOpenOptions, ...rest };\n\n      if (typeof normalizedOptions.app === \"string\") {\n        normalizedOptions.app = {\n          name: normalizedOptions.app,\n        };\n      }\n\n      const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n      if (Array.isArray(normalizedTarget)) {\n        return normalizedTarget.map((singleTarget) => {\n          return { target: singleTarget, options: normalizedOptions };\n        });\n      }\n\n      return [{ target: normalizedTarget, options: normalizedOptions }];\n    };\n\n    if (typeof options.open === \"undefined\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [];\n    } else if (typeof options.open === \"boolean\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = options.open\n        ? [\n            {\n              target: \"<url>\",\n              options: /** @type {OpenOptions} */ (defaultOpenOptions),\n            },\n          ]\n        : [];\n    } else if (typeof options.open === \"string\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [{ target: options.open, options: defaultOpenOptions }];\n    } else if (Array.isArray(options.open)) {\n      /**\n       * @type {NormalizedOpen[]}\n       */\n      const result = [];\n\n      options.open.forEach((item) => {\n        if (typeof item === \"string\") {\n          result.push({ target: item, options: defaultOpenOptions });\n\n          return;\n        }\n\n        result.push(...getOpenItemsFromObject(item));\n      });\n\n      /** @type {NormalizedOpen[]} */\n      (options.open) = result;\n    } else {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [...getOpenItemsFromObject(options.open)];\n    }\n\n    if (options.onAfterSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (options.onBeforeSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (typeof options.port === \"string\" && options.port !== \"auto\") {\n      options.port = Number(options.port);\n    }\n\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (typeof options.proxy !== \"undefined\") {\n      // TODO remove in the next major release, only accept `Array`\n      if (!Array.isArray(options.proxy)) {\n        if (\n          Object.prototype.hasOwnProperty.call(options.proxy, \"target\") ||\n          Object.prototype.hasOwnProperty.call(options.proxy, \"router\")\n        ) {\n          /** @type {ProxyConfigArray} */\n          (options.proxy) = [/** @type {ProxyConfigMap} */ (options.proxy)];\n        } else {\n          /** @type {ProxyConfigArray} */\n          (options.proxy) = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            (context) => {\n              let proxyOptions;\n              // For backwards compatibility reasons.\n              const correctedContext = context\n                .replace(/^\\*$/, \"**\")\n                .replace(/\\/\\*$/, \"\");\n\n              if (\n                typeof (\n                  /** @type {ProxyConfigMap} */ (options.proxy)[context]\n                ) === \"string\"\n              ) {\n                proxyOptions = {\n                  context: correctedContext,\n                  target:\n                    /** @type {ProxyConfigMap} */\n                    (options.proxy)[context],\n                };\n              } else {\n                proxyOptions = {\n                  // @ts-ignore\n                  .../** @type {ProxyConfigMap} */ (options.proxy)[context],\n                };\n                proxyOptions.context = correctedContext;\n              }\n\n              return proxyOptions;\n            }\n          );\n        }\n      }\n\n      /** @type {ProxyConfigArray} */\n      (options.proxy) =\n        /** @type {ProxyConfigArray} */\n        (options.proxy).map((item) => {\n          if (typeof item === \"function\") {\n            return item;\n          }\n\n          /**\n           * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n           * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n           */\n          const getLogLevelForProxy = (level) => {\n            if (level === \"none\") {\n              return \"silent\";\n            }\n\n            if (level === \"log\") {\n              return \"info\";\n            }\n\n            if (level === \"verbose\") {\n              return \"debug\";\n            }\n\n            return level;\n          };\n\n          if (typeof item.logLevel === \"undefined\") {\n            item.logLevel = getLogLevelForProxy(\n              compilerOptions.infrastructureLogging\n                ? compilerOptions.infrastructureLogging.level\n                : \"info\"\n            );\n          }\n\n          if (typeof item.logProvider === \"undefined\") {\n            item.logProvider = () => this.logger;\n          }\n\n          return item;\n        });\n    }\n\n    if (typeof options.setupExitSignals === \"undefined\") {\n      options.setupExitSignals = true;\n    }\n\n    if (typeof options.static === \"undefined\") {\n      options.static = [getStaticItem()];\n    } else if (typeof options.static === \"boolean\") {\n      options.static = options.static ? [getStaticItem()] : false;\n    } else if (typeof options.static === \"string\") {\n      options.static = [getStaticItem(options.static)];\n    } else if (Array.isArray(options.static)) {\n      options.static = options.static.map((item) => getStaticItem(item));\n    } else {\n      options.static = [getStaticItem(options.static)];\n    }\n\n    if (typeof options.watchFiles === \"string\") {\n      options.watchFiles = [\n        { paths: options.watchFiles, options: getWatchOptions() },\n      ];\n    } else if (\n      typeof options.watchFiles === \"object\" &&\n      options.watchFiles !== null &&\n      !Array.isArray(options.watchFiles)\n    ) {\n      options.watchFiles = [\n        {\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {}),\n        },\n      ];\n    } else if (Array.isArray(options.watchFiles)) {\n      options.watchFiles = options.watchFiles.map((item) => {\n        if (typeof item === \"string\") {\n          return { paths: item, options: getWatchOptions() };\n        }\n\n        return {\n          paths: item.paths,\n          options: getWatchOptions(item.options || {}),\n        };\n      });\n    } else {\n      options.watchFiles = [];\n    }\n\n    const defaultWebSocketServerType = \"ws\";\n    const defaultWebSocketServerOptions = { path: \"/ws\" };\n\n    if (typeof options.webSocketServer === \"undefined\") {\n      options.webSocketServer = {\n        type: defaultWebSocketServerType,\n        options: defaultWebSocketServerOptions,\n      };\n    } else if (\n      typeof options.webSocketServer === \"boolean\" &&\n      !options.webSocketServer\n    ) {\n      options.webSocketServer = false;\n    } else if (\n      typeof options.webSocketServer === \"string\" ||\n      typeof options.webSocketServer === \"function\"\n    ) {\n      options.webSocketServer = {\n        type: options.webSocketServer,\n        options: defaultWebSocketServerOptions,\n      };\n    } else {\n      options.webSocketServer = {\n        type:\n          /** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).type || defaultWebSocketServerType,\n        options: {\n          ...defaultWebSocketServerOptions,\n          .../** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).options,\n        },\n      };\n\n      const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        (options.webSocketServer);\n\n      if (typeof webSocketServer.options.port === \"string\") {\n        webSocketServer.options.port = Number(webSocketServer.options.port);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n\n    const isKnownWebSocketServerImplementation =\n      this.options.webSocketServer &&\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      ) === \"string\" &&\n      // @ts-ignore\n      (this.options.webSocketServer.type === \"ws\" ||\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type === \"sockjs\");\n\n    let clientTransport;\n\n    if (this.options.client) {\n      if (\n        typeof (\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport\n        ) !== \"undefined\"\n      ) {\n        clientTransport =\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport =\n          /** @type {WebSocketServerConfiguration} */\n          (this.options.webSocketServer).type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/SockJSClient\"\n          );\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/WebSocketClient\"\n          );\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n        break;\n      default:\n        clientImplementationFound = false;\n    }\n\n    if (!clientImplementationFound) {\n      throw new Error(\n        `${\n          !isKnownWebSocketServerImplementation\n            ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \"\n            : \"\"\n        }client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `\n      );\n    }\n\n    return /** @type {string} */ (clientImplementation);\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n\n    switch (\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      )\n    ) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"sockjs\"\n        ) {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"ws\"\n        ) {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require(/** @type {WebSocketServerConfiguration} */ (\n              this.options.webSocketServer\n            ).type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n        break;\n      case \"function\":\n        implementation = /** @type {WebSocketServerConfiguration} */ (\n          this.options.webSocketServer\n        ).type;\n        break;\n      default:\n        implementationFound = false;\n    }\n\n    if (!implementationFound) {\n      throw new Error(\n        \"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" +\n          \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" +\n          \"via require.resolve(...), or the class itself which extends BaseServer\"\n      );\n    }\n\n    return implementation;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupProgressPlugin() {\n    const { ProgressPlugin } =\n      /** @type {MultiCompiler}*/\n      (this.compiler).compilers\n        ? /** @type {MultiCompiler}*/ (this.compiler).compilers[0].webpack\n        : /** @type {Compiler}*/ (this.compiler).webpack ||\n          // TODO remove me after drop webpack v4\n          require(\"webpack\");\n\n    new ProgressPlugin(\n      /**\n       * @param {number} percent\n       * @param {string} msg\n       * @param {string} addInfo\n       * @param {string} pluginName\n       */\n      (percent, msg, addInfo, pluginName) => {\n        percent = Math.floor(percent * 100);\n\n        if (percent === 100) {\n          msg = \"Compilation completed\";\n        }\n\n        if (addInfo) {\n          msg = `${msg} (${addInfo})`;\n        }\n\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n            percent,\n            msg,\n            pluginName,\n          });\n        }\n\n        if (this.server) {\n          this.server.emit(\"progress-update\", { percent, msg, pluginName });\n        }\n      }\n    ).apply(this.compiler);\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    if (this.options.webSocketServer) {\n      const compilers =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers || [this.compiler];\n\n      compilers.forEach((compiler) => {\n        this.addAdditionalEntries(compiler);\n\n        const webpack = compiler.webpack || require(\"webpack\");\n\n        new webpack.ProvidePlugin({\n          __webpack_dev_server_client__: this.getClientTransport(),\n        }).apply(compiler);\n\n        // TODO remove after drop webpack v4 support\n        compiler.options.plugins = compiler.options.plugins || [];\n\n        if (this.options.hot) {\n          const HMRPluginExists = compiler.options.plugins.find(\n            (p) => p.constructor === webpack.HotModuleReplacementPlugin\n          );\n\n          if (HMRPluginExists) {\n            this.logger.warn(\n              `\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`\n            );\n          } else {\n            // Apply the HMR plugin\n            const plugin = new webpack.HotModuleReplacementPlugin();\n\n            plugin.apply(compiler);\n          }\n        }\n      });\n\n      if (\n        this.options.client &&\n        /** @type {ClientConfiguration} */ (this.options.client).progress\n      ) {\n        this.setupProgressPlugin();\n      }\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupHostHeaderCheck();\n    this.setupDevMiddleware();\n    // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n    this.setupBuiltInRoutes();\n    this.setupWatchFiles();\n    this.setupWatchStaticFiles();\n    this.setupMiddlewares();\n    this.createServer();\n\n    if (this.options.setupExitSignals) {\n      const signals = [\"SIGINT\", \"SIGTERM\"];\n\n      let needForceShutdown = false;\n\n      signals.forEach((signal) => {\n        const listener = () => {\n          if (needForceShutdown) {\n            process.exit();\n          }\n\n          this.logger.info(\n            \"Gracefully shutting down. To force exit, press ^C again. Please wait...\"\n          );\n\n          needForceShutdown = true;\n\n          this.stopCallback(() => {\n            if (typeof this.compiler.close === \"function\") {\n              this.compiler.close(() => {\n                process.exit();\n              });\n            } else {\n              process.exit();\n            }\n          });\n        };\n\n        this.listeners.push({ name: signal, listener });\n\n        process.on(signal, listener);\n      });\n    }\n\n    // Proxy WebSocket without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n    /** @type {RequestHandler[]} */\n    (this.webSocketProxies).forEach((webSocketProxy) => {\n      /** @type {import(\"http\").Server} */\n      (this.server).on(\n        \"upgrade\",\n        /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        (webSocketProxy).upgrade\n      );\n    }, this);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new /** @type {any} */ (express)();\n  }\n\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions();\n\n    // @ts-ignore\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\n      \"webpack-dev-server\",\n      /**\n       * @param {Stats | MultiStats} stats\n       */\n      (stats) => {\n        if (this.webSocketServer) {\n          this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n        }\n\n        /**\n         * @private\n         * @type {Stats | MultiStats}\n         */\n        this.stats = stats;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    (this.app).all(\n      \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      (req, res, next) => {\n        if (\n          this.checkHeader(\n            /** @type {{ [key: string]: string | undefined }} */\n            (req.headers),\n            \"host\"\n          )\n        ) {\n          return next();\n        }\n\n        res.send(\"Invalid Host header\");\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\");\n\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(\n      this.compiler,\n      this.options.devMiddleware\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupBuiltInRoutes() {\n    const { app, middleware } = this;\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/__webpack_dev_server__/sockjs.bundle.js\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        res.setHeader(\"Content-Type\", \"application/javascript\");\n\n        const { createReadStream } = fs;\n        const clientPath = path.join(__dirname, \"..\", \"client\");\n\n        createReadStream(\n          path.join(clientPath, \"modules/sockjs-client/index.js\")\n        ).pipe(res);\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server/invalidate\",\n      /**\n       * @param {Request} _req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (_req, res) => {\n        this.invalidate();\n\n        res.end();\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        (middleware).waitUntilValid((stats) => {\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.write(\n            '<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>'\n          );\n\n          const statsForPrint =\n            typeof (/** @type {MultiStats} */ (stats).stats) !== \"undefined\"\n              ? /** @type {MultiStats} */ (stats).toJson().children\n              : [/** @type {Stats} */ (stats).toJson()];\n\n          res.write(`<h1>Assets Report:</h1>`);\n\n          /**\n           * @type {StatsCompilation[]}\n           */\n          (statsForPrint).forEach((item, index) => {\n            res.write(\"<div>\");\n\n            const name =\n              // eslint-disable-next-line no-nested-ternary\n              typeof item.name !== \"undefined\"\n                ? item.name\n                : /** @type {MultiStats} */ (stats).stats\n                ? `unnamed[${index}]`\n                : \"unnamed\";\n\n            res.write(`<h2>Compilation: ${name}</h2>`);\n            res.write(\"<ul>\");\n\n            const publicPath =\n              item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n            for (const asset of /** @type {NonNullable<StatsCompilation[\"assets\"]>} */ (\n              item.assets\n            )) {\n              const assetName = asset.name;\n              const assetURL = `${publicPath}${assetName}`;\n\n              res.write(\n                `<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`\n              );\n            }\n\n            res.write(\"</ul>\");\n            res.write(\"</div>\");\n          });\n\n          res.end(\"</body></html>\");\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchStaticFiles() {\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchFiles() {\n    const { watchFiles } = this.options;\n\n    if (/** @type {WatchFiles[]} */ (watchFiles).length > 0) {\n      /** @type {WatchFiles[]} */\n      (watchFiles).forEach((item) => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n\n      middlewares.push({ name: \"compression\", middleware: compression() });\n    }\n\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this),\n      });\n    }\n\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        (this.middleware),\n    });\n\n    if (this.options.proxy) {\n      const { createProxyMiddleware } = require(\"http-proxy-middleware\");\n\n      /**\n       * @param {ProxyConfigArrayItem} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n      const getProxyMiddleware = (proxyConfig) => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n\n          return createProxyMiddleware(\n            /** @type {string} */ (context),\n            proxyConfig\n          );\n        }\n\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n      /** @type {ProxyConfigArray} */\n      (this.options.proxy).forEach((proxyConfigOrCallback) => {\n        /**\n         * @type {RequestHandler}\n         */\n        let proxyMiddleware;\n\n        let proxyConfig =\n          typeof proxyConfigOrCallback === \"function\"\n            ? proxyConfigOrCallback()\n            : proxyConfigOrCallback;\n\n        proxyMiddleware =\n          /** @type {RequestHandler} */\n          (getProxyMiddleware(proxyConfig));\n\n        if (proxyConfig.ws) {\n          this.webSocketProxies.push(proxyMiddleware);\n        }\n\n        /**\n         * @param {Request} req\n         * @param {Response} res\n         * @param {NextFunction} next\n         * @returns {Promise<void>}\n         */\n        const handler = async (req, res, next) => {\n          if (typeof proxyConfigOrCallback === \"function\") {\n            const newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n            if (newProxyConfig !== proxyConfig) {\n              proxyConfig = newProxyConfig;\n              proxyMiddleware =\n                /** @type {RequestHandler} */\n                (getProxyMiddleware(proxyConfig));\n            }\n          }\n\n          // - Check if we have a bypass function defined\n          // - In case the bypass function is defined we'll retrieve the\n          // bypassUrl from it otherwise bypassUrl would be null\n          // TODO remove in the next major in favor `context` and `router` options\n          const isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n          const bypassUrl = isByPassFuncDefined\n            ? await /** @type {ByPass} */ (proxyConfig.bypass)(\n                req,\n                res,\n                proxyConfig\n              )\n            : null;\n\n          if (typeof bypassUrl === \"boolean\") {\n            // skip the proxy\n            // @ts-ignore\n            req.url = null;\n            next();\n          } else if (typeof bypassUrl === \"string\") {\n            // byPass to that url\n            req.url = bypassUrl;\n            next();\n          } else if (proxyMiddleware) {\n            return proxyMiddleware(req, res, next);\n          } else {\n            next();\n          }\n        };\n\n        middlewares.push({\n          name: \"http-proxy-middleware\",\n          middleware: handler,\n        });\n        // Also forward error requests to the proxy so it can handle them.\n        middlewares.push({\n          name: \"http-proxy-middleware-error-handler\",\n          middleware:\n            /**\n             * @param {Error} error\n             * @param {Request} req\n             * @param {Response} res\n             * @param {NextFunction} next\n             * @returns {any}\n             */\n            (error, req, res, next) => handler(req, res, next),\n        });\n      });\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(\n              staticOption.directory,\n              staticOption.staticOptions\n            ),\n          });\n        });\n      });\n    }\n\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n      const { historyApiFallback } = this.options;\n\n      if (\n        typeof (\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).logger\n        ) === \"undefined\" &&\n        !(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).verbose\n        )\n      ) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(\n          this.logger,\n          \"[connect-history-api-fallback]\"\n        );\n      }\n\n      // Fall back to /index.html if nothing else matches.\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback)\n        ),\n      });\n\n      // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n\n      if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n        /** @type {NormalizedStatic[]} */\n        (this.options.static).forEach((staticOption) => {\n          staticOption.publicPath.forEach((publicPath) => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(\n                staticOption.directory,\n                staticOption.staticOptions\n              ),\n            });\n          });\n        });\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      const serveIndex = require(\"serve-index\");\n\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n\n                serveIndex(\n                  staticOption.directory,\n                  /** @type {ServeIndexOptions} */\n                  (staticOption.serveIndex)\n                )(req, res, next);\n              },\n            });\n          }\n        });\n      });\n    }\n\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this),\n      });\n    }\n\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n\n    middlewares.forEach((middleware) => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.middleware);\n      }\n    });\n\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  createServer() {\n    const { type, options } = /** @type {ServerConfiguration} */ (\n      this.options.server\n    );\n\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n    this.server = require(/** @type {string} */ (type)).createServer(\n      options,\n      this.app\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"connection\",\n      /**\n       * @param {Socket} socket\n       */\n      (socket) => {\n        // Add socket to list\n        this.sockets.push(socket);\n\n        socket.once(\"close\", () => {\n          // Remove socket from list\n          this.sockets.splice(this.sockets.indexOf(socket), 1);\n        });\n      }\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"error\",\n      /**\n       * @param {Error} error\n       */\n      (error) => {\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new /** @type {any} */ (this.getServerTransport())(\n      this\n    );\n    /** @type {WebSocketServerImplementation} */\n    (this.webSocketServer).implementation.on(\n      \"connection\",\n      /**\n       * @param {ClientConnection} client\n       * @param {IncomingMessage} request\n       */\n      (client, request) => {\n        /** @type {{ [key: string]: string | undefined } | undefined} */\n        const headers =\n          // eslint-disable-next-line no-nested-ternary\n          typeof request !== \"undefined\"\n            ? /** @type {{ [key: string]: string | undefined }} */\n              (request.headers)\n            : typeof (\n                /** @type {import(\"sockjs\").Connection} */ (client).headers\n              ) !== \"undefined\"\n            ? /** @type {import(\"sockjs\").Connection} */ (client).headers\n            : // eslint-disable-next-line no-undefined\n              undefined;\n\n        if (!headers) {\n          this.logger.warn(\n            'webSocketServer implementation must pass headers for the \"connection\" event'\n          );\n        }\n\n        if (\n          !headers ||\n          !this.checkHeader(headers, \"host\") ||\n          !this.checkHeader(headers, \"origin\")\n        ) {\n          this.sendMessage([client], \"error\", \"Invalid Host/Origin header\");\n\n          // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n          // Terminate would prevent it sending, so use close to allow it to be sent\n          client.close();\n\n          return;\n        }\n\n        if (this.options.hot === true || this.options.hot === \"only\") {\n          this.sendMessage([client], \"hot\");\n        }\n\n        if (this.options.liveReload) {\n          this.sendMessage([client], \"liveReload\");\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).progress\n        ) {\n          this.sendMessage(\n            [client],\n            \"progress\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).progress\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */ (this.options.client).reconnect\n        ) {\n          this.sendMessage(\n            [client],\n            \"reconnect\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).reconnect\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).overlay\n        ) {\n          this.sendMessage(\n            [client],\n            \"overlay\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).overlay\n          );\n        }\n\n        if (!this.stats) {\n          return;\n        }\n\n        this.sendStats([client], this.getStats(this.stats), true);\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n\n    Promise.all(\n      /** @type {NormalizedOpen[]} */\n      (this.options.open).map((item) => {\n        /**\n         * @type {string}\n         */\n        let openTarget;\n\n        if (item.target === \"<url>\") {\n          openTarget = defaultOpenTarget;\n        } else {\n          openTarget = Server.isAbsoluteURL(item.target)\n            ? item.target\n            : new URL(item.target, defaultOpenTarget).toString();\n        }\n\n        return open(openTarget, item.options).catch(() => {\n          this.logger.warn(\n            `Unable to open \"${openTarget}\" page${\n              item.options.app\n                ? ` in \"${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).name\n                  }\" app${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).arguments\n                      ? ` with \"${\n                          /** @type {import(\"open\").App} */\n                          (item.options.app).arguments.join(\" \")\n                        }\" arguments`\n                      : \"\"\n                  }`\n                : \"\"\n            }. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`\n          );\n        });\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  runBonjour() {\n    /**\n     * @private\n     * @type {import(\"bonjour\").Bonjour | undefined}\n     */\n    this.bonjour = require(\"bonjour\")();\n    this.bonjour.publish({\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      port: /** @type {number} */ (this.options.port),\n      type:\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      .../** @type {BonjourOptions} */ (this.options.bonjour),\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    (this.bonjour).unpublishAll(() => {\n      /** @type {Bonjour} */\n      (this.bonjour).destroy();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  logStatus() {\n    const { isColorSupported, cyan, red } = require(\"colorette\");\n\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n    const getColorsOption = (compilerOptions) => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n\n      if (\n        compilerOptions.stats &&\n        typeof (/** @type {StatsOptions} */ (compilerOptions.stats).colors) !==\n          \"undefined\"\n      ) {\n        colorsEnabled =\n          /** @type {boolean} */\n          (/** @type {StatsOptions} */ (compilerOptions.stats).colors);\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n\n      return colorsEnabled;\n    };\n\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n\n        return msg;\n      },\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n\n        return msg;\n      },\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n\n    if (this.options.ipc) {\n      this.logger.info(\n        `Project is running at: \"${\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        }\"`\n      );\n    } else {\n      const protocol =\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\";\n      const { address, port } =\n        /** @type {import(\"net\").AddressInfo} */\n        (\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        );\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n      const prettyPrintURL = (newHostname) =>\n        url.format({ protocol, hostname: newHostname, port, pathname: \"/\" });\n\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {\n            // Ignore\n          }\n\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n\n      const parsedIP = ipaddr.parse(address);\n\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 =\n          parsedIP.kind() === \"ipv6\" &&\n          /** @type {IPv6} */\n          (parsedIP).isIPv4MappedAddress()\n            ? prettyPrintURL(\n                /** @type {IPv6} */\n                (parsedIP).toIPv4Address().toString()\n              )\n            : prettyPrintURL(address);\n\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n\n      this.logger.info(\"Project is running at:\");\n\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n\n      if (networkUrlIPv4) {\n        this.logger.info(\n          `On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`\n        );\n      }\n\n      if (networkUrlIPv6) {\n        this.logger.info(\n          `On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`\n        );\n      }\n\n      if (/** @type {NormalizedOpen[]} */ (this.options.open).length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n\n        this.openBrowser(openTarget);\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      this.logger.info(\n        `Content not from webpack is served from '${colors.info(\n          useColor,\n          /** @type {NormalizedStatic[]} */\n          (this.options.static)\n            .map((staticOption) => staticOption.directory)\n            .join(\", \")\n        )}' directory`\n      );\n    }\n\n    if (this.options.historyApiFallback) {\n      this.logger.info(\n        `404s will fallback to '${colors.info(\n          useColor,\n          /** @type {ConnectHistoryApiFallbackOptions} */ (\n            this.options.historyApiFallback\n          ).index || \"/index.html\"\n        )}'`\n      );\n    }\n\n    if (this.options.bonjour) {\n      const bonjourProtocol =\n        /** @type {BonjourOptions} */\n        (this.options.bonjour).type ||\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\"\n          ? \"http\"\n          : \"https\";\n\n      this.logger.info(\n        `Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n  setHeaders(req, res, next) {\n    let { headers } = this.options;\n\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(\n          req,\n          res,\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).context\n        );\n      }\n\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n      const allHeaders = [];\n\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({ key: name, value: headers[name] });\n        }\n\n        headers = allHeaders;\n      }\n\n      headers.forEach(\n        /**\n         * @param {{key: string, value: any}} header\n         */\n        (header) => {\n          res.setHeader(header.key, header.value);\n        }\n      );\n    }\n\n    next();\n  }\n\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n      // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`,\n      false,\n      true\n    ).hostname;\n\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // always allow localhost host, for convenience (hostname === 'localhost')\n    // allow hostname of listening address  (hostname === this.options.host)\n    const isValidHostname =\n      (hostname !== null && ipaddr.IPv4.isValid(hostname)) ||\n      (hostname !== null && ipaddr.IPv6.isValid(hostname)) ||\n      hostname === \"localhost\" ||\n      hostname === this.options.host;\n\n    if (isValidHostname) {\n      return true;\n    }\n\n    const { allowedHosts } = this.options;\n\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (\n            hostname === allowedHost.substring(1) ||\n            /** @type {string} */ (hostname).endsWith(allowedHost)\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // Also allow if `client.webSocketURL.hostname` provided\n    if (\n      this.options.client &&\n      typeof (\n        /** @type {ClientConfiguration} */ (this.options.client).webSocketURL\n      ) !== \"undefined\"\n    ) {\n      return (\n        /** @type {WebSocketURL} */\n        (/** @type {ClientConfiguration} */ (this.options.client).webSocketURL)\n          .hostname === hostname\n      );\n    }\n\n    // disallow\n    return false;\n  }\n\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({ type, data, params }));\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n    (this.middleware).waitUntilValid(() => {\n      const _path = req.path;\n\n      try {\n        const filename =\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).getFilenameFromUrl(`${_path}.js`);\n        const isFile =\n          /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n          (\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).context.outputFileSystem\n          )\n            .statSync(/** @type {import(\"fs\").PathLike} */ (filename))\n            .isFile();\n\n        if (!isFile) {\n          return next();\n        }\n\n        // Serve a page that executes the javascript\n        // @ts-ignore\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  }\n\n  // Send stats to a socket or multiple sockets\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n  sendStats(clients, stats, force) {\n    const shouldEmit =\n      !force &&\n      stats &&\n      (!stats.errors || stats.errors.length === 0) &&\n      (!stats.warnings || stats.warnings.length === 0) &&\n      this.currentHash === stats.hash;\n\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n\n      return;\n    }\n\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n\n    if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      (stats.errors).length > 0 ||\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      (stats.warnings).length > 0\n    ) {\n      const hasErrors =\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n        (stats.errors).length > 0;\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n        (stats.warnings).length > 0\n      ) {\n        let params;\n\n        if (hasErrors) {\n          params = { preventReloading: true };\n        }\n\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */ (stats.errors)\n          .length > 0\n      ) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n    const watcher = chokidar.watch(watchPath, watchOptions);\n\n    // disabling refreshing on changing the content\n    if (this.options.liveReload) {\n      watcher.on(\"change\", (item) => {\n        if (this.webSocketServer) {\n          this.sendMessage(\n            this.webSocketServer.clients,\n            \"static-changed\",\n            item\n          );\n        }\n      });\n    }\n\n    this.staticWatchers.push(watcher);\n  }\n\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async start() {\n    await this.normalizeOptions();\n\n    if (this.options.ipc) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve, reject) => {\n          const net = require(\"net\");\n          const socket = new net.Socket();\n\n          socket.on(\n            \"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            (error) => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync(/** @type {string} */ (this.options.ipc));\n\n                resolve();\n\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n\n                return;\n              }\n\n              reject(error);\n            }\n          );\n\n          socket.connect(\n            { path: /** @type {string} */ (this.options.ipc) },\n            () => {\n              throw new Error(`IPC \"${this.options.ipc}\" is already used`);\n            }\n          );\n        })\n      );\n    } else {\n      this.options.host = await Server.getHostname(\n        /** @type {Host} */ (this.options.host)\n      );\n      this.options.port = await Server.getFreePort(\n        /** @type {Port} */ (this.options.port)\n      );\n    }\n\n    await this.initialize();\n\n    const listenOptions = this.options.ipc\n      ? { path: this.options.ipc }\n      : { host: this.options.host, port: this.options.port };\n\n    await /** @type {Promise<void>} */ (\n      new Promise((resolve) => {\n        /** @type {import(\"http\").Server} */\n        (this.server).listen(listenOptions, () => {\n          resolve();\n        });\n      })\n    );\n\n    if (this.options.ipc) {\n      // chmod 666 (rw rw rw)\n      const READ_WRITE = 438;\n\n      await fs.promises.chmod(\n        /** @type {string} */ (this.options.ipc),\n        READ_WRITE\n      );\n    }\n\n    if (this.options.webSocketServer) {\n      this.createWebSocketServer();\n    }\n\n    if (this.options.bonjour) {\n      this.runBonjour();\n    }\n\n    this.logStatus();\n\n    if (typeof this.options.onListening === \"function\") {\n      this.options.onListening(this);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  startCallback(callback = () => {}) {\n    this.start()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async stop() {\n    if (this.bonjour) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          this.stopBonjour(() => {\n            resolve();\n          });\n        })\n      );\n    }\n\n    this.webSocketProxies = [];\n\n    await Promise.all(this.staticWatchers.map((watcher) => watcher.close()));\n\n    this.staticWatchers = [];\n\n    if (this.webSocketServer) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).implementation.close(() => {\n            this.webSocketServer = null;\n\n            resolve();\n          });\n\n          for (const client of /** @type {WebSocketServerImplementation} */ (\n            this.webSocketServer\n          ).clients) {\n            client.terminate();\n          }\n\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).clients = [];\n        })\n      );\n    }\n\n    if (this.server) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {import(\"http\").Server} */\n          (this.server).close(() => {\n            this.server = null;\n\n            resolve();\n          });\n\n          for (const socket of this.sockets) {\n            socket.destroy();\n          }\n\n          this.sockets = [];\n        })\n      );\n\n      if (this.middleware) {\n        await /** @type {Promise<void>} */ (\n          new Promise((resolve, reject) => {\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).close((error) => {\n              if (error) {\n                reject(error);\n\n                return;\n              }\n\n              resolve();\n            });\n          })\n        );\n\n        this.middleware = null;\n      }\n    }\n\n    // We add listeners to signals when creating a new Server instance\n    // So ensure they are removed to prevent EventEmitter memory leak warnings\n    for (const item of this.listeners) {\n      process.removeListener(item.name, item.listener);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  stopCallback(callback = () => {}) {\n    this.stop()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  // TODO remove in the next major release\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n  listen(port, hostname, fn) {\n    util.deprecate(\n      () => {},\n      \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_LISTEN\"\n    )();\n\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n\n    if (\n      typeof port !== \"undefined\" &&\n      typeof this.options.port !== \"undefined\" &&\n      port !== this.options.port\n    ) {\n      this.options.port = port;\n\n      this.logger.warn(\n        'The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n\n    if (\n      typeof hostname !== \"undefined\" &&\n      typeof this.options.host !== \"undefined\" &&\n      hostname !== this.options.host\n    ) {\n      this.options.host = hostname;\n\n      this.logger.warn(\n        'The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n\n    this.start()\n      .then(() => {\n        if (fn) {\n          fn.call(this.server);\n        }\n      })\n      .catch((error) => {\n        // Nothing\n        if (fn) {\n          fn.call(this.server, error);\n        }\n      });\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n  close(callback) {\n    util.deprecate(\n      () => {},\n      \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_CLOSE\"\n    )();\n\n    this.stop()\n      .then(() => {\n        if (callback) {\n          callback();\n        }\n      })\n      .catch((error) => {\n        if (callback) {\n          callback(error);\n        }\n      });\n  }\n}\n\nmodule.exports = Server;\n"]},"metadata":{},"sourceType":"script"}