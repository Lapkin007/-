{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _templateObject, _templateObject2;\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\n\nvar codegen_1 = require(\"./codegen\");\n\nvar validation_error_1 = require(\"../runtime/validation_error\");\n\nvar names_1 = require(\"./names\");\n\nvar resolve_1 = require(\"./resolve\");\n\nvar util_1 = require(\"./util\");\n\nvar validate_1 = require(\"./validate\");\n\nvar SchemaEnv = /*#__PURE__*/_createClass(function SchemaEnv(env) {\n  _classCallCheck(this, SchemaEnv);\n\n  var _a;\n\n  this.refs = {};\n  this.dynamicAnchors = {};\n  var schema;\n  if (_typeof(env.schema) == \"object\") schema = env.schema;\n  this.schema = env.schema;\n  this.schemaId = env.schemaId;\n  this.root = env.root || this;\n  this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n  this.schemaPath = env.schemaPath;\n  this.localRefs = env.localRefs;\n  this.meta = env.meta;\n  this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n  this.refs = {};\n});\n\nexports.SchemaEnv = SchemaEnv; // let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\n\nfunction compileSchema(sch) {\n  // TODO refactor - remove compilations\n  var _sch = getCompilingSchema.call(this, sch);\n\n  if (_sch) return _sch;\n  var rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n\n  var _this$opts$code = this.opts.code,\n      es5 = _this$opts$code.es5,\n      lines = _this$opts$code.lines;\n  var ownProperties = this.opts.ownProperties;\n  var gen = new codegen_1.CodeGen(this.scope, {\n    es5: es5,\n    lines: lines,\n    ownProperties: ownProperties\n  });\n\n  var _ValidationError;\n\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: validation_error_1.default,\n      code: (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"require(\\\"ajv/dist/runtime/validation_error\\\").default\"])))\n    });\n  }\n\n  var validateName = gen.scopeName(\"validate\");\n  sch.validateName = validateName;\n  var schemaCxt = {\n    gen: gen,\n    allErrors: this.opts.allErrors,\n    data: names_1.default.data,\n    parentData: names_1.default.parentData,\n    parentDataProperty: names_1.default.parentDataProperty,\n    dataNames: [names_1.default.data],\n    dataPathArr: [codegen_1.nil],\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set(),\n    topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true ? {\n      ref: sch.schema,\n      code: (0, codegen_1.stringify)(sch.schema)\n    } : {\n      ref: sch.schema\n    }),\n    validateName: validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId: rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: codegen_1.nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\\"\\\"\"]))),\n    opts: this.opts,\n    self: this\n  };\n  var sourceCode;\n\n  try {\n    this._compilations.add(sch);\n\n    (0, validate_1.validateFunctionCode)(schemaCxt);\n    gen.optimize(this.opts.code.optimize); // gen.optimize(1)\n\n    var validateCode = gen.toString();\n    sourceCode = \"\".concat(gen.scopeRefs(names_1.default.scope), \"return \").concat(validateCode); // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch); // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n\n    var makeValidate = new Function(\"\".concat(names_1.default.self), \"\".concat(names_1.default.scope), sourceCode);\n    var validate = makeValidate(this, this.scope.get());\n    this.scope.value(validateName, {\n      ref: validate\n    });\n    validate.errors = null;\n    validate.schema = sch.schema;\n    validate.schemaEnv = sch;\n    if (sch.$async) validate.$async = true;\n\n    if (this.opts.code.source === true) {\n      validate.source = {\n        validateName: validateName,\n        validateCode: validateCode,\n        scopeValues: gen._values\n      };\n    }\n\n    if (this.opts.unevaluated) {\n      var props = schemaCxt.props,\n          items = schemaCxt.items;\n      validate.evaluated = {\n        props: props instanceof codegen_1.Name ? undefined : props,\n        items: items instanceof codegen_1.Name ? undefined : items,\n        dynamicProps: props instanceof codegen_1.Name,\n        dynamicItems: items instanceof codegen_1.Name\n      };\n      if (validate.source) validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n    }\n\n    sch.validate = validate;\n    return sch;\n  } catch (e) {\n    delete sch.validate;\n    delete sch.validateName;\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode); // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n\n    throw e;\n  } finally {\n    this._compilations.delete(sch);\n  }\n}\n\nexports.compileSchema = compileSchema;\n\nfunction resolveRef(root, baseId, ref) {\n  var _a;\n\n  ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n  var schOrFunc = root.refs[ref];\n  if (schOrFunc) return schOrFunc;\n\n  var _sch = resolve.call(this, root, ref);\n\n  if (_sch === undefined) {\n    var schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n\n    var schemaId = this.opts.schemaId;\n    if (schema) _sch = new SchemaEnv({\n      schema: schema,\n      schemaId: schemaId,\n      root: root,\n      baseId: baseId\n    });\n  }\n\n  if (_sch === undefined) return;\n  return root.refs[ref] = inlineOrCompile.call(this, _sch);\n}\n\nexports.resolveRef = resolveRef;\n\nfunction inlineOrCompile(sch) {\n  if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs)) return sch.schema;\n  return sch.validate ? sch : compileSchema.call(this, sch);\n} // Index of schema compilation in the currently compiled list\n\n\nfunction getCompilingSchema(schEnv) {\n  var _iterator = _createForOfIteratorHelper(this._compilations),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var sch = _step.value;\n      if (sameSchemaEnv(sch, schEnv)) return sch;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nexports.getCompilingSchema = getCompilingSchema;\n\nfunction sameSchemaEnv(s1, s2) {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n} // resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\n\n\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n  var sch;\n\n  while (typeof (sch = this.refs[ref]) == \"string\") {\n    ref = sch;\n  }\n\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n} // Resolve schema, its root and baseId\n\n\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n  var p = this.opts.uriResolver.parse(ref);\n  var refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n  var baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined); // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root);\n  }\n\n  var id = (0, resolve_1.normalizeId)(refPath);\n  var schOrRef = this.refs[id] || this.schemas[id];\n\n  if (typeof schOrRef == \"string\") {\n    var sch = resolveSchema.call(this, root, schOrRef);\n    if (_typeof(sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\") return;\n    return getJsonPointer.call(this, p, sch);\n  }\n\n  if (_typeof(schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\") return;\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef);\n\n  if (id === (0, resolve_1.normalizeId)(ref)) {\n    var schema = schOrRef.schema;\n    var schemaId = this.opts.schemaId;\n    var schId = schema[schemaId];\n    if (schId) baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n    return new SchemaEnv({\n      schema: schema,\n      schemaId: schemaId,\n      root: root,\n      baseId: baseId\n    });\n  }\n\n  return getJsonPointer.call(this, p, schOrRef);\n}\n\nexports.resolveSchema = resolveSchema;\nvar PREVENT_SCOPE_CHANGE = new Set([\"properties\", \"patternProperties\", \"enum\", \"dependencies\", \"definitions\"]);\n\nfunction getJsonPointer(parsedRef, _ref) {\n  var baseId = _ref.baseId,\n      schema = _ref.schema,\n      root = _ref.root;\n\n  var _a;\n\n  if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\") return;\n\n  var _iterator2 = _createForOfIteratorHelper(parsedRef.fragment.slice(1).split(\"/\")),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var part = _step2.value;\n      if (typeof schema === \"boolean\") return;\n      var partSchema = schema[(0, util_1.unescapeFragment)(part)];\n      if (partSchema === undefined) return;\n      schema = partSchema; // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n\n      var schId = _typeof(schema) === \"object\" && schema[this.opts.schemaId];\n\n      if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n        baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var env;\n\n  if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n    var $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n    env = resolveSchema.call(this, root, $ref);\n  } // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n\n\n  var schemaId = this.opts.schemaId;\n  env = env || new SchemaEnv({\n    schema: schema,\n    schemaId: schemaId,\n    root: root,\n    baseId: baseId\n  });\n  if (env.schema !== env.root.schema) return env;\n  return undefined;\n}","map":{"version":3,"mappings":"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","names":["SchemaEnv","env","schema","schemaId","root","baseId","_a","schemaPath","localRefs","meta","$async","refs","exports","compileSchema","sch","_sch","getCompilingSchema","call","rootId","opts","uriResolver","code","es5","lines","ownProperties","gen","codegen_1","scope","_ValidationError","scopeValue","ref","validation_error_1","validateName","scopeName","schemaCxt","allErrors","data","names_1","parentData","parentDataProperty","dataNames","dataPathArr","dataLevel","dataTypes","definedProperties","Set","topSchemaRef","source","ValidationError","schemaEnv","errSchemaPath","jtd","errorPath","self","sourceCode","_compilations","add","optimize","validateCode","toString","scopeRefs","process","makeValidate","Function","validate","get","value","errors","scopeValues","_values","unevaluated","props","items","evaluated","undefined","dynamicProps","dynamicItems","e","logger","error","delete","resolveRef","schOrFunc","resolve","inlineOrCompile","inlineRefs","schEnv","sameSchemaEnv","s1","s2","schemas","resolveSchema","p","parse","refPath","Object","keys","length","getJsonPointer","id","schOrRef","schId","PREVENT_SCOPE_CHANGE","parsedRef","fragment","slice","split","part","partSchema","has","$ref","RULES"],"sourceRoot":"","sources":["../../lib/compile/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}