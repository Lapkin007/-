{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.sticky.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatLimitDefinition = void 0;\n\nvar ajv_1 = require(\"ajv\");\n\nvar codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nvar ops = codegen_1.operators;\nvar KWDs = {\n  formatMaximum: {\n    okStr: \"<=\",\n    ok: ops.LTE,\n    fail: ops.GT\n  },\n  formatMinimum: {\n    okStr: \">=\",\n    ok: ops.GTE,\n    fail: ops.LT\n  },\n  formatExclusiveMaximum: {\n    okStr: \"<\",\n    ok: ops.LT,\n    fail: ops.GTE\n  },\n  formatExclusiveMinimum: {\n    okStr: \">\",\n    ok: ops.GT,\n    fail: ops.LTE\n  }\n};\nvar error = {\n  message: function message(_ref) {\n    var keyword = _ref.keyword,\n        schemaCode = _ref.schemaCode;\n    return codegen_1.str(_templateObject || (_templateObject = _taggedTemplateLiteral([\"should be \", \" \", \"\"])), KWDs[keyword].okStr, schemaCode);\n  },\n  params: function params(_ref2) {\n    var keyword = _ref2.keyword,\n        schemaCode = _ref2.schemaCode;\n    return codegen_1._(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{comparison: \", \", limit: \", \"}\"])), KWDs[keyword].okStr, schemaCode);\n  }\n};\nexports.formatLimitDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n        data = cxt.data,\n        schemaCode = cxt.schemaCode,\n        keyword = cxt.keyword,\n        it = cxt.it;\n    var opts = it.opts,\n        self = it.self;\n    if (!opts.validateFormats) return;\n    var fCxt = new ajv_1.KeywordCxt(it, self.RULES.all.format.definition, \"format\");\n    if (fCxt.$data) validate$DataFormat();else validateFormat();\n\n    function validate$DataFormat() {\n      var fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats\n      });\n      var fmt = gen.const(\"fmt\", codegen_1._(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), fmts, fCxt.schemaCode));\n      cxt.fail$data(codegen_1.or(codegen_1._(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"typeof \", \" != \\\"object\\\"\"])), fmt), codegen_1._(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" instanceof RegExp\"])), fmt), codegen_1._(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"typeof \", \".compare != \\\"function\\\"\"])), fmt), compareCode(fmt)));\n    }\n\n    function validateFormat() {\n      var format = fCxt.schema;\n      var fmtDef = self.formats[format];\n      if (!fmtDef || fmtDef === true) return;\n\n      if (_typeof(fmtDef) != \"object\" || fmtDef instanceof RegExp || typeof fmtDef.compare != \"function\") {\n        throw new Error(\"\\\"\".concat(keyword, \"\\\": format \\\"\").concat(format, \"\\\" does not define \\\"compare\\\" function\"));\n      }\n\n      var fmt = gen.scopeValue(\"formats\", {\n        key: format,\n        ref: fmtDef,\n        code: opts.code.formats ? codegen_1._(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"\", \"\"])), opts.code.formats, codegen_1.getProperty(format)) : undefined\n      });\n      cxt.fail$data(compareCode(fmt));\n    }\n\n    function compareCode(fmt) {\n      return codegen_1._(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \".compare(\", \", \", \") \", \" 0\"])), fmt, data, schemaCode, KWDs[keyword].fail);\n    }\n  },\n  dependencies: [\"format\"]\n};\n\nvar formatLimitPlugin = function formatLimitPlugin(ajv) {\n  ajv.addKeyword(exports.formatLimitDefinition);\n  return ajv;\n};\n\nexports.default = formatLimitPlugin;","map":{"version":3,"mappings":"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","names":["ops","codegen_1","KWDs","formatMaximum","okStr","ok","LTE","fail","GT","formatMinimum","GTE","LT","formatExclusiveMaximum","formatExclusiveMinimum","error","message","keyword","schemaCode","params","exports","Object","keys","type","schemaType","$data","code","cxt","gen","data","it","opts","self","validateFormats","fCxt","ajv_1","RULES","all","format","definition","validate$DataFormat","validateFormat","fmts","scopeValue","ref","formats","fmt","const","fail$data","compareCode","schema","fmtDef","RegExp","compare","Error","key","undefined","dependencies","formatLimitPlugin","ajv","addKeyword"],"sourceRoot":"","sources":["../src/limit.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}