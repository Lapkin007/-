{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nrequire(\"core-js/modules/es.map.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nvar path = require(\"path\");\n\nvar DirectoryWatcher = require(\"./DirectoryWatcher\");\n\nvar WatcherManager = /*#__PURE__*/function () {\n  function WatcherManager(options) {\n    _classCallCheck(this, WatcherManager);\n\n    this.options = options;\n    this.directoryWatchers = new Map();\n  }\n\n  _createClass(WatcherManager, [{\n    key: \"getDirectoryWatcher\",\n    value: function getDirectoryWatcher(directory) {\n      var _this = this;\n\n      var watcher = this.directoryWatchers.get(directory);\n\n      if (watcher === undefined) {\n        var newWatcher = new DirectoryWatcher(this, directory, this.options);\n        this.directoryWatchers.set(directory, newWatcher);\n        newWatcher.on(\"closed\", function () {\n          _this.directoryWatchers.delete(directory);\n        });\n        return newWatcher;\n      }\n\n      return watcher;\n    }\n  }, {\n    key: \"watchFile\",\n    value: function watchFile(p, startTime) {\n      var directory = path.dirname(p);\n      if (directory === p) return null;\n      return this.getDirectoryWatcher(directory).watch(p, startTime);\n    }\n  }, {\n    key: \"watchDirectory\",\n    value: function watchDirectory(directory, startTime) {\n      return this.getDirectoryWatcher(directory).watch(directory, startTime);\n    }\n  }]);\n\n  return WatcherManager;\n}();\n\nvar watcherManagers = new WeakMap();\n/**\n * @param {object} options options\n * @returns {WatcherManager} the watcher manager\n */\n\nmodule.exports = function (options) {\n  var watcherManager = watcherManagers.get(options);\n  if (watcherManager !== undefined) return watcherManager;\n  var newWatcherManager = new WatcherManager(options);\n  watcherManagers.set(options, newWatcherManager);\n  return newWatcherManager;\n};\n\nmodule.exports.WatcherManager = WatcherManager;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/watchpack/lib/getWatcherManager.js"],"names":["path","require","DirectoryWatcher","WatcherManager","options","directoryWatchers","Map","directory","watcher","get","undefined","newWatcher","set","on","delete","p","startTime","dirname","getDirectoryWatcher","watch","watcherManagers","WeakMap","module","exports","watcherManager","newWatcherManager"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;;IAEME,c;AACL,0BAAYC,OAAZ,EAAqB;AAAA;;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;AACA;;;;WAED,6BAAoBC,SAApB,EAA+B;AAAA;;AAC9B,UAAMC,OAAO,GAAG,KAAKH,iBAAL,CAAuBI,GAAvB,CAA2BF,SAA3B,CAAhB;;AACA,UAAIC,OAAO,KAAKE,SAAhB,EAA2B;AAC1B,YAAMC,UAAU,GAAG,IAAIT,gBAAJ,CAAqB,IAArB,EAA2BK,SAA3B,EAAsC,KAAKH,OAA3C,CAAnB;AACA,aAAKC,iBAAL,CAAuBO,GAAvB,CAA2BL,SAA3B,EAAsCI,UAAtC;AACAA,QAAAA,UAAU,CAACE,EAAX,CAAc,QAAd,EAAwB,YAAM;AAC7B,UAAA,KAAI,CAACR,iBAAL,CAAuBS,MAAvB,CAA8BP,SAA9B;AACA,SAFD;AAGA,eAAOI,UAAP;AACA;;AACD,aAAOH,OAAP;AACA;;;WAED,mBAAUO,CAAV,EAAaC,SAAb,EAAwB;AACvB,UAAMT,SAAS,GAAGP,IAAI,CAACiB,OAAL,CAAaF,CAAb,CAAlB;AACA,UAAIR,SAAS,KAAKQ,CAAlB,EAAqB,OAAO,IAAP;AACrB,aAAO,KAAKG,mBAAL,CAAyBX,SAAzB,EAAoCY,KAApC,CAA0CJ,CAA1C,EAA6CC,SAA7C,CAAP;AACA;;;WAED,wBAAeT,SAAf,EAA0BS,SAA1B,EAAqC;AACpC,aAAO,KAAKE,mBAAL,CAAyBX,SAAzB,EAAoCY,KAApC,CAA0CZ,SAA1C,EAAqDS,SAArD,CAAP;AACA;;;;;;AAGF,IAAMI,eAAe,GAAG,IAAIC,OAAJ,EAAxB;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAAnB,OAAO,EAAI;AAC3B,MAAMoB,cAAc,GAAGJ,eAAe,CAACX,GAAhB,CAAoBL,OAApB,CAAvB;AACA,MAAIoB,cAAc,KAAKd,SAAvB,EAAkC,OAAOc,cAAP;AAClC,MAAMC,iBAAiB,GAAG,IAAItB,cAAJ,CAAmBC,OAAnB,CAA1B;AACAgB,EAAAA,eAAe,CAACR,GAAhB,CAAoBR,OAApB,EAA6BqB,iBAA7B;AACA,SAAOA,iBAAP;AACA,CAND;;AAOAH,MAAM,CAACC,OAAP,CAAepB,cAAf,GAAgCA,cAAhC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst DirectoryWatcher = require(\"./DirectoryWatcher\");\n\nclass WatcherManager {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t\tthis.directoryWatchers = new Map();\n\t}\n\n\tgetDirectoryWatcher(directory) {\n\t\tconst watcher = this.directoryWatchers.get(directory);\n\t\tif (watcher === undefined) {\n\t\t\tconst newWatcher = new DirectoryWatcher(this, directory, this.options);\n\t\t\tthis.directoryWatchers.set(directory, newWatcher);\n\t\t\tnewWatcher.on(\"closed\", () => {\n\t\t\t\tthis.directoryWatchers.delete(directory);\n\t\t\t});\n\t\t\treturn newWatcher;\n\t\t}\n\t\treturn watcher;\n\t}\n\n\twatchFile(p, startTime) {\n\t\tconst directory = path.dirname(p);\n\t\tif (directory === p) return null;\n\t\treturn this.getDirectoryWatcher(directory).watch(p, startTime);\n\t}\n\n\twatchDirectory(directory, startTime) {\n\t\treturn this.getDirectoryWatcher(directory).watch(directory, startTime);\n\t}\n}\n\nconst watcherManagers = new WeakMap();\n/**\n * @param {object} options options\n * @returns {WatcherManager} the watcher manager\n */\nmodule.exports = options => {\n\tconst watcherManager = watcherManagers.get(options);\n\tif (watcherManager !== undefined) return watcherManager;\n\tconst newWatcherManager = new WatcherManager(options);\n\twatcherManagers.set(options, newWatcherManager);\n\treturn newWatcherManager;\n};\nmodule.exports.WatcherManager = WatcherManager;\n"]},"metadata":{},"sourceType":"script"}