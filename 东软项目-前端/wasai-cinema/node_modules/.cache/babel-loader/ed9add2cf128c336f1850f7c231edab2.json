{"ast":null,"code":"\"use strict\";\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n * @param {(...args: any[]) => any} callback\n * @param {Request} [req]\n * @returns {void}\n */\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nfunction ready(context, callback, req) {\n  if (context.state) {\n    callback(context.stats);\n    return;\n  }\n\n  var name = req && req.url || callback.name;\n  context.logger.info(\"wait until bundle finished\".concat(name ? \": \".concat(name) : \"\"));\n  context.callbacks.push(callback);\n}\n\nmodule.exports = ready;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/webpack-dev-middleware/dist/utils/ready.js"],"names":["ready","context","callback","req","state","stats","name","url","logger","info","callbacks","push","module","exports"],"mappings":"AAAA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASA,KAAT,CAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,GAAlC,EAAuC;AACrC,MAAIF,OAAO,CAACG,KAAZ,EAAmB;AACjBF,IAAAA,QAAQ,CAACD,OAAO,CAACI,KAAT,CAAR;AACA;AACD;;AAED,MAAMC,IAAI,GAAGH,GAAG,IAAIA,GAAG,CAACI,GAAX,IAAkBL,QAAQ,CAACI,IAAxC;AACAL,EAAAA,OAAO,CAACO,MAAR,CAAeC,IAAf,qCAAiDH,IAAI,eAAQA,IAAR,IAAiB,EAAtE;AACAL,EAAAA,OAAO,CAACS,SAAR,CAAkBC,IAAlB,CAAuBT,QAAvB;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBb,KAAjB","sourcesContent":["\"use strict\";\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n * @param {(...args: any[]) => any} callback\n * @param {Request} [req]\n * @returns {void}\n */\nfunction ready(context, callback, req) {\n  if (context.state) {\n    callback(context.stats);\n    return;\n  }\n\n  const name = req && req.url || callback.name;\n  context.logger.info(`wait until bundle finished${name ? `: ${name}` : \"\"}`);\n  context.callbacks.push(callback);\n}\n\nmodule.exports = ready;"]},"metadata":{},"sourceType":"script"}