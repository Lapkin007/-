{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n/** @typedef {{[k: string]: any}} Cache */\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nrequire(\"core-js/modules/es.json.stringify.js\");\n\nfunction getCacheId(type, request, withContext) {\n  return JSON.stringify({\n    type: type,\n    context: withContext ? request.context : \"\",\n    path: request.path,\n    query: request.query,\n    fragment: request.fragment,\n    request: request.request\n  });\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {function(ResolveRequest): boolean} filterPredicate filterPredicate\n   * @param {Cache} cache cache\n   * @param {boolean} withContext withContext\n   * @param {string | ResolveStepHook} target target\n   */\n  function UnsafeCachePlugin(source, filterPredicate, cache, withContext, target) {\n    _classCallCheck(this, UnsafeCachePlugin);\n\n    this.source = source;\n    this.filterPredicate = filterPredicate;\n    this.withContext = withContext;\n    this.cache = cache;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(UnsafeCachePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"UnsafeCachePlugin\", function (request, resolveContext, callback) {\n        if (!_this.filterPredicate(request)) return callback();\n        var isYield = typeof resolveContext.yield === \"function\";\n        var cacheId = getCacheId(isYield ? \"yield\" : \"default\", request, _this.withContext);\n        var cacheEntry = _this.cache[cacheId];\n\n        if (cacheEntry) {\n          if (isYield) {\n            var _yield_ =\n            /** @type {Function} */\n            resolveContext.yield;\n\n            if (Array.isArray(cacheEntry)) {\n              var _iterator = _createForOfIteratorHelper(cacheEntry),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var result = _step.value;\n\n                  _yield_(result);\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            } else {\n              _yield_(cacheEntry);\n            }\n\n            return callback(null, null);\n          }\n\n          return callback(null, cacheEntry);\n        }\n\n        var yieldFn;\n        var yield_;\n        var yieldResult = [];\n\n        if (isYield) {\n          yieldFn = resolveContext.yield;\n\n          yield_ = function yield_(result) {\n            yieldResult.push(result);\n          };\n        }\n\n        resolver.doResolve(target, request, null, yield_ ? _objectSpread(_objectSpread({}, resolveContext), {}, {\n          yield: yield_\n        }) : resolveContext, function (err, result) {\n          if (err) return callback(err);\n\n          if (isYield) {\n            if (result) yieldResult.push(result);\n\n            var _iterator2 = _createForOfIteratorHelper(yieldResult),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _result = _step2.value;\n                yieldFn(_result);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            _this.cache[cacheId] = yieldResult;\n            return callback(null, null);\n          }\n\n          if (result) return callback(null, _this.cache[cacheId] = result);\n          callback();\n        });\n      });\n    }\n  }]);\n\n  return UnsafeCachePlugin;\n}();","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js"],"names":["getCacheId","type","request","withContext","JSON","stringify","context","path","query","fragment","module","exports","source","filterPredicate","cache","target","resolver","ensureHook","getHook","tapAsync","resolveContext","callback","isYield","yield","cacheId","cacheEntry","yield_","Array","isArray","result","yieldFn","yieldResult","push","doResolve","err"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{[k: string]: any}} Cache */\n\nfunction getCacheId(type, request, withContext) {\n\treturn JSON.stringify({\n\t\ttype,\n\t\tcontext: withContext ? request.context : \"\",\n\t\tpath: request.path,\n\t\tquery: request.query,\n\t\tfragment: request.fragment,\n\t\trequest: request.request\n\t});\n}\n\nmodule.exports = class UnsafeCachePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {function(ResolveRequest): boolean} filterPredicate filterPredicate\n\t * @param {Cache} cache cache\n\t * @param {boolean} withContext withContext\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filterPredicate, cache, withContext, target) {\n\t\tthis.source = source;\n\t\tthis.filterPredicate = filterPredicate;\n\t\tthis.withContext = withContext;\n\t\tthis.cache = cache;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!this.filterPredicate(request)) return callback();\n\t\t\t\tconst isYield = typeof resolveContext.yield === \"function\";\n\t\t\t\tconst cacheId = getCacheId(\n\t\t\t\t\tisYield ? \"yield\" : \"default\",\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.withContext\n\t\t\t\t);\n\t\t\t\tconst cacheEntry = this.cache[cacheId];\n\t\t\t\tif (cacheEntry) {\n\t\t\t\t\tif (isYield) {\n\t\t\t\t\t\tconst yield_ = /** @type {Function} */ (resolveContext.yield);\n\t\t\t\t\t\tif (Array.isArray(cacheEntry)) {\n\t\t\t\t\t\t\tfor (const result of cacheEntry) yield_(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tyield_(cacheEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, cacheEntry);\n\t\t\t\t}\n\n\t\t\t\tlet yieldFn;\n\t\t\t\tlet yield_;\n\t\t\t\tconst yieldResult = [];\n\t\t\t\tif (isYield) {\n\t\t\t\t\tyieldFn = resolveContext.yield;\n\t\t\t\t\tyield_ = result => {\n\t\t\t\t\t\tyieldResult.push(result);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tnull,\n\t\t\t\t\tyield_ ? { ...resolveContext, yield: yield_ } : resolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (isYield) {\n\t\t\t\t\t\t\tif (result) yieldResult.push(result);\n\t\t\t\t\t\t\tfor (const result of yieldResult) yieldFn(result);\n\t\t\t\t\t\t\tthis.cache[cacheId] = yieldResult;\n\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (result) return callback(null, (this.cache[cacheId] = result));\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}