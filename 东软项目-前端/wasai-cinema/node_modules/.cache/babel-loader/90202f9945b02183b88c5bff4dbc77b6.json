{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2;\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar code_1 = require(\"../code\");\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar error = {\n  message: function message(_ref) {\n    var missingProperty = _ref.params.missingProperty;\n    return (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"must have required property '\", \"'\"])), missingProperty);\n  },\n  params: function params(_ref2) {\n    var missingProperty = _ref2.params.missingProperty;\n    return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{missingProperty: \", \"}\"])), missingProperty);\n  }\n};\nvar def = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n        schema = cxt.schema,\n        schemaCode = cxt.schemaCode,\n        data = cxt.data,\n        $data = cxt.$data,\n        it = cxt.it;\n    var opts = it.opts;\n    if (!$data && schema.length === 0) return;\n    var useLoop = schema.length >= opts.loopRequired;\n    if (it.allErrors) allErrorsMode();else exitOnErrorMode();\n\n    if (opts.strictRequired) {\n      var props = cxt.parentSchema.properties;\n      var definedProperties = cxt.it.definedProperties;\n\n      var _iterator = _createForOfIteratorHelper(schema),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var requiredKey = _step.value;\n\n          if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n            var schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n            var msg = \"required property \\\"\".concat(requiredKey, \"\\\" is not defined at \\\"\").concat(schemaPath, \"\\\" (strictRequired)\");\n            (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    function allErrorsMode() {\n      if (useLoop || $data) {\n        cxt.block$data(codegen_1.nil, loopAllRequired);\n      } else {\n        var _iterator2 = _createForOfIteratorHelper(schema),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var prop = _step2.value;\n            (0, code_1.checkReportMissingProp)(cxt, prop);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n\n    function exitOnErrorMode() {\n      var missing = gen.let(\"missing\");\n\n      if (useLoop || $data) {\n        var valid = gen.let(\"valid\", true);\n        cxt.block$data(valid, function () {\n          return loopUntilMissing(missing, valid);\n        });\n        cxt.ok(valid);\n      } else {\n        gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n        (0, code_1.reportMissingProp)(cxt, missing);\n        gen.else();\n      }\n    }\n\n    function loopAllRequired() {\n      gen.forOf(\"prop\", schemaCode, function (prop) {\n        cxt.setParams({\n          missingProperty: prop\n        });\n        gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), function () {\n          return cxt.error();\n        });\n      });\n    }\n\n    function loopUntilMissing(missing, valid) {\n      cxt.setParams({\n        missingProperty: missing\n      });\n      gen.forOf(missing, schemaCode, function () {\n        gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n        gen.if((0, codegen_1.not)(valid), function () {\n          cxt.error();\n          gen.break();\n        });\n      }, codegen_1.nil);\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"mappings":"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","names":["error","message","missingProperty","params","def","keyword","type","schemaType","$data","code","cxt","gen","schema","schemaCode","data","it","opts","length","useLoop","loopRequired","allErrors","allErrorsMode","exitOnErrorMode","strictRequired","props","parentSchema","properties","definedProperties","requiredKey","undefined","has","schemaPath","schemaEnv","baseId","errSchemaPath","msg","block$data","codegen_1","loopAllRequired","prop","missing","let","valid","loopUntilMissing","ok","if","else","forOf","setParams","ownProperties","assign","break","exports"],"sourceRoot":"","sources":["../../../lib/vocabularies/validation/required.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}