{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _templateObject;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\n\nvar errors_1 = require(\"../errors\");\n\nvar codegen_1 = require(\"../codegen\");\n\nvar names_1 = require(\"../names\");\n\nvar boolError = {\n  message: \"boolean schema is false\"\n};\n\nfunction topBoolOrEmptySchema(it) {\n  var gen = it.gen,\n      schema = it.schema,\n      validateName = it.validateName;\n\n  if (schema === false) {\n    falseSchemaError(it, false);\n  } else if (_typeof(schema) == \"object\" && schema.$async === true) {\n    gen.return(names_1.default.data);\n  } else {\n    gen.assign((0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \".errors\"])), validateName), null);\n    gen.return(true);\n  }\n}\n\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\n\nfunction boolOrEmptySchema(it, valid) {\n  var gen = it.gen,\n      schema = it.schema;\n\n  if (schema === false) {\n    gen.var(valid, false); // TODO var\n\n    falseSchemaError(it);\n  } else {\n    gen.var(valid, true); // TODO var\n  }\n}\n\nexports.boolOrEmptySchema = boolOrEmptySchema;\n\nfunction falseSchemaError(it, overrideAllErrors) {\n  var gen = it.gen,\n      data = it.data; // TODO maybe some other interface should be used for non-keyword validation errors...\n\n  var cxt = {\n    gen: gen,\n    keyword: \"false schema\",\n    data: data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it: it\n  };\n  (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAEA,IAAMA,SAAS,GAA2B;AACxCC,SAAO,EAAE;AAD+B,CAA1C;;AAIA,SAAgBC,oBAAhB,CAAqCC,EAArC,EAAkD;AAChD,MAAOC,GAAP,GAAoCD,EAApC,CAAOC,GAAP;AAAA,MAAYC,MAAZ,GAAoCF,EAApC,CAAYE,MAAZ;AAAA,MAAoBC,YAApB,GAAoCH,EAApC,CAAoBG,YAApB;;AACA,MAAID,MAAM,KAAK,KAAf,EAAsB;AACpBE,oBAAgB,CAACJ,EAAD,EAAK,KAAL,CAAhB;AACD,GAFD,MAEO,IAAI,QAAOE,MAAP,KAAiB,QAAjB,IAA6BA,MAAM,CAACG,MAAP,KAAkB,IAAnD,EAAyD;AAC9DJ,OAAG,CAACK,MAAJ,CAAWC,gBAAEC,IAAb;AACD,GAFM,MAEA;AACLP,OAAG,CAACQ,MAAJ,EAAW,cAAX,kFAAeN,YAAf,GAAsC,IAAtC;AACAF,OAAG,CAACK,MAAJ,CAAW,IAAX;AACD;AACF;;AAVDI;;AAYA,SAAgBC,iBAAhB,CAAkCX,EAAlC,EAAiDY,KAAjD,EAA4D;AAC1D,MAAOX,GAAP,GAAsBD,EAAtB,CAAOC,GAAP;AAAA,MAAYC,MAAZ,GAAsBF,EAAtB,CAAYE,MAAZ;;AACA,MAAIA,MAAM,KAAK,KAAf,EAAsB;AACpBD,OAAG,CAACY,GAAJ,CAAQD,KAAR,EAAe,KAAf,EADoB,CACE;;AACtBR,oBAAgB,CAACJ,EAAD,CAAhB;AACD,GAHD,MAGO;AACLC,OAAG,CAACY,GAAJ,CAAQD,KAAR,EAAe,IAAf,EADK,CACgB;AACtB;AACF;;AARDF;;AAUA,SAASN,gBAAT,CAA0BJ,EAA1B,EAAyCc,iBAAzC,EAAoE;AAClE,MAAOb,GAAP,GAAoBD,EAApB,CAAOC,GAAP;AAAA,MAAYO,IAAZ,GAAoBR,EAApB,CAAYQ,IAAZ,CADkE,CAElE;;AACA,MAAMO,GAAG,GAAoB;AAC3Bd,OAAG,EAAHA,GAD2B;AAE3Be,WAAO,EAAE,cAFkB;AAG3BR,QAAI,EAAJA,IAH2B;AAI3BN,UAAM,EAAE,KAJmB;AAK3Be,cAAU,EAAE,KALe;AAM3BC,eAAW,EAAE,KANc;AAO3BC,UAAM,EAAE,EAPmB;AAQ3BnB,MAAE,EAAFA;AAR2B,GAA7B;AAUA,4BAAYe,GAAZ,EAAiBlB,SAAjB,EAA4BuB,SAA5B,EAAuCN,iBAAvC;AACD","names":["boolError","message","topBoolOrEmptySchema","it","gen","schema","validateName","falseSchemaError","$async","return","names_1","data","assign","exports","boolOrEmptySchema","valid","var","overrideAllErrors","cxt","keyword","schemaCode","schemaValue","params","undefined"],"sourceRoot":"","sources":["../../../lib/compile/validate/boolSchema.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}