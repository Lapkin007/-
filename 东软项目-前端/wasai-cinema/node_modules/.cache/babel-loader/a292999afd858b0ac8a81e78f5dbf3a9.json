{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.object.entries.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHandlers = exports.init = void 0;\n\nvar logger_1 = require(\"./logger\");\n\nvar logger = (0, logger_1.getInstance)();\n\nfunction init(proxy, option) {\n  var handlers = getHandlers(option);\n\n  for (var _i = 0, _Object$keys = Object.keys(handlers); _i < _Object$keys.length; _i++) {\n    var eventName = _Object$keys[_i];\n    proxy.on(eventName, handlers[eventName]);\n  }\n\n  logger.debug('[HPM] Subscribed to http-proxy events:', Object.keys(handlers));\n}\n\nexports.init = init;\n\nfunction getHandlers(options) {\n  // https://github.com/nodejitsu/node-http-proxy#listening-for-proxy-events\n  var proxyEventsMap = {\n    error: 'onError',\n    proxyReq: 'onProxyReq',\n    proxyReqWs: 'onProxyReqWs',\n    proxyRes: 'onProxyRes',\n    open: 'onOpen',\n    close: 'onClose'\n  };\n  var handlers = {};\n\n  for (var _i2 = 0, _Object$entries = Object.entries(proxyEventsMap); _i2 < _Object$entries.length; _i2++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n        eventName = _Object$entries$_i[0],\n        onEventName = _Object$entries$_i[1];\n\n    // all handlers for the http-proxy events are prefixed with 'on'.\n    // loop through options and try to find these handlers\n    // and add them to the handlers object for subscription in init().\n    var fnHandler = options ? options[onEventName] : null;\n\n    if (typeof fnHandler === 'function') {\n      handlers[eventName] = fnHandler;\n    }\n  } // add default error handler in absence of error handler\n\n\n  if (typeof handlers.error !== 'function') {\n    handlers.error = defaultErrorHandler;\n  } // add default close handler in absence of close handler\n\n\n  if (typeof handlers.close !== 'function') {\n    handlers.close = logClose;\n  }\n\n  return handlers;\n}\n\nexports.getHandlers = getHandlers;\n\nfunction defaultErrorHandler(err, req, res) {\n  // Re-throw error. Not recoverable since req & res are empty.\n  if (!req && !res) {\n    throw err; // \"Error: Must provide a proper URL as target\"\n  }\n\n  var host = req.headers && req.headers.host;\n  var code = err.code;\n\n  if (res.writeHead && !res.headersSent) {\n    if (/HPE_INVALID/.test(code)) {\n      res.writeHead(502);\n    } else {\n      switch (code) {\n        case 'ECONNRESET':\n        case 'ENOTFOUND':\n        case 'ECONNREFUSED':\n        case 'ETIMEDOUT':\n          res.writeHead(504);\n          break;\n\n        default:\n          res.writeHead(500);\n      }\n    }\n  }\n\n  res.end(\"Error occurred while trying to proxy: \".concat(host).concat(req.url));\n}\n\nfunction logClose(req, socket, head) {\n  // view disconnected websocket connections\n  logger.info('[HPM] Client disconnected');\n}","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/http-proxy-middleware/dist/_handlers.js"],"names":["Object","defineProperty","exports","value","getHandlers","init","logger_1","require","logger","getInstance","proxy","option","handlers","keys","eventName","on","debug","options","proxyEventsMap","error","proxyReq","proxyReqWs","proxyRes","open","close","entries","onEventName","fnHandler","defaultErrorHandler","logClose","err","req","res","host","headers","code","writeHead","headersSent","test","end","url","socket","head","info"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHandlers = exports.init = void 0;\nconst logger_1 = require(\"./logger\");\nconst logger = (0, logger_1.getInstance)();\nfunction init(proxy, option) {\n    const handlers = getHandlers(option);\n    for (const eventName of Object.keys(handlers)) {\n        proxy.on(eventName, handlers[eventName]);\n    }\n    logger.debug('[HPM] Subscribed to http-proxy events:', Object.keys(handlers));\n}\nexports.init = init;\nfunction getHandlers(options) {\n    // https://github.com/nodejitsu/node-http-proxy#listening-for-proxy-events\n    const proxyEventsMap = {\n        error: 'onError',\n        proxyReq: 'onProxyReq',\n        proxyReqWs: 'onProxyReqWs',\n        proxyRes: 'onProxyRes',\n        open: 'onOpen',\n        close: 'onClose',\n    };\n    const handlers = {};\n    for (const [eventName, onEventName] of Object.entries(proxyEventsMap)) {\n        // all handlers for the http-proxy events are prefixed with 'on'.\n        // loop through options and try to find these handlers\n        // and add them to the handlers object for subscription in init().\n        const fnHandler = options ? options[onEventName] : null;\n        if (typeof fnHandler === 'function') {\n            handlers[eventName] = fnHandler;\n        }\n    }\n    // add default error handler in absence of error handler\n    if (typeof handlers.error !== 'function') {\n        handlers.error = defaultErrorHandler;\n    }\n    // add default close handler in absence of close handler\n    if (typeof handlers.close !== 'function') {\n        handlers.close = logClose;\n    }\n    return handlers;\n}\nexports.getHandlers = getHandlers;\nfunction defaultErrorHandler(err, req, res) {\n    // Re-throw error. Not recoverable since req & res are empty.\n    if (!req && !res) {\n        throw err; // \"Error: Must provide a proper URL as target\"\n    }\n    const host = req.headers && req.headers.host;\n    const code = err.code;\n    if (res.writeHead && !res.headersSent) {\n        if (/HPE_INVALID/.test(code)) {\n            res.writeHead(502);\n        }\n        else {\n            switch (code) {\n                case 'ECONNRESET':\n                case 'ENOTFOUND':\n                case 'ECONNREFUSED':\n                case 'ETIMEDOUT':\n                    res.writeHead(504);\n                    break;\n                default:\n                    res.writeHead(500);\n            }\n        }\n    }\n    res.end(`Error occurred while trying to proxy: ${host}${req.url}`);\n}\nfunction logClose(req, socket, head) {\n    // view disconnected websocket connections\n    logger.info('[HPM] Client disconnected');\n}\n"]},"metadata":{},"sourceType":"script"}