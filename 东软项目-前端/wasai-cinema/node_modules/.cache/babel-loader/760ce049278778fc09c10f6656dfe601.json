{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar equal_1 = require(\"../../runtime/equal\");\n\nvar error = {\n  message: \"must be equal to constant\",\n  params: function params(_ref) {\n    var schemaCode = _ref.schemaCode;\n    return (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{allowedValue: \", \"}\"])), schemaCode);\n  }\n};\nvar def = {\n  keyword: \"const\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n        data = cxt.data,\n        $data = cxt.$data,\n        schemaCode = cxt.schemaCode,\n        schema = cxt.schema;\n\n    if ($data || schema && _typeof(schema) == \"object\") {\n      cxt.fail$data((0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"!\", \"(\", \", \", \")\"])), (0, util_1.useFunc)(gen, equal_1.default), data, schemaCode));\n    } else {\n      cxt.fail((0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" !== \", \"\"])), schema, data));\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"mappings":";;;;;;;;;;;;AAEA;;AACA;;AACA;;AAIA,IAAMA,KAAK,GAA2B;AACpCC,SAAO,EAAE,2BAD2B;AAEpCC,QAAM,EAAE;AAAA,QAAEC,UAAF,QAAEA,UAAF;AAAA,YAAkB,cAAlB,2FAAqCA,UAArC;AAAA;AAF4B,CAAtC;AAKA,IAAMC,GAAG,GAA0B;AACjCC,SAAO,EAAE,OADwB;AAEjCC,OAAK,EAAE,IAF0B;AAGjCN,OAAK,EAALA,KAHiC;AAIjCO,MAJiC,gBAI5BC,GAJ4B,EAIb;AAClB,QAAOC,GAAP,GAA+CD,GAA/C,CAAOC,GAAP;AAAA,QAAYC,IAAZ,GAA+CF,GAA/C,CAAYE,IAAZ;AAAA,QAAkBJ,KAAlB,GAA+CE,GAA/C,CAAkBF,KAAlB;AAAA,QAAyBH,UAAzB,GAA+CK,GAA/C,CAAyBL,UAAzB;AAAA,QAAqCQ,MAArC,GAA+CH,GAA/C,CAAqCG,MAArC;;AACA,QAAIL,KAAK,IAAKK,MAAM,IAAI,QAAOA,MAAP,KAAiB,QAAzC,EAAoD;AAClDH,SAAG,CAACI,SAAJ,EAAc,cAAd,0FAAmB,oBAAQH,GAAR,EAAaI,eAAb,CAAnB,EAA0CH,IAA1C,EAAmDP,UAAnD;AACD,KAFD,MAEO;AACLK,SAAG,CAACM,IAAJ,EAAS,cAAT,sFAAaH,MAAb,EAA2BD,IAA3B;AACD;AACF;AAXgC,CAAnC;AAcAK,kBAAeX,GAAf","names":["error","message","params","schemaCode","def","keyword","$data","code","cxt","gen","data","schema","fail$data","equal_1","fail","exports"],"sourceRoot":"","sources":["../../../lib/vocabularies/validation/const.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}