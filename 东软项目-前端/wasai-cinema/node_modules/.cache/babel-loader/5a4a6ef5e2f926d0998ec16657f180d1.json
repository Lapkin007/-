{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33;\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\n\nvar rules_1 = require(\"../rules\");\n\nvar applicability_1 = require(\"./applicability\");\n\nvar errors_1 = require(\"../errors\");\n\nvar codegen_1 = require(\"../codegen\");\n\nvar util_1 = require(\"../util\");\n\nvar DataType;\n\n(function (DataType) {\n  DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n  DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n\nfunction getSchemaTypes(schema) {\n  var types = getJSONTypes(schema.type);\n  var hasNull = types.includes(\"null\");\n\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\");\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"');\n    }\n\n    if (schema.nullable === true) types.push(\"null\");\n  }\n\n  return types;\n}\n\nexports.getSchemaTypes = getSchemaTypes;\n\nfunction getJSONTypes(ts) {\n  var types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n  if (types.every(rules_1.isJSONType)) return types;\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\n\nexports.getJSONTypes = getJSONTypes;\n\nfunction coerceAndCheckDataType(it, types) {\n  var gen = it.gen,\n      data = it.data,\n      opts = it.opts;\n  var coerceTo = coerceToTypes(types, opts.coerceTypes);\n  var checkTypes = types.length > 0 && !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n\n  if (checkTypes) {\n    var wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n    gen.if(wrongType, function () {\n      if (coerceTo.length) coerceData(it, types, coerceTo);else reportTypeError(it);\n    });\n  }\n\n  return checkTypes;\n}\n\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nvar COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\n\nfunction coerceToTypes(types, coerceTypes) {\n  return coerceTypes ? types.filter(function (t) {\n    return COERCIBLE.has(t) || coerceTypes === \"array\" && t === \"array\";\n  }) : [];\n}\n\nfunction coerceData(it, types, coerceTo) {\n  var gen = it.gen,\n      data = it.data,\n      opts = it.opts;\n  var dataType = gen.let(\"dataType\", (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"typeof \", \"\"])), data));\n  var coerced = gen.let(\"coerced\", (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"undefined\"]))));\n\n  if (opts.coerceTypes === \"array\") {\n    gen.if((0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" == 'object' && Array.isArray(\", \") && \", \".length == 1\"])), dataType, data, data), function () {\n      return gen.assign(data, (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \"[0]\"])), data)).assign(dataType, (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"typeof \", \"\"])), data)).if(checkDataTypes(types, data, opts.strictNumbers), function () {\n        return gen.assign(coerced, data);\n      });\n    });\n  }\n\n  gen.if((0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\", \" !== undefined\"])), coerced));\n\n  var _iterator = _createForOfIteratorHelper(coerceTo),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var t = _step.value;\n\n      if (COERCIBLE.has(t) || t === \"array\" && opts.coerceTypes === \"array\") {\n        coerceSpecificType(t);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  gen.else();\n  reportTypeError(it);\n  gen.endIf();\n  gen.if((0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \" !== undefined\"])), coerced), function () {\n    gen.assign(data, coerced);\n    assignParentData(it, coerced);\n  });\n\n  function coerceSpecificType(t) {\n    switch (t) {\n      case \"string\":\n        gen.elseIf((0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \" == \\\"number\\\" || \", \" == \\\"boolean\\\"\"])), dataType, dataType)).assign(coerced, (0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\\"\\\" + \", \"\"])), data)).elseIf((0, codegen_1._)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\", \" === null\"])), data)).assign(coerced, (0, codegen_1._)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\\"\\\"\"]))));\n        return;\n\n      case \"number\":\n        gen.elseIf((0, codegen_1._)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\", \" == \\\"boolean\\\" || \", \" === null\\n              || (\", \" == \\\"string\\\" && \", \" && \", \" == +\", \")\"])), dataType, data, dataType, data, data, data)).assign(coerced, (0, codegen_1._)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"+\", \"\"])), data));\n        return;\n\n      case \"integer\":\n        gen.elseIf((0, codegen_1._)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\", \" === \\\"boolean\\\" || \", \" === null\\n              || (\", \" === \\\"string\\\" && \", \" && \", \" == +\", \" && !(\", \" % 1))\"])), dataType, data, dataType, data, data, data, data)).assign(coerced, (0, codegen_1._)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"+\", \"\"])), data));\n        return;\n\n      case \"boolean\":\n        gen.elseIf((0, codegen_1._)(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\", \" === \\\"false\\\" || \", \" === 0 || \", \" === null\"])), data, data, data)).assign(coerced, false).elseIf((0, codegen_1._)(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\", \" === \\\"true\\\" || \", \" === 1\"])), data, data)).assign(coerced, true);\n        return;\n\n      case \"null\":\n        gen.elseIf((0, codegen_1._)(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\", \" === \\\"\\\" || \", \" === 0 || \", \" === false\"])), data, data, data));\n        gen.assign(coerced, null);\n        return;\n\n      case \"array\":\n        gen.elseIf((0, codegen_1._)(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\", \" === \\\"string\\\" || \", \" === \\\"number\\\"\\n              || \", \" === \\\"boolean\\\" || \", \" === null\"])), dataType, dataType, dataType, data)).assign(coerced, (0, codegen_1._)(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"[\", \"]\"])), data));\n    }\n  }\n}\n\nfunction assignParentData(_ref, expr) {\n  var gen = _ref.gen,\n      parentData = _ref.parentData,\n      parentDataProperty = _ref.parentDataProperty;\n  // TODO use gen.property\n  gen.if((0, codegen_1._)(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\", \" !== undefined\"])), parentData), function () {\n    return gen.assign((0, codegen_1._)(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), parentData, parentDataProperty), expr);\n  });\n}\n\nfunction checkDataType(dataType, data, strictNums) {\n  var correct = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DataType.Correct;\n  var EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n  var cond;\n\n  switch (dataType) {\n    case \"null\":\n      return (0, codegen_1._)(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral([\"\", \" \", \" null\"])), data, EQ);\n\n    case \"array\":\n      cond = (0, codegen_1._)(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral([\"Array.isArray(\", \")\"])), data);\n      break;\n\n    case \"object\":\n      cond = (0, codegen_1._)(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([\"\", \" && typeof \", \" == \\\"object\\\" && !Array.isArray(\", \")\"])), data, data, data);\n      break;\n\n    case \"integer\":\n      cond = numCond((0, codegen_1._)(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral([\"!(\", \" % 1) && !isNaN(\", \")\"])), data, data));\n      break;\n\n    case \"number\":\n      cond = numCond();\n      break;\n\n    default:\n      return (0, codegen_1._)(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral([\"typeof \", \" \", \" \", \"\"])), data, EQ, dataType);\n  }\n\n  return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n\n  function numCond() {\n    var _cond = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : codegen_1.nil;\n\n    return (0, codegen_1.and)((0, codegen_1._)(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral([\"typeof \", \" == \\\"number\\\"\"])), data), _cond, strictNums ? (0, codegen_1._)(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral([\"isFinite(\", \")\"])), data) : codegen_1.nil);\n  }\n}\n\nexports.checkDataType = checkDataType;\n\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct);\n  }\n\n  var cond;\n  var types = (0, util_1.toHash)(dataTypes);\n\n  if (types.array && types.object) {\n    var notObj = (0, codegen_1._)(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral([\"typeof \", \" != \\\"object\\\"\"])), data);\n    cond = types.null ? notObj : (0, codegen_1._)(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral([\"!\", \" || \", \"\"])), data, notObj);\n    delete types.null;\n    delete types.array;\n    delete types.object;\n  } else {\n    cond = codegen_1.nil;\n  }\n\n  if (types.number) delete types.integer;\n\n  for (var t in types) {\n    cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n  }\n\n  return cond;\n}\n\nexports.checkDataTypes = checkDataTypes;\nvar typeError = {\n  message: function message(_ref2) {\n    var schema = _ref2.schema;\n    return \"must be \".concat(schema);\n  },\n  params: function params(_ref3) {\n    var schema = _ref3.schema,\n        schemaValue = _ref3.schemaValue;\n    return typeof schema == \"string\" ? (0, codegen_1._)(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral([\"{type: \", \"}\"])), schema) : (0, codegen_1._)(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral([\"{type: \", \"}\"])), schemaValue);\n  }\n};\n\nfunction reportTypeError(it) {\n  var cxt = getTypeErrorContext(it);\n  (0, errors_1.reportError)(cxt, typeError);\n}\n\nexports.reportTypeError = reportTypeError;\n\nfunction getTypeErrorContext(it) {\n  var gen = it.gen,\n      data = it.data,\n      schema = it.schema;\n  var schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n  return {\n    gen: gen,\n    keyword: \"type\",\n    data: data,\n    schema: schema.type,\n    schemaCode: schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it: it\n  };\n}","map":{"version":3,"mappings":"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","names":["DataType","exports","getSchemaTypes","schema","types","getJSONTypes","type","hasNull","includes","nullable","Error","length","undefined","push","ts","Array","isArray","every","rules_1","join","coerceAndCheckDataType","it","gen","data","opts","coerceTo","coerceToTypes","coerceTypes","checkTypes","wrongType","checkDataTypes","strictNumbers","Wrong","if","coerceData","reportTypeError","COERCIBLE","Set","filter","t","has","dataType","let","coerced","assign","coerceSpecificType","else","endIf","assignParentData","elseIf","expr","parentData","parentDataProperty","checkDataType","strictNums","correct","Correct","EQ","codegen_1","NEQ","cond","numCond","_cond","dataTypes","array","object","notObj","null","number","integer","typeError","message","params","schemaValue","cxt","getTypeErrorContext","schemaCode","keyword","parentSchema"],"sourceRoot":"","sources":["../../../lib/compile/validate/dataType.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}