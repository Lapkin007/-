{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.number.is-integer.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nvar zlib = require('zlib');\n\nvar bufferUtil = require('./buffer-util');\n\nvar Limiter = require('./limiter');\n\nvar _require = require('./constants'),\n    kStatusCode = _require.kStatusCode;\n\nvar TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nvar kPerMessageDeflate = Symbol('permessage-deflate');\nvar kTotalLength = Symbol('total-length');\nvar kCallback = Symbol('callback');\nvar kBuffers = Symbol('buffers');\nvar kError = Symbol('error'); //\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\n\nvar zlibLimiter;\n/**\n * permessage-deflate implementation.\n */\n\nvar PerMessageDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  function PerMessageDeflate(options, isServer, maxPayload) {\n    _classCallCheck(this, PerMessageDeflate);\n\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n    this.params = null;\n\n    if (!zlibLimiter) {\n      var concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n  /**\n   * @type {String}\n   */\n\n\n  _createClass(PerMessageDeflate, [{\n    key: \"offer\",\n    value:\n    /**\n     * Create an extension negotiation offer.\n     *\n     * @return {Object} Extension parameters\n     * @public\n     */\n    function offer() {\n      var params = {};\n\n      if (this._options.serverNoContextTakeover) {\n        params.server_no_context_takeover = true;\n      }\n\n      if (this._options.clientNoContextTakeover) {\n        params.client_no_context_takeover = true;\n      }\n\n      if (this._options.serverMaxWindowBits) {\n        params.server_max_window_bits = this._options.serverMaxWindowBits;\n      }\n\n      if (this._options.clientMaxWindowBits) {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      } else if (this._options.clientMaxWindowBits == null) {\n        params.client_max_window_bits = true;\n      }\n\n      return params;\n    }\n    /**\n     * Accept an extension negotiation offer/response.\n     *\n     * @param {Array} configurations The extension negotiation offers/reponse\n     * @return {Object} Accepted configuration\n     * @public\n     */\n\n  }, {\n    key: \"accept\",\n    value: function accept(configurations) {\n      configurations = this.normalizeParams(configurations);\n      this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);\n      return this.params;\n    }\n    /**\n     * Releases all resources used by the extension.\n     *\n     * @public\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      if (this._inflate) {\n        this._inflate.close();\n\n        this._inflate = null;\n      }\n\n      if (this._deflate) {\n        var callback = this._deflate[kCallback];\n\n        this._deflate.close();\n\n        this._deflate = null;\n\n        if (callback) {\n          callback(new Error('The deflate stream was closed while data was being processed'));\n        }\n      }\n    }\n    /**\n     *  Accept an extension negotiation offer.\n     *\n     * @param {Array} offers The extension negotiation offers\n     * @return {Object} Accepted configuration\n     * @private\n     */\n\n  }, {\n    key: \"acceptAsServer\",\n    value: function acceptAsServer(offers) {\n      var opts = this._options;\n      var accepted = offers.find(function (params) {\n        if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === 'number' && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {\n          return false;\n        }\n\n        return true;\n      });\n\n      if (!accepted) {\n        throw new Error('None of the extension offers can be accepted');\n      }\n\n      if (opts.serverNoContextTakeover) {\n        accepted.server_no_context_takeover = true;\n      }\n\n      if (opts.clientNoContextTakeover) {\n        accepted.client_no_context_takeover = true;\n      }\n\n      if (typeof opts.serverMaxWindowBits === 'number') {\n        accepted.server_max_window_bits = opts.serverMaxWindowBits;\n      }\n\n      if (typeof opts.clientMaxWindowBits === 'number') {\n        accepted.client_max_window_bits = opts.clientMaxWindowBits;\n      } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {\n        delete accepted.client_max_window_bits;\n      }\n\n      return accepted;\n    }\n    /**\n     * Accept the extension negotiation response.\n     *\n     * @param {Array} response The extension negotiation response\n     * @return {Object} Accepted configuration\n     * @private\n     */\n\n  }, {\n    key: \"acceptAsClient\",\n    value: function acceptAsClient(response) {\n      var params = response[0];\n\n      if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n        throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n      }\n\n      if (!params.client_max_window_bits) {\n        if (typeof this._options.clientMaxWindowBits === 'number') {\n          params.client_max_window_bits = this._options.clientMaxWindowBits;\n        }\n      } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === 'number' && params.client_max_window_bits > this._options.clientMaxWindowBits) {\n        throw new Error('Unexpected or invalid parameter \"client_max_window_bits\"');\n      }\n\n      return params;\n    }\n    /**\n     * Normalize parameters.\n     *\n     * @param {Array} configurations The extension negotiation offers/reponse\n     * @return {Array} The offers/response with normalized parameters\n     * @private\n     */\n\n  }, {\n    key: \"normalizeParams\",\n    value: function normalizeParams(configurations) {\n      var _this = this;\n\n      configurations.forEach(function (params) {\n        Object.keys(params).forEach(function (key) {\n          var value = params[key];\n\n          if (value.length > 1) {\n            throw new Error(\"Parameter \\\"\".concat(key, \"\\\" must have only a single value\"));\n          }\n\n          value = value[0];\n\n          if (key === 'client_max_window_bits') {\n            if (value !== true) {\n              var num = +value;\n\n              if (!Number.isInteger(num) || num < 8 || num > 15) {\n                throw new TypeError(\"Invalid value for parameter \\\"\".concat(key, \"\\\": \").concat(value));\n              }\n\n              value = num;\n            } else if (!_this._isServer) {\n              throw new TypeError(\"Invalid value for parameter \\\"\".concat(key, \"\\\": \").concat(value));\n            }\n          } else if (key === 'server_max_window_bits') {\n            var _num = +value;\n\n            if (!Number.isInteger(_num) || _num < 8 || _num > 15) {\n              throw new TypeError(\"Invalid value for parameter \\\"\".concat(key, \"\\\": \").concat(value));\n            }\n\n            value = _num;\n          } else if (key === 'client_no_context_takeover' || key === 'server_no_context_takeover') {\n            if (value !== true) {\n              throw new TypeError(\"Invalid value for parameter \\\"\".concat(key, \"\\\": \").concat(value));\n            }\n          } else {\n            throw new Error(\"Unknown parameter \\\"\".concat(key, \"\\\"\"));\n          }\n\n          params[key] = value;\n        });\n      });\n      return configurations;\n    }\n    /**\n     * Decompress data. Concurrency limited.\n     *\n     * @param {Buffer} data Compressed data\n     * @param {Boolean} fin Specifies whether or not this is the last fragment\n     * @param {Function} callback Callback\n     * @public\n     */\n\n  }, {\n    key: \"decompress\",\n    value: function decompress(data, fin, callback) {\n      var _this2 = this;\n\n      zlibLimiter.add(function (done) {\n        _this2._decompress(data, fin, function (err, result) {\n          done();\n          callback(err, result);\n        });\n      });\n    }\n    /**\n     * Compress data. Concurrency limited.\n     *\n     * @param {(Buffer|String)} data Data to compress\n     * @param {Boolean} fin Specifies whether or not this is the last fragment\n     * @param {Function} callback Callback\n     * @public\n     */\n\n  }, {\n    key: \"compress\",\n    value: function compress(data, fin, callback) {\n      var _this3 = this;\n\n      zlibLimiter.add(function (done) {\n        _this3._compress(data, fin, function (err, result) {\n          done();\n          callback(err, result);\n        });\n      });\n    }\n    /**\n     * Decompress data.\n     *\n     * @param {Buffer} data Compressed data\n     * @param {Boolean} fin Specifies whether or not this is the last fragment\n     * @param {Function} callback Callback\n     * @private\n     */\n\n  }, {\n    key: \"_decompress\",\n    value: function _decompress(data, fin, callback) {\n      var _this4 = this;\n\n      var endpoint = this._isServer ? 'client' : 'server';\n\n      if (!this._inflate) {\n        var key = \"\".concat(endpoint, \"_max_window_bits\");\n        var windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n        this._inflate = zlib.createInflateRaw(_objectSpread(_objectSpread({}, this._options.zlibInflateOptions), {}, {\n          windowBits: windowBits\n        }));\n        this._inflate[kPerMessageDeflate] = this;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        this._inflate.on('error', inflateOnError);\n\n        this._inflate.on('data', inflateOnData);\n      }\n\n      this._inflate[kCallback] = callback;\n\n      this._inflate.write(data);\n\n      if (fin) this._inflate.write(TRAILER);\n\n      this._inflate.flush(function () {\n        var err = _this4._inflate[kError];\n\n        if (err) {\n          _this4._inflate.close();\n\n          _this4._inflate = null;\n          callback(err);\n          return;\n        }\n\n        var data = bufferUtil.concat(_this4._inflate[kBuffers], _this4._inflate[kTotalLength]);\n\n        if (_this4._inflate._readableState.endEmitted) {\n          _this4._inflate.close();\n\n          _this4._inflate = null;\n        } else {\n          _this4._inflate[kTotalLength] = 0;\n          _this4._inflate[kBuffers] = [];\n\n          if (fin && _this4.params[\"\".concat(endpoint, \"_no_context_takeover\")]) {\n            _this4._inflate.reset();\n          }\n        }\n\n        callback(null, data);\n      });\n    }\n    /**\n     * Compress data.\n     *\n     * @param {(Buffer|String)} data Data to compress\n     * @param {Boolean} fin Specifies whether or not this is the last fragment\n     * @param {Function} callback Callback\n     * @private\n     */\n\n  }, {\n    key: \"_compress\",\n    value: function _compress(data, fin, callback) {\n      var _this5 = this;\n\n      var endpoint = this._isServer ? 'server' : 'client';\n\n      if (!this._deflate) {\n        var key = \"\".concat(endpoint, \"_max_window_bits\");\n        var windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n        this._deflate = zlib.createDeflateRaw(_objectSpread(_objectSpread({}, this._options.zlibDeflateOptions), {}, {\n          windowBits: windowBits\n        }));\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n\n        this._deflate.on('data', deflateOnData);\n      }\n\n      this._deflate[kCallback] = callback;\n\n      this._deflate.write(data);\n\n      this._deflate.flush(zlib.Z_SYNC_FLUSH, function () {\n        if (!_this5._deflate) {\n          //\n          // The deflate stream was closed while data was being processed.\n          //\n          return;\n        }\n\n        var data = bufferUtil.concat(_this5._deflate[kBuffers], _this5._deflate[kTotalLength]);\n        if (fin) data = data.slice(0, data.length - 4); //\n        // Ensure that the callback will not be called again in\n        // `PerMessageDeflate#cleanup()`.\n        //\n\n        _this5._deflate[kCallback] = null;\n        _this5._deflate[kTotalLength] = 0;\n        _this5._deflate[kBuffers] = [];\n\n        if (fin && _this5.params[\"\".concat(endpoint, \"_no_context_takeover\")]) {\n          _this5._deflate.reset();\n        }\n\n        callback(null, data);\n      });\n    }\n  }], [{\n    key: \"extensionName\",\n    get: function get() {\n      return 'permessage-deflate';\n    }\n  }]);\n\n  return PerMessageDeflate;\n}();\n\nmodule.exports = PerMessageDeflate;\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\n\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\n\n\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\n\n\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/webpack-dev-server/node_modules/ws/lib/permessage-deflate.js"],"names":["zlib","require","bufferUtil","Limiter","kStatusCode","TRAILER","Buffer","from","kPerMessageDeflate","Symbol","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","PerMessageDeflate","options","isServer","maxPayload","_maxPayload","_options","_threshold","threshold","undefined","_isServer","_deflate","_inflate","params","concurrency","concurrencyLimit","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","close","callback","Error","offers","opts","accepted","find","response","forEach","Object","keys","key","value","length","num","Number","isInteger","TypeError","data","fin","add","done","_decompress","err","result","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","inflateOnError","inflateOnData","write","flush","concat","_readableState","endEmitted","reset","createDeflateRaw","zlibDeflateOptions","deflateOnData","Z_SYNC_FLUSH","slice","module","exports","chunk","push","RangeError","code","removeListener"],"mappings":"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","sourcesContent":["'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n"]},"metadata":{},"sourceType":"script"}