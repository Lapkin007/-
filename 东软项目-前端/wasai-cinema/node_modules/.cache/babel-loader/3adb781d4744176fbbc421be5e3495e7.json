{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nrequire(\"core-js/modules/es.string.trim-start.js\");\n\nrequire(\"core-js/modules/es.string.trim-end.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nvar transform = {\n  trimStart: function trimStart(s) {\n    return s.trimStart();\n  },\n  trimEnd: function trimEnd(s) {\n    return s.trimEnd();\n  },\n  trimLeft: function trimLeft(s) {\n    return s.trimStart();\n  },\n  trimRight: function trimRight(s) {\n    return s.trimEnd();\n  },\n  trim: function trim(s) {\n    return s.trim();\n  },\n  toLowerCase: function toLowerCase(s) {\n    return s.toLowerCase();\n  },\n  toUpperCase: function toUpperCase(s) {\n    return s.toUpperCase();\n  },\n  toEnumCase: function toEnumCase(s, cfg) {\n    return (cfg === null || cfg === void 0 ? void 0 : cfg.hash[configKey(s)]) || s;\n  }\n};\nvar getDef = Object.assign(_getDef, {\n  transform: transform\n});\n\nfunction _getDef() {\n  return {\n    keyword: \"transform\",\n    schemaType: \"array\",\n    before: \"enum\",\n    code: function code(cxt) {\n      var gen = cxt.gen,\n          data = cxt.data,\n          schema = cxt.schema,\n          parentSchema = cxt.parentSchema,\n          it = cxt.it;\n      var parentData = it.parentData,\n          parentDataProperty = it.parentDataProperty;\n      var tNames = schema;\n      if (!tNames.length) return;\n      var cfg;\n\n      if (tNames.includes(\"toEnumCase\")) {\n        var config = getEnumCaseCfg(parentSchema);\n        cfg = gen.scopeValue(\"obj\", {\n          ref: config,\n          code: (0, codegen_1.stringify)(config)\n        });\n      }\n\n      gen.if((0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"typeof \", \" == \\\"string\\\" && \", \" !== undefined\"])), data, parentData), function () {\n        gen.assign(data, transformExpr(tNames.slice()));\n        gen.assign((0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), parentData, parentDataProperty), data);\n      });\n\n      function transformExpr(ts) {\n        if (!ts.length) return data;\n        var t = ts.pop();\n        if (!(t in transform)) throw new Error(\"transform: unknown transformation \".concat(t));\n        var func = gen.scopeValue(\"func\", {\n          ref: transform[t],\n          code: (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"require(\\\"ajv-keywords/dist/definitions/transform\\\").transform\", \"\"])), (0, codegen_1.getProperty)(t))\n        });\n        var arg = transformExpr(ts);\n        return cfg && t === \"toEnumCase\" ? (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \"(\", \", \", \")\"])), func, arg, cfg) : (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \"(\", \")\"])), func, arg);\n      }\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {\n        type: \"string\",\n        enum: Object.keys(transform)\n      }\n    }\n  };\n}\n\nfunction getEnumCaseCfg(parentSchema) {\n  // build hash table to enum values\n  var cfg = {\n    hash: {}\n  }; // requires `enum` in the same schema as transform\n\n  if (!parentSchema.enum) throw new Error('transform: \"toEnumCase\" requires \"enum\"');\n\n  var _iterator = _createForOfIteratorHelper(parentSchema.enum),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var v = _step.value;\n      if (typeof v !== \"string\") continue;\n      var k = configKey(v); // requires all `enum` values have unique keys\n\n      if (cfg.hash[k]) {\n        throw new Error('transform: \"toEnumCase\" requires all lowercased \"enum\" values to be unique');\n      }\n\n      cfg.hash[k] = v;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return cfg;\n}\n\nfunction configKey(s) {\n  return s.toLowerCase();\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"mappings":"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","names":["transform","trimStart","s","trimEnd","trimLeft","trimRight","trim","toLowerCase","toUpperCase","toEnumCase","cfg","hash","configKey","getDef","Object","assign","_getDef","keyword","schemaType","before","code","cxt","gen","data","schema","parentSchema","it","parentData","parentDataProperty","tNames","length","includes","config","getEnumCaseCfg","scopeValue","ref","if","transformExpr","slice","ts","t","pop","Error","func","arg","metaSchema","type","items","enum","keys","v","k","exports","module"],"sourceRoot":"","sources":["../../src/definitions/transform.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}