{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getRangeDef(keyword) {\n  return function () {\n    return {\n      keyword: keyword,\n      type: \"number\",\n      schemaType: \"array\",\n      macro: function macro(_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            min = _ref2[0],\n            max = _ref2[1];\n\n        validateRangeSchema(min, max);\n        return keyword === \"range\" ? {\n          minimum: min,\n          maximum: max\n        } : {\n          exclusiveMinimum: min,\n          exclusiveMaximum: max\n        };\n      },\n      metaSchema: {\n        type: \"array\",\n        minItems: 2,\n        maxItems: 2,\n        items: {\n          type: \"number\"\n        }\n      }\n    };\n  };\n\n  function validateRangeSchema(min, max) {\n    if (min > max || keyword === \"exclusiveRange\" && min === max) {\n      throw new Error(\"There are no numbers in range\");\n    }\n  }\n}\n\nexports.default = getRangeDef;","map":{"version":3,"mappings":";;;;;;;;;;AAKA,SAAwBA,WAAxB,CAAoCC,OAApC,EAAqD;AACnD,SAAO;AAAA,WAAO;AACZA,aAAO,EAAPA,OADY;AAEZC,UAAI,EAAE,QAFM;AAGZC,gBAAU,EAAE,OAHA;AAIZC,WAAK,EAAE,qBAAsC;AAAA;AAAA,YAA3BC,GAA2B;AAAA,YAAtBC,GAAsB;;AAC3CC,2BAAmB,CAACF,GAAD,EAAMC,GAAN,CAAnB;AACA,eAAOL,OAAO,KAAK,OAAZ,GACH;AAACO,iBAAO,EAAEH,GAAV;AAAeI,iBAAO,EAAEH;AAAxB,SADG,GAEH;AAACI,0BAAgB,EAAEL,GAAnB;AAAwBM,0BAAgB,EAAEL;AAA1C,SAFJ;AAGD,OATW;AAUZM,gBAAU,EAAE;AACVV,YAAI,EAAE,OADI;AAEVW,gBAAQ,EAAE,CAFA;AAGVC,gBAAQ,EAAE,CAHA;AAIVC,aAAK,EAAE;AAACb,cAAI,EAAE;AAAP;AAJG;AAVA,KAAP;AAAA,GAAP;;AAkBA,WAASK,mBAAT,CAA6BF,GAA7B,EAA0CC,GAA1C,EAAqD;AACnD,QAAID,GAAG,GAAGC,GAAN,IAAcL,OAAO,KAAK,gBAAZ,IAAgCI,GAAG,KAAKC,GAA1D,EAAgE;AAC9D,YAAM,IAAIU,KAAJ,CAAU,+BAAV,CAAN;AACD;AACF;AACF;;AAxBDC","names":["getRangeDef","keyword","type","schemaType","macro","min","max","validateRangeSchema","minimum","maximum","exclusiveMinimum","exclusiveMaximum","metaSchema","minItems","maxItems","items","Error","exports"],"sourceRoot":"","sources":["../../src/definitions/_range.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}