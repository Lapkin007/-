{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\n\nfunction setupWriteToDisk(context) {\n  /**\n   * @type {Compiler[]}\n   */\n  var compilers =\n  /** @type {MultiCompiler} */\n  context.compiler.compilers || [context.compiler];\n\n  var _iterator = _createForOfIteratorHelper(compilers),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var compiler = _step.value;\n      compiler.hooks.emit.tap(\"DevMiddleware\",\n      /**\n       * @param {Compilation} compilation\n       */\n      function (compilation) {\n        // @ts-ignore\n        if (compiler.hasWebpackDevMiddlewareAssetEmittedCallback) {\n          return;\n        }\n\n        compiler.hooks.assetEmitted.tapAsync(\"DevMiddleware\", function (file, info, callback) {\n          /**\n           * @type {string}\n           */\n          var targetPath;\n          /**\n           * @type {Buffer}\n           */\n\n          var content; // webpack@5\n\n          if (info.compilation) {\n            targetPath = info.targetPath;\n            content = info.content;\n          } else {\n            var targetFile = file;\n            var queryStringIdx = targetFile.indexOf(\"?\");\n\n            if (queryStringIdx >= 0) {\n              targetFile = targetFile.substr(0, queryStringIdx);\n            }\n\n            var outputPath = compiler.outputPath;\n            outputPath = compilation.getPath(outputPath, {}); // @ts-ignore\n\n            content = info;\n            targetPath = path.join(outputPath, targetFile);\n          }\n\n          var filter = context.options.writeToDisk;\n          var allowWrite = filter && typeof filter === \"function\" ? filter(targetPath) : true;\n\n          if (!allowWrite) {\n            return callback();\n          }\n\n          var dir = path.dirname(targetPath);\n          var name = compiler.options.name ? \"Child \\\"\".concat(compiler.options.name, \"\\\": \") : \"\";\n          return fs.mkdir(dir, {\n            recursive: true\n          }, function (mkdirError) {\n            if (mkdirError) {\n              context.logger.error(\"\".concat(name, \"Unable to write \\\"\").concat(dir, \"\\\" directory to disk:\\n\").concat(mkdirError));\n              return callback(mkdirError);\n            }\n\n            return fs.writeFile(targetPath, content, function (writeFileError) {\n              if (writeFileError) {\n                context.logger.error(\"\".concat(name, \"Unable to write \\\"\").concat(targetPath, \"\\\" asset to disk:\\n\").concat(writeFileError));\n                return callback(writeFileError);\n              }\n\n              context.logger.log(\"\".concat(name, \"Asset written to disk: \\\"\").concat(targetPath, \"\\\"\"));\n              return callback();\n            });\n          });\n        }); // @ts-ignore\n\n        compiler.hasWebpackDevMiddlewareAssetEmittedCallback = true;\n      });\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nmodule.exports = setupWriteToDisk;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/webpack-dev-middleware/dist/utils/setupWriteToDisk.js"],"names":["fs","require","path","setupWriteToDisk","context","compilers","compiler","hooks","emit","tap","compilation","hasWebpackDevMiddlewareAssetEmittedCallback","assetEmitted","tapAsync","file","info","callback","targetPath","content","targetFile","queryStringIdx","indexOf","substr","outputPath","getPath","join","filter","options","writeToDisk","allowWrite","dir","dirname","name","mkdir","recursive","mkdirError","logger","error","writeFile","writeFileError","log","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\n\nfunction setupWriteToDisk(context) {\n  /**\n   * @type {Compiler[]}\n   */\n  const compilers =\n  /** @type {MultiCompiler} */\n  context.compiler.compilers || [context.compiler];\n\n  for (const compiler of compilers) {\n    compiler.hooks.emit.tap(\"DevMiddleware\",\n    /**\n     * @param {Compilation} compilation\n     */\n    compilation => {\n      // @ts-ignore\n      if (compiler.hasWebpackDevMiddlewareAssetEmittedCallback) {\n        return;\n      }\n\n      compiler.hooks.assetEmitted.tapAsync(\"DevMiddleware\", (file, info, callback) => {\n        /**\n         * @type {string}\n         */\n        let targetPath;\n        /**\n         * @type {Buffer}\n         */\n\n        let content; // webpack@5\n\n        if (info.compilation) {\n          ({\n            targetPath,\n            content\n          } = info);\n        } else {\n          let targetFile = file;\n          const queryStringIdx = targetFile.indexOf(\"?\");\n\n          if (queryStringIdx >= 0) {\n            targetFile = targetFile.substr(0, queryStringIdx);\n          }\n\n          let {\n            outputPath\n          } = compiler;\n          outputPath = compilation.getPath(outputPath, {}); // @ts-ignore\n\n          content = info;\n          targetPath = path.join(outputPath, targetFile);\n        }\n\n        const {\n          writeToDisk: filter\n        } = context.options;\n        const allowWrite = filter && typeof filter === \"function\" ? filter(targetPath) : true;\n\n        if (!allowWrite) {\n          return callback();\n        }\n\n        const dir = path.dirname(targetPath);\n        const name = compiler.options.name ? `Child \"${compiler.options.name}\": ` : \"\";\n        return fs.mkdir(dir, {\n          recursive: true\n        }, mkdirError => {\n          if (mkdirError) {\n            context.logger.error(`${name}Unable to write \"${dir}\" directory to disk:\\n${mkdirError}`);\n            return callback(mkdirError);\n          }\n\n          return fs.writeFile(targetPath, content, writeFileError => {\n            if (writeFileError) {\n              context.logger.error(`${name}Unable to write \"${targetPath}\" asset to disk:\\n${writeFileError}`);\n              return callback(writeFileError);\n            }\n\n            context.logger.log(`${name}Asset written to disk: \"${targetPath}\"`);\n            return callback();\n          });\n        });\n      }); // @ts-ignore\n\n      compiler.hasWebpackDevMiddlewareAssetEmittedCallback = true;\n    });\n  }\n}\n\nmodule.exports = setupWriteToDisk;"]},"metadata":{},"sourceType":"script"}