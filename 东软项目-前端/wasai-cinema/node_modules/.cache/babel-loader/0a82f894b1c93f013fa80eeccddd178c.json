{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.string.code-point-at.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.typed-array.uint8-array.js\");\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.copy-within.js\");\n\nrequire(\"core-js/modules/es.typed-array.every.js\");\n\nrequire(\"core-js/modules/es.typed-array.fill.js\");\n\nrequire(\"core-js/modules/es.typed-array.filter.js\");\n\nrequire(\"core-js/modules/es.typed-array.find.js\");\n\nrequire(\"core-js/modules/es.typed-array.find-index.js\");\n\nrequire(\"core-js/modules/es.typed-array.for-each.js\");\n\nrequire(\"core-js/modules/es.typed-array.includes.js\");\n\nrequire(\"core-js/modules/es.typed-array.index-of.js\");\n\nrequire(\"core-js/modules/es.typed-array.iterator.js\");\n\nrequire(\"core-js/modules/es.typed-array.join.js\");\n\nrequire(\"core-js/modules/es.typed-array.last-index-of.js\");\n\nrequire(\"core-js/modules/es.typed-array.map.js\");\n\nrequire(\"core-js/modules/es.typed-array.reduce.js\");\n\nrequire(\"core-js/modules/es.typed-array.reduce-right.js\");\n\nrequire(\"core-js/modules/es.typed-array.reverse.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/es.typed-array.slice.js\");\n\nrequire(\"core-js/modules/es.typed-array.some.js\");\n\nrequire(\"core-js/modules/es.typed-array.sort.js\");\n\nrequire(\"core-js/modules/es.typed-array.subarray.js\");\n\nrequire(\"core-js/modules/es.typed-array.to-locale-string.js\");\n\nrequire(\"core-js/modules/es.typed-array.to-string.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/web.url.to-json.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.string.link.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.sort.js\");\n\nrequire(\"core-js/modules/es.global-this.js\");\n\nrequire(\"core-js/modules/es.regexp.flags.js\");\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FSWatcher = exports.StatWatcher = exports.Volume = exports.toUnixTimestamp = exports.bufferToEncoding = exports.dataToBuffer = exports.dataToStr = exports.pathToSteps = exports.filenameToSteps = exports.pathToFilename = exports.flagsToNumber = exports.FLAGS = void 0;\n\nvar pathModule = require(\"path\");\n\nvar node_1 = require(\"./node\");\n\nvar Stats_1 = require(\"./Stats\");\n\nvar Dirent_1 = require(\"./Dirent\");\n\nvar buffer_1 = require(\"./internal/buffer\");\n\nvar setImmediate_1 = require(\"./setImmediate\");\n\nvar process_1 = require(\"./process\");\n\nvar setTimeoutUnref_1 = require(\"./setTimeoutUnref\");\n\nvar stream_1 = require(\"stream\");\n\nvar constants_1 = require(\"./constants\");\n\nvar events_1 = require(\"events\");\n\nvar encoding_1 = require(\"./encoding\");\n\nvar errors = require(\"./internal/errors\");\n\nvar util = require(\"util\");\n\nvar promises_1 = require(\"./promises\");\n\nvar resolveCrossPlatform = pathModule.resolve;\nvar O_RDONLY = constants_1.constants.O_RDONLY,\n    O_WRONLY = constants_1.constants.O_WRONLY,\n    O_RDWR = constants_1.constants.O_RDWR,\n    O_CREAT = constants_1.constants.O_CREAT,\n    O_EXCL = constants_1.constants.O_EXCL,\n    O_TRUNC = constants_1.constants.O_TRUNC,\n    O_APPEND = constants_1.constants.O_APPEND,\n    O_SYNC = constants_1.constants.O_SYNC,\n    O_DIRECTORY = constants_1.constants.O_DIRECTORY,\n    F_OK = constants_1.constants.F_OK,\n    COPYFILE_EXCL = constants_1.constants.COPYFILE_EXCL,\n    COPYFILE_FICLONE_FORCE = constants_1.constants.COPYFILE_FICLONE_FORCE;\n\nvar _a = pathModule.posix ? pathModule.posix : pathModule,\n    sep = _a.sep,\n    relative = _a.relative,\n    join = _a.join,\n    dirname = _a.dirname;\n\nvar isWin = process_1.default.platform === 'win32';\nvar kMinPoolSpace = 128; // const kMaxLength = require('buffer').kMaxLength;\n// ---------------------------------------- Error messages\n// TODO: Use `internal/errors.js` in the future.\n\nvar ERRSTR = {\n  PATH_STR: 'path must be a string or Buffer',\n  // FD:             'file descriptor must be a unsigned 32-bit integer',\n  FD: 'fd must be a file descriptor',\n  MODE_INT: 'mode must be an int',\n  CB: 'callback must be a function',\n  UID: 'uid must be an unsigned int',\n  GID: 'gid must be an unsigned int',\n  LEN: 'len must be an integer',\n  ATIME: 'atime must be an integer',\n  MTIME: 'mtime must be an integer',\n  PREFIX: 'filename prefix is required',\n  BUFFER: 'buffer must be an instance of Buffer or StaticBuffer',\n  OFFSET: 'offset must be an integer',\n  LENGTH: 'length must be an integer',\n  POSITION: 'position must be an integer'\n};\n\nvar ERRSTR_OPTS = function ERRSTR_OPTS(tipeof) {\n  return \"Expected options to be either an object or a string, but got \".concat(tipeof, \" instead\");\n}; // const ERRSTR_FLAG = flag => `Unknown file open flag: ${flag}`;\n\n\nvar ENOENT = 'ENOENT';\nvar EBADF = 'EBADF';\nvar EINVAL = 'EINVAL';\nvar EPERM = 'EPERM';\nvar EPROTO = 'EPROTO';\nvar EEXIST = 'EEXIST';\nvar ENOTDIR = 'ENOTDIR';\nvar EMFILE = 'EMFILE';\nvar EACCES = 'EACCES';\nvar EISDIR = 'EISDIR';\nvar ENOTEMPTY = 'ENOTEMPTY';\nvar ENOSYS = 'ENOSYS';\nvar ERR_FS_EISDIR = 'ERR_FS_EISDIR';\n\nfunction formatError(errorCode, func, path, path2) {\n  if (func === void 0) {\n    func = '';\n  }\n\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (path2 === void 0) {\n    path2 = '';\n  }\n\n  var pathFormatted = '';\n  if (path) pathFormatted = \" '\".concat(path, \"'\");\n  if (path2) pathFormatted += \" -> '\".concat(path2, \"'\");\n\n  switch (errorCode) {\n    case ENOENT:\n      return \"ENOENT: no such file or directory, \".concat(func).concat(pathFormatted);\n\n    case EBADF:\n      return \"EBADF: bad file descriptor, \".concat(func).concat(pathFormatted);\n\n    case EINVAL:\n      return \"EINVAL: invalid argument, \".concat(func).concat(pathFormatted);\n\n    case EPERM:\n      return \"EPERM: operation not permitted, \".concat(func).concat(pathFormatted);\n\n    case EPROTO:\n      return \"EPROTO: protocol error, \".concat(func).concat(pathFormatted);\n\n    case EEXIST:\n      return \"EEXIST: file already exists, \".concat(func).concat(pathFormatted);\n\n    case ENOTDIR:\n      return \"ENOTDIR: not a directory, \".concat(func).concat(pathFormatted);\n\n    case EISDIR:\n      return \"EISDIR: illegal operation on a directory, \".concat(func).concat(pathFormatted);\n\n    case EACCES:\n      return \"EACCES: permission denied, \".concat(func).concat(pathFormatted);\n\n    case ENOTEMPTY:\n      return \"ENOTEMPTY: directory not empty, \".concat(func).concat(pathFormatted);\n\n    case EMFILE:\n      return \"EMFILE: too many open files, \".concat(func).concat(pathFormatted);\n\n    case ENOSYS:\n      return \"ENOSYS: function not implemented, \".concat(func).concat(pathFormatted);\n\n    case ERR_FS_EISDIR:\n      return \"[ERR_FS_EISDIR]: Path is a directory: \".concat(func, \" returned EISDIR (is a directory) \").concat(path);\n\n    default:\n      return \"\".concat(errorCode, \": error occurred, \").concat(func).concat(pathFormatted);\n  }\n}\n\nfunction createError(errorCode, func, path, path2, Constructor) {\n  if (func === void 0) {\n    func = '';\n  }\n\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (path2 === void 0) {\n    path2 = '';\n  }\n\n  if (Constructor === void 0) {\n    Constructor = Error;\n  }\n\n  var error = new Constructor(formatError(errorCode, func, path, path2));\n  error.code = errorCode;\n  return error;\n} // ---------------------------------------- Flags\n// List of file `flags` as defined by Node.\n\n\nvar FLAGS;\n\n(function (FLAGS) {\n  // Open file for reading. An exception occurs if the file does not exist.\n  FLAGS[FLAGS[\"r\"] = O_RDONLY] = \"r\"; // Open file for reading and writing. An exception occurs if the file does not exist.\n\n  FLAGS[FLAGS[\"r+\"] = O_RDWR] = \"r+\"; // Open file for reading in synchronous mode. Instructs the operating system to bypass the local file system cache.\n\n  FLAGS[FLAGS[\"rs\"] = O_RDONLY | O_SYNC] = \"rs\";\n  FLAGS[FLAGS[\"sr\"] = FLAGS.rs] = \"sr\"; // Open file for reading and writing, telling the OS to open it synchronously. See notes for 'rs' about using this with caution.\n\n  FLAGS[FLAGS[\"rs+\"] = O_RDWR | O_SYNC] = \"rs+\";\n  FLAGS[FLAGS[\"sr+\"] = FLAGS['rs+']] = \"sr+\"; // Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n\n  FLAGS[FLAGS[\"w\"] = O_WRONLY | O_CREAT | O_TRUNC] = \"w\"; // Like 'w' but fails if path exists.\n\n  FLAGS[FLAGS[\"wx\"] = O_WRONLY | O_CREAT | O_TRUNC | O_EXCL] = \"wx\";\n  FLAGS[FLAGS[\"xw\"] = FLAGS.wx] = \"xw\"; // Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n\n  FLAGS[FLAGS[\"w+\"] = O_RDWR | O_CREAT | O_TRUNC] = \"w+\"; // Like 'w+' but fails if path exists.\n\n  FLAGS[FLAGS[\"wx+\"] = O_RDWR | O_CREAT | O_TRUNC | O_EXCL] = \"wx+\";\n  FLAGS[FLAGS[\"xw+\"] = FLAGS['wx+']] = \"xw+\"; // Open file for appending. The file is created if it does not exist.\n\n  FLAGS[FLAGS[\"a\"] = O_WRONLY | O_APPEND | O_CREAT] = \"a\"; // Like 'a' but fails if path exists.\n\n  FLAGS[FLAGS[\"ax\"] = O_WRONLY | O_APPEND | O_CREAT | O_EXCL] = \"ax\";\n  FLAGS[FLAGS[\"xa\"] = FLAGS.ax] = \"xa\"; // Open file for reading and appending. The file is created if it does not exist.\n\n  FLAGS[FLAGS[\"a+\"] = O_RDWR | O_APPEND | O_CREAT] = \"a+\"; // Like 'a+' but fails if path exists.\n\n  FLAGS[FLAGS[\"ax+\"] = O_RDWR | O_APPEND | O_CREAT | O_EXCL] = \"ax+\";\n  FLAGS[FLAGS[\"xa+\"] = FLAGS['ax+']] = \"xa+\";\n})(FLAGS = exports.FLAGS || (exports.FLAGS = {}));\n\nfunction flagsToNumber(flags) {\n  if (typeof flags === 'number') return flags;\n\n  if (typeof flags === 'string') {\n    var flagsNum = FLAGS[flags];\n    if (typeof flagsNum !== 'undefined') return flagsNum;\n  } // throw new TypeError(formatError(ERRSTR_FLAG(flags)));\n\n\n  throw new errors.TypeError('ERR_INVALID_OPT_VALUE', 'flags', flags);\n}\n\nexports.flagsToNumber = flagsToNumber; // ---------------------------------------- Options\n\nfunction getOptions(defaults, options) {\n  var opts;\n  if (!options) return defaults;else {\n    var tipeof = _typeof(options);\n\n    switch (tipeof) {\n      case 'string':\n        opts = Object.assign({}, defaults, {\n          encoding: options\n        });\n        break;\n\n      case 'object':\n        opts = Object.assign({}, defaults, options);\n        break;\n\n      default:\n        throw TypeError(ERRSTR_OPTS(tipeof));\n    }\n  }\n  if (opts.encoding !== 'buffer') (0, encoding_1.assertEncoding)(opts.encoding);\n  return opts;\n}\n\nfunction optsGenerator(defaults) {\n  return function (options) {\n    return getOptions(defaults, options);\n  };\n}\n\nfunction validateCallback(callback) {\n  if (typeof callback !== 'function') throw TypeError(ERRSTR.CB);\n  return callback;\n}\n\nfunction optsAndCbGenerator(getOpts) {\n  return function (options, callback) {\n    return typeof options === 'function' ? [getOpts(), options] : [getOpts(options), validateCallback(callback)];\n  };\n}\n\nvar optsDefaults = {\n  encoding: 'utf8'\n};\nvar getDefaultOpts = optsGenerator(optsDefaults);\nvar getDefaultOptsAndCb = optsAndCbGenerator(getDefaultOpts);\nvar readFileOptsDefaults = {\n  flag: 'r'\n};\nvar getReadFileOptions = optsGenerator(readFileOptsDefaults);\nvar writeFileDefaults = {\n  encoding: 'utf8',\n  mode: 438\n  /* DEFAULT */\n  ,\n  flag: FLAGS[FLAGS.w]\n};\nvar getWriteFileOptions = optsGenerator(writeFileDefaults);\nvar appendFileDefaults = {\n  encoding: 'utf8',\n  mode: 438\n  /* DEFAULT */\n  ,\n  flag: FLAGS[FLAGS.a]\n};\nvar getAppendFileOpts = optsGenerator(appendFileDefaults);\nvar getAppendFileOptsAndCb = optsAndCbGenerator(getAppendFileOpts);\nvar realpathDefaults = optsDefaults;\nvar getRealpathOptions = optsGenerator(realpathDefaults);\nvar getRealpathOptsAndCb = optsAndCbGenerator(getRealpathOptions);\nvar mkdirDefaults = {\n  mode: 511\n  /* DIR */\n  ,\n  recursive: false\n};\n\nvar getMkdirOptions = function getMkdirOptions(options) {\n  if (typeof options === 'number') return Object.assign({}, mkdirDefaults, {\n    mode: options\n  });\n  return Object.assign({}, mkdirDefaults, options);\n};\n\nvar rmdirDefaults = {\n  recursive: false\n};\n\nvar getRmdirOptions = function getRmdirOptions(options) {\n  return Object.assign({}, rmdirDefaults, options);\n};\n\nvar getRmOpts = optsGenerator(optsDefaults);\nvar getRmOptsAndCb = optsAndCbGenerator(getRmOpts);\nvar readdirDefaults = {\n  encoding: 'utf8',\n  withFileTypes: false\n};\nvar getReaddirOptions = optsGenerator(readdirDefaults);\nvar getReaddirOptsAndCb = optsAndCbGenerator(getReaddirOptions);\nvar statDefaults = {\n  bigint: false\n};\n\nvar getStatOptions = function getStatOptions(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return Object.assign({}, statDefaults, options);\n};\n\nvar getStatOptsAndCb = function getStatOptsAndCb(options, callback) {\n  return typeof options === 'function' ? [getStatOptions(), options] : [getStatOptions(options), validateCallback(callback)];\n}; // ---------------------------------------- Utility functions\n\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new errors.TypeError('ERR_INVALID_FILE_URL_HOST', process_1.default.platform);\n  }\n\n  var pathname = url.pathname;\n\n  for (var n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      var third = pathname.codePointAt(n + 2) | 0x20;\n\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new errors.TypeError('ERR_INVALID_FILE_URL_PATH', 'must not include encoded / characters');\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname);\n}\n\nfunction pathToFilename(path) {\n  if (typeof path !== 'string' && !buffer_1.Buffer.isBuffer(path)) {\n    try {\n      if (!(path instanceof require('url').URL)) throw new TypeError(ERRSTR.PATH_STR);\n    } catch (err) {\n      throw new TypeError(ERRSTR.PATH_STR);\n    }\n\n    path = getPathFromURLPosix(path);\n  }\n\n  var pathString = String(path);\n  nullCheck(pathString); // return slash(pathString);\n\n  return pathString;\n}\n\nexports.pathToFilename = pathToFilename;\n\nvar resolve = function resolve(filename, base) {\n  if (base === void 0) {\n    base = process_1.default.cwd();\n  }\n\n  return resolveCrossPlatform(base, filename);\n};\n\nif (isWin) {\n  var _resolve_1 = resolve;\n\n  var unixify_1 = require('fs-monkey/lib/correctPath').unixify;\n\n  resolve = function resolve(filename, base) {\n    return unixify_1(_resolve_1(filename, base));\n  };\n}\n\nfunction filenameToSteps(filename, base) {\n  var fullPath = resolve(filename, base);\n  var fullPathSansSlash = fullPath.substr(1);\n  if (!fullPathSansSlash) return [];\n  return fullPathSansSlash.split(sep);\n}\n\nexports.filenameToSteps = filenameToSteps;\n\nfunction pathToSteps(path) {\n  return filenameToSteps(pathToFilename(path));\n}\n\nexports.pathToSteps = pathToSteps;\n\nfunction dataToStr(data, encoding) {\n  if (encoding === void 0) {\n    encoding = encoding_1.ENCODING_UTF8;\n  }\n\n  if (buffer_1.Buffer.isBuffer(data)) return data.toString(encoding);else if (data instanceof Uint8Array) return (0, buffer_1.bufferFrom)(data).toString(encoding);else return String(data);\n}\n\nexports.dataToStr = dataToStr;\n\nfunction dataToBuffer(data, encoding) {\n  if (encoding === void 0) {\n    encoding = encoding_1.ENCODING_UTF8;\n  }\n\n  if (buffer_1.Buffer.isBuffer(data)) return data;else if (data instanceof Uint8Array) return (0, buffer_1.bufferFrom)(data);else return (0, buffer_1.bufferFrom)(String(data), encoding);\n}\n\nexports.dataToBuffer = dataToBuffer;\n\nfunction bufferToEncoding(buffer, encoding) {\n  if (!encoding || encoding === 'buffer') return buffer;else return buffer.toString(encoding);\n}\n\nexports.bufferToEncoding = bufferToEncoding;\n\nfunction nullCheck(path, callback) {\n  if (('' + path).indexOf(\"\\0\") !== -1) {\n    var er = new Error('Path must be a string without null bytes');\n    er.code = ENOENT;\n    if (typeof callback !== 'function') throw er;\n    process_1.default.nextTick(callback, er);\n    return false;\n  }\n\n  return true;\n}\n\nfunction _modeToNumber(mode, def) {\n  if (typeof mode === 'number') return mode;\n  if (typeof mode === 'string') return parseInt(mode, 8);\n  if (def) return modeToNumber(def);\n  return undefined;\n}\n\nfunction modeToNumber(mode, def) {\n  var result = _modeToNumber(mode, def);\n\n  if (typeof result !== 'number' || isNaN(result)) throw new TypeError(ERRSTR.MODE_INT);\n  return result;\n}\n\nfunction isFd(path) {\n  return path >>> 0 === path;\n}\n\nfunction validateFd(fd) {\n  if (!isFd(fd)) throw TypeError(ERRSTR.FD);\n} // converts Date or number to a fractional UNIX timestamp\n\n\nfunction toUnixTimestamp(time) {\n  // tslint:disable-next-line triple-equals\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n\n  if (time instanceof Date) {\n    return time.getTime() / 1000;\n  }\n\n  if (isFinite(time)) {\n    if (time < 0) {\n      return Date.now() / 1000;\n    }\n\n    return time;\n  }\n\n  throw new Error('Cannot parse time: ' + time);\n}\n\nexports.toUnixTimestamp = toUnixTimestamp;\n\nfunction validateUid(uid) {\n  if (typeof uid !== 'number') throw TypeError(ERRSTR.UID);\n}\n\nfunction validateGid(gid) {\n  if (typeof gid !== 'number') throw TypeError(ERRSTR.GID);\n}\n\nfunction flattenJSON(nestedJSON) {\n  var flatJSON = {};\n\n  function flatten(pathPrefix, node) {\n    for (var path in node) {\n      var contentOrNode = node[path];\n      var joinedPath = join(pathPrefix, path);\n\n      if (typeof contentOrNode === 'string') {\n        flatJSON[joinedPath] = contentOrNode;\n      } else if (_typeof(contentOrNode) === 'object' && contentOrNode !== null && Object.keys(contentOrNode).length > 0) {\n        // empty directories need an explicit entry and therefore get handled in `else`, non-empty ones are implicitly considered\n        flatten(joinedPath, contentOrNode);\n      } else {\n        // without this branch null, empty-object or non-object entries would not be handled in the same way\n        // by both fromJSON() and fromNestedJSON()\n        flatJSON[joinedPath] = null;\n      }\n    }\n  }\n\n  flatten('', nestedJSON);\n  return flatJSON;\n}\n/**\n * `Volume` represents a file system.\n */\n\n\nvar Volume =\n/** @class */\nfunction () {\n  function Volume(props) {\n    if (props === void 0) {\n      props = {};\n    } // I-node number counter.\n\n\n    this.ino = 0; // A mapping for i-node numbers to i-nodes (`Node`);\n\n    this.inodes = {}; // List of released i-node numbers, for reuse.\n\n    this.releasedInos = []; // A mapping for file descriptors to `File`s.\n\n    this.fds = {}; // A list of reusable (opened and closed) file descriptors, that should be\n    // used first before creating a new file descriptor.\n\n    this.releasedFds = []; // Max number of open files.\n\n    this.maxFiles = 10000; // Current number of open files.\n\n    this.openFiles = 0;\n    this.promisesApi = (0, promises_1.default)(this);\n    this.statWatchers = {};\n    this.props = Object.assign({\n      Node: node_1.Node,\n      Link: node_1.Link,\n      File: node_1.File\n    }, props);\n    var root = this.createLink();\n    root.setNode(this.createNode(true));\n    var self = this; // tslint:disable-line no-this-assignment\n\n    this.StatWatcher =\n    /** @class */\n    function (_super) {\n      __extends(StatWatcher, _super);\n\n      function StatWatcher() {\n        return _super.call(this, self) || this;\n      }\n\n      return StatWatcher;\n    }(StatWatcher);\n\n    var _ReadStream = FsReadStream;\n\n    this.ReadStream =\n    /** @class */\n    function (_super) {\n      __extends(class_1, _super);\n\n      function class_1() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return _super.apply(this, __spreadArray([self], args, false)) || this;\n      }\n\n      return class_1;\n    }(_ReadStream);\n\n    var _WriteStream = FsWriteStream;\n\n    this.WriteStream =\n    /** @class */\n    function (_super) {\n      __extends(class_2, _super);\n\n      function class_2() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return _super.apply(this, __spreadArray([self], args, false)) || this;\n      }\n\n      return class_2;\n    }(_WriteStream);\n\n    this.FSWatcher =\n    /** @class */\n    function (_super) {\n      __extends(FSWatcher, _super);\n\n      function FSWatcher() {\n        return _super.call(this, self) || this;\n      }\n\n      return FSWatcher;\n    }(FSWatcher); // root.setChild('.', root);\n    // root.getNode().nlink++;\n    // root.setChild('..', root);\n    // root.getNode().nlink++;\n\n\n    this.root = root;\n  }\n\n  Volume.fromJSON = function (json, cwd) {\n    var vol = new Volume();\n    vol.fromJSON(json, cwd);\n    return vol;\n  };\n\n  Volume.fromNestedJSON = function (json, cwd) {\n    var vol = new Volume();\n    vol.fromNestedJSON(json, cwd);\n    return vol;\n  };\n\n  Object.defineProperty(Volume.prototype, \"promises\", {\n    get: function get() {\n      if (this.promisesApi === null) throw new Error('Promise is not supported in this environment.');\n      return this.promisesApi;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Volume.prototype.createLink = function (parent, name, isDirectory, perm) {\n    if (isDirectory === void 0) {\n      isDirectory = false;\n    }\n\n    if (!parent) {\n      return new this.props.Link(this, null, '');\n    }\n\n    if (!name) {\n      throw new Error('createLink: name cannot be empty');\n    }\n\n    return parent.createChild(name, this.createNode(isDirectory, perm));\n  };\n\n  Volume.prototype.deleteLink = function (link) {\n    var parent = link.parent;\n\n    if (parent) {\n      parent.deleteChild(link);\n      return true;\n    }\n\n    return false;\n  };\n\n  Volume.prototype.newInoNumber = function () {\n    var releasedFd = this.releasedInos.pop();\n    if (releasedFd) return releasedFd;else {\n      this.ino = (this.ino + 1) % 0xffffffff;\n      return this.ino;\n    }\n  };\n\n  Volume.prototype.newFdNumber = function () {\n    var releasedFd = this.releasedFds.pop();\n    return typeof releasedFd === 'number' ? releasedFd : Volume.fd--;\n  };\n\n  Volume.prototype.createNode = function (isDirectory, perm) {\n    if (isDirectory === void 0) {\n      isDirectory = false;\n    }\n\n    var node = new this.props.Node(this.newInoNumber(), perm);\n    if (isDirectory) node.setIsDirectory();\n    this.inodes[node.ino] = node;\n    return node;\n  };\n\n  Volume.prototype.getNode = function (ino) {\n    return this.inodes[ino];\n  };\n\n  Volume.prototype.deleteNode = function (node) {\n    node.del();\n    delete this.inodes[node.ino];\n    this.releasedInos.push(node.ino);\n  }; // Generates 6 character long random string, used by `mkdtemp`.\n\n\n  Volume.prototype.genRndStr = function () {\n    var str = (Math.random() + 1).toString(36).substr(2, 6);\n    if (str.length === 6) return str;else return this.genRndStr();\n  }; // Returns a `Link` (hard link) referenced by path \"split\" into steps.\n\n\n  Volume.prototype.getLink = function (steps) {\n    return this.root.walk(steps);\n  }; // Just link `getLink`, but throws a correct user error, if link to found.\n\n\n  Volume.prototype.getLinkOrThrow = function (filename, funcName) {\n    var steps = filenameToSteps(filename);\n    var link = this.getLink(steps);\n    if (!link) throw createError(ENOENT, funcName, filename);\n    return link;\n  }; // Just like `getLink`, but also dereference/resolves symbolic links.\n\n\n  Volume.prototype.getResolvedLink = function (filenameOrSteps) {\n    var steps = typeof filenameOrSteps === 'string' ? filenameToSteps(filenameOrSteps) : filenameOrSteps;\n    var link = this.root;\n    var i = 0;\n\n    while (i < steps.length) {\n      var step = steps[i];\n      link = link.getChild(step);\n      if (!link) return null;\n      var node = link.getNode();\n\n      if (node.isSymlink()) {\n        steps = node.symlink.concat(steps.slice(i + 1));\n        link = this.root;\n        i = 0;\n        continue;\n      }\n\n      i++;\n    }\n\n    return link;\n  }; // Just like `getLinkOrThrow`, but also dereference/resolves symbolic links.\n\n\n  Volume.prototype.getResolvedLinkOrThrow = function (filename, funcName) {\n    var link = this.getResolvedLink(filename);\n    if (!link) throw createError(ENOENT, funcName, filename);\n    return link;\n  };\n\n  Volume.prototype.resolveSymlinks = function (link) {\n    // let node: Node = link.getNode();\n    // while(link && node.isSymlink()) {\n    //     link = this.getLink(node.symlink);\n    //     if(!link) return null;\n    //     node = link.getNode();\n    // }\n    // return link;\n    return this.getResolvedLink(link.steps.slice(1));\n  }; // Just like `getLinkOrThrow`, but also verifies that the link is a directory.\n\n\n  Volume.prototype.getLinkAsDirOrThrow = function (filename, funcName) {\n    var link = this.getLinkOrThrow(filename, funcName);\n    if (!link.getNode().isDirectory()) throw createError(ENOTDIR, funcName, filename);\n    return link;\n  }; // Get the immediate parent directory of the link.\n\n\n  Volume.prototype.getLinkParent = function (steps) {\n    return this.root.walk(steps, steps.length - 1);\n  };\n\n  Volume.prototype.getLinkParentAsDirOrThrow = function (filenameOrSteps, funcName) {\n    var steps = filenameOrSteps instanceof Array ? filenameOrSteps : filenameToSteps(filenameOrSteps);\n    var link = this.getLinkParent(steps);\n    if (!link) throw createError(ENOENT, funcName, sep + steps.join(sep));\n    if (!link.getNode().isDirectory()) throw createError(ENOTDIR, funcName, sep + steps.join(sep));\n    return link;\n  };\n\n  Volume.prototype.getFileByFd = function (fd) {\n    return this.fds[String(fd)];\n  };\n\n  Volume.prototype.getFileByFdOrThrow = function (fd, funcName) {\n    if (!isFd(fd)) throw TypeError(ERRSTR.FD);\n    var file = this.getFileByFd(fd);\n    if (!file) throw createError(EBADF, funcName);\n    return file;\n  };\n  /**\n   * @todo This is not used anymore. Remove.\n   */\n\n  /*\n  private getNodeByIdOrCreate(id: TFileId, flags: number, perm: number): Node {\n    if (typeof id === 'number') {\n      const file = this.getFileByFd(id);\n      if (!file) throw Error('File nto found');\n      return file.node;\n    } else {\n      const steps = pathToSteps(id as PathLike);\n      let link = this.getLink(steps);\n      if (link) return link.getNode();\n         // Try creating a node if not found.\n      if (flags & O_CREAT) {\n        const dirLink = this.getLinkParent(steps);\n        if (dirLink) {\n          const name = steps[steps.length - 1];\n          link = this.createLink(dirLink, name, false, perm);\n          return link.getNode();\n        }\n      }\n         throw createError(ENOENT, 'getNodeByIdOrCreate', pathToFilename(id));\n    }\n  }\n  */\n\n\n  Volume.prototype.wrapAsync = function (method, args, callback) {\n    var _this = this;\n\n    validateCallback(callback);\n    (0, setImmediate_1.default)(function () {\n      var result;\n\n      try {\n        result = method.apply(_this, args);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, result);\n    });\n  };\n\n  Volume.prototype._toJSON = function (link, json, path) {\n    var _a;\n\n    if (link === void 0) {\n      link = this.root;\n    }\n\n    if (json === void 0) {\n      json = {};\n    }\n\n    var isEmpty = true;\n    var children = link.children;\n\n    if (link.getNode().isFile()) {\n      children = (_a = {}, _a[link.getName()] = link.parent.getChild(link.getName()), _a);\n      link = link.parent;\n    }\n\n    for (var name_1 in children) {\n      isEmpty = false;\n      var child = link.getChild(name_1);\n\n      if (!child) {\n        throw new Error('_toJSON: unexpected undefined');\n      }\n\n      var node = child.getNode();\n\n      if (node.isFile()) {\n        var filename = child.getPath();\n        if (path) filename = relative(path, filename);\n        json[filename] = node.getString();\n      } else if (node.isDirectory()) {\n        this._toJSON(child, json, path);\n      }\n    }\n\n    var dirPath = link.getPath();\n    if (path) dirPath = relative(path, dirPath);\n\n    if (dirPath && isEmpty) {\n      json[dirPath] = null;\n    }\n\n    return json;\n  };\n\n  Volume.prototype.toJSON = function (paths, json, isRelative) {\n    if (json === void 0) {\n      json = {};\n    }\n\n    if (isRelative === void 0) {\n      isRelative = false;\n    }\n\n    var links = [];\n\n    if (paths) {\n      if (!(paths instanceof Array)) paths = [paths];\n\n      for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\n        var path = paths_1[_i];\n        var filename = pathToFilename(path);\n        var link = this.getResolvedLink(filename);\n        if (!link) continue;\n        links.push(link);\n      }\n    } else {\n      links.push(this.root);\n    }\n\n    if (!links.length) return json;\n\n    for (var _a = 0, links_1 = links; _a < links_1.length; _a++) {\n      var link = links_1[_a];\n\n      this._toJSON(link, json, isRelative ? link.getPath() : '');\n    }\n\n    return json;\n  };\n\n  Volume.prototype.fromJSON = function (json, cwd) {\n    if (cwd === void 0) {\n      cwd = process_1.default.cwd();\n    }\n\n    for (var filename in json) {\n      var data = json[filename];\n      filename = resolve(filename, cwd);\n\n      if (typeof data === 'string') {\n        var dir = dirname(filename);\n        this.mkdirpBase(dir, 511\n        /* DIR */\n        );\n        this.writeFileSync(filename, data);\n      } else {\n        this.mkdirpBase(filename, 511\n        /* DIR */\n        );\n      }\n    }\n  };\n\n  Volume.prototype.fromNestedJSON = function (json, cwd) {\n    this.fromJSON(flattenJSON(json), cwd);\n  };\n\n  Volume.prototype.reset = function () {\n    this.ino = 0;\n    this.inodes = {};\n    this.releasedInos = [];\n    this.fds = {};\n    this.releasedFds = [];\n    this.openFiles = 0;\n    this.root = this.createLink();\n    this.root.setNode(this.createNode(true));\n  }; // Legacy interface\n\n\n  Volume.prototype.mountSync = function (mountpoint, json) {\n    this.fromJSON(json, mountpoint);\n  };\n\n  Volume.prototype.openLink = function (link, flagsNum, resolveSymlinks) {\n    if (resolveSymlinks === void 0) {\n      resolveSymlinks = true;\n    }\n\n    if (this.openFiles >= this.maxFiles) {\n      // Too many open files.\n      throw createError(EMFILE, 'open', link.getPath());\n    } // Resolve symlinks.\n\n\n    var realLink = link;\n    if (resolveSymlinks) realLink = this.resolveSymlinks(link);\n    if (!realLink) throw createError(ENOENT, 'open', link.getPath());\n    var node = realLink.getNode(); // Check whether node is a directory\n\n    if (node.isDirectory()) {\n      if ((flagsNum & (O_RDONLY | O_RDWR | O_WRONLY)) !== O_RDONLY) throw createError(EISDIR, 'open', link.getPath());\n    } else {\n      if (flagsNum & O_DIRECTORY) throw createError(ENOTDIR, 'open', link.getPath());\n    } // Check node permissions\n\n\n    if (!(flagsNum & O_WRONLY)) {\n      if (!node.canRead()) {\n        throw createError(EACCES, 'open', link.getPath());\n      }\n    }\n\n    if (flagsNum & O_RDWR) {}\n\n    var file = new this.props.File(link, node, flagsNum, this.newFdNumber());\n    this.fds[file.fd] = file;\n    this.openFiles++;\n    if (flagsNum & O_TRUNC) file.truncate();\n    return file;\n  };\n\n  Volume.prototype.openFile = function (filename, flagsNum, modeNum, resolveSymlinks) {\n    if (resolveSymlinks === void 0) {\n      resolveSymlinks = true;\n    }\n\n    var steps = filenameToSteps(filename);\n    var link = resolveSymlinks ? this.getResolvedLink(steps) : this.getLink(steps); // Try creating a new file, if it does not exist.\n\n    if (!link && flagsNum & O_CREAT) {\n      // const dirLink: Link = this.getLinkParent(steps);\n      var dirLink = this.getResolvedLink(steps.slice(0, steps.length - 1)); // if(!dirLink) throw createError(ENOENT, 'open', filename);\n\n      if (!dirLink) throw createError(ENOENT, 'open', sep + steps.join(sep));\n\n      if (flagsNum & O_CREAT && typeof modeNum === 'number') {\n        link = this.createLink(dirLink, steps[steps.length - 1], false, modeNum);\n      }\n    }\n\n    if (link) return this.openLink(link, flagsNum, resolveSymlinks);\n    throw createError(ENOENT, 'open', filename);\n  };\n\n  Volume.prototype.openBase = function (filename, flagsNum, modeNum, resolveSymlinks) {\n    if (resolveSymlinks === void 0) {\n      resolveSymlinks = true;\n    }\n\n    var file = this.openFile(filename, flagsNum, modeNum, resolveSymlinks);\n    if (!file) throw createError(ENOENT, 'open', filename);\n    return file.fd;\n  };\n\n  Volume.prototype.openSync = function (path, flags, mode) {\n    if (mode === void 0) {\n      mode = 438\n      /* DEFAULT */\n      ;\n    } // Validate (1) mode; (2) path; (3) flags - in that order.\n\n\n    var modeNum = modeToNumber(mode);\n    var fileName = pathToFilename(path);\n    var flagsNum = flagsToNumber(flags);\n    return this.openBase(fileName, flagsNum, modeNum);\n  };\n\n  Volume.prototype.open = function (path, flags, a, b) {\n    var mode = a;\n    var callback = b;\n\n    if (typeof a === 'function') {\n      mode = 438\n      /* DEFAULT */\n      ;\n      callback = a;\n    }\n\n    mode = mode || 438\n    /* DEFAULT */\n    ;\n    var modeNum = modeToNumber(mode);\n    var fileName = pathToFilename(path);\n    var flagsNum = flagsToNumber(flags);\n    this.wrapAsync(this.openBase, [fileName, flagsNum, modeNum], callback);\n  };\n\n  Volume.prototype.closeFile = function (file) {\n    if (!this.fds[file.fd]) return;\n    this.openFiles--;\n    delete this.fds[file.fd];\n    this.releasedFds.push(file.fd);\n  };\n\n  Volume.prototype.closeSync = function (fd) {\n    validateFd(fd);\n    var file = this.getFileByFdOrThrow(fd, 'close');\n    this.closeFile(file);\n  };\n\n  Volume.prototype.close = function (fd, callback) {\n    validateFd(fd);\n    this.wrapAsync(this.closeSync, [fd], callback);\n  };\n\n  Volume.prototype.openFileOrGetById = function (id, flagsNum, modeNum) {\n    if (typeof id === 'number') {\n      var file = this.fds[id];\n      if (!file) throw createError(ENOENT);\n      return file;\n    } else {\n      return this.openFile(pathToFilename(id), flagsNum, modeNum);\n    }\n  };\n\n  Volume.prototype.readBase = function (fd, buffer, offset, length, position) {\n    var file = this.getFileByFdOrThrow(fd);\n    return file.read(buffer, Number(offset), Number(length), position);\n  };\n\n  Volume.prototype.readSync = function (fd, buffer, offset, length, position) {\n    validateFd(fd);\n    return this.readBase(fd, buffer, offset, length, position);\n  };\n\n  Volume.prototype.read = function (fd, buffer, offset, length, position, callback) {\n    var _this = this;\n\n    validateCallback(callback); // This `if` branch is from Node.js\n\n    if (length === 0) {\n      return process_1.default.nextTick(function () {\n        if (callback) callback(null, 0, buffer);\n      });\n    }\n\n    (0, setImmediate_1.default)(function () {\n      try {\n        var bytes = _this.readBase(fd, buffer, offset, length, position);\n\n        callback(null, bytes, buffer);\n      } catch (err) {\n        callback(err);\n      }\n    });\n  };\n\n  Volume.prototype.readFileBase = function (id, flagsNum, encoding) {\n    var result;\n    var isUserFd = typeof id === 'number';\n    var userOwnsFd = isUserFd && isFd(id);\n    var fd;\n    if (userOwnsFd) fd = id;else {\n      var filename = pathToFilename(id);\n      var steps = filenameToSteps(filename);\n      var link = this.getResolvedLink(steps);\n\n      if (link) {\n        var node = link.getNode();\n        if (node.isDirectory()) throw createError(EISDIR, 'open', link.getPath());\n      }\n\n      fd = this.openSync(id, flagsNum);\n    }\n\n    try {\n      result = bufferToEncoding(this.getFileByFdOrThrow(fd).getBuffer(), encoding);\n    } finally {\n      if (!userOwnsFd) {\n        this.closeSync(fd);\n      }\n    }\n\n    return result;\n  };\n\n  Volume.prototype.readFileSync = function (file, options) {\n    var opts = getReadFileOptions(options);\n    var flagsNum = flagsToNumber(opts.flag);\n    return this.readFileBase(file, flagsNum, opts.encoding);\n  };\n\n  Volume.prototype.readFile = function (id, a, b) {\n    var _a = optsAndCbGenerator(getReadFileOptions)(a, b),\n        opts = _a[0],\n        callback = _a[1];\n\n    var flagsNum = flagsToNumber(opts.flag);\n    this.wrapAsync(this.readFileBase, [id, flagsNum, opts.encoding], callback);\n  };\n\n  Volume.prototype.writeBase = function (fd, buf, offset, length, position) {\n    var file = this.getFileByFdOrThrow(fd, 'write');\n    return file.write(buf, offset, length, position);\n  };\n\n  Volume.prototype.writeSync = function (fd, a, b, c, d) {\n    validateFd(fd);\n    var encoding;\n    var offset;\n    var length;\n    var position;\n    var isBuffer = typeof a !== 'string';\n\n    if (isBuffer) {\n      offset = (b || 0) | 0;\n      length = c;\n      position = d;\n    } else {\n      position = b;\n      encoding = c;\n    }\n\n    var buf = dataToBuffer(a, encoding);\n\n    if (isBuffer) {\n      if (typeof length === 'undefined') {\n        length = buf.length;\n      }\n    } else {\n      offset = 0;\n      length = buf.length;\n    }\n\n    return this.writeBase(fd, buf, offset, length, position);\n  };\n\n  Volume.prototype.write = function (fd, a, b, c, d, e) {\n    var _this = this;\n\n    validateFd(fd);\n    var offset;\n    var length;\n    var position;\n    var encoding;\n    var callback;\n\n    var tipa = _typeof(a);\n\n    var tipb = _typeof(b);\n\n    var tipc = _typeof(c);\n\n    var tipd = _typeof(d);\n\n    if (tipa !== 'string') {\n      if (tipb === 'function') {\n        callback = b;\n      } else if (tipc === 'function') {\n        offset = b | 0;\n        callback = c;\n      } else if (tipd === 'function') {\n        offset = b | 0;\n        length = c;\n        callback = d;\n      } else {\n        offset = b | 0;\n        length = c;\n        position = d;\n        callback = e;\n      }\n    } else {\n      if (tipb === 'function') {\n        callback = b;\n      } else if (tipc === 'function') {\n        position = b;\n        callback = c;\n      } else if (tipd === 'function') {\n        position = b;\n        encoding = c;\n        callback = d;\n      }\n    }\n\n    var buf = dataToBuffer(a, encoding);\n\n    if (tipa !== 'string') {\n      if (typeof length === 'undefined') length = buf.length;\n    } else {\n      offset = 0;\n      length = buf.length;\n    }\n\n    var cb = validateCallback(callback);\n    (0, setImmediate_1.default)(function () {\n      try {\n        var bytes = _this.writeBase(fd, buf, offset, length, position);\n\n        if (tipa !== 'string') {\n          cb(null, bytes, buf);\n        } else {\n          cb(null, bytes, a);\n        }\n      } catch (err) {\n        cb(err);\n      }\n    });\n  };\n\n  Volume.prototype.writeFileBase = function (id, buf, flagsNum, modeNum) {\n    // console.log('writeFileBase', id, buf, flagsNum, modeNum);\n    // const node = this.getNodeByIdOrCreate(id, flagsNum, modeNum);\n    // node.setBuffer(buf);\n    var isUserFd = typeof id === 'number';\n    var fd;\n    if (isUserFd) fd = id;else {\n      fd = this.openBase(pathToFilename(id), flagsNum, modeNum); // fd = this.openSync(id as PathLike, flagsNum, modeNum);\n    }\n    var offset = 0;\n    var length = buf.length;\n    var position = flagsNum & O_APPEND ? undefined : 0;\n\n    try {\n      while (length > 0) {\n        var written = this.writeSync(fd, buf, offset, length, position);\n        offset += written;\n        length -= written;\n        if (position !== undefined) position += written;\n      }\n    } finally {\n      if (!isUserFd) this.closeSync(fd);\n    }\n  };\n\n  Volume.prototype.writeFileSync = function (id, data, options) {\n    var opts = getWriteFileOptions(options);\n    var flagsNum = flagsToNumber(opts.flag);\n    var modeNum = modeToNumber(opts.mode);\n    var buf = dataToBuffer(data, opts.encoding);\n    this.writeFileBase(id, buf, flagsNum, modeNum);\n  };\n\n  Volume.prototype.writeFile = function (id, data, a, b) {\n    var options = a;\n    var callback = b;\n\n    if (typeof a === 'function') {\n      options = writeFileDefaults;\n      callback = a;\n    }\n\n    var cb = validateCallback(callback);\n    var opts = getWriteFileOptions(options);\n    var flagsNum = flagsToNumber(opts.flag);\n    var modeNum = modeToNumber(opts.mode);\n    var buf = dataToBuffer(data, opts.encoding);\n    this.wrapAsync(this.writeFileBase, [id, buf, flagsNum, modeNum], cb);\n  };\n\n  Volume.prototype.linkBase = function (filename1, filename2) {\n    var steps1 = filenameToSteps(filename1);\n    var link1 = this.getLink(steps1);\n    if (!link1) throw createError(ENOENT, 'link', filename1, filename2);\n    var steps2 = filenameToSteps(filename2); // Check new link directory exists.\n\n    var dir2 = this.getLinkParent(steps2);\n    if (!dir2) throw createError(ENOENT, 'link', filename1, filename2);\n    var name = steps2[steps2.length - 1]; // Check if new file already exists.\n\n    if (dir2.getChild(name)) throw createError(EEXIST, 'link', filename1, filename2);\n    var node = link1.getNode();\n    node.nlink++;\n    dir2.createChild(name, node);\n  };\n\n  Volume.prototype.copyFileBase = function (src, dest, flags) {\n    var buf = this.readFileSync(src);\n\n    if (flags & COPYFILE_EXCL) {\n      if (this.existsSync(dest)) {\n        throw createError(EEXIST, 'copyFile', src, dest);\n      }\n    }\n\n    if (flags & COPYFILE_FICLONE_FORCE) {\n      throw createError(ENOSYS, 'copyFile', src, dest);\n    }\n\n    this.writeFileBase(dest, buf, FLAGS.w, 438\n    /* DEFAULT */\n    );\n  };\n\n  Volume.prototype.copyFileSync = function (src, dest, flags) {\n    var srcFilename = pathToFilename(src);\n    var destFilename = pathToFilename(dest);\n    return this.copyFileBase(srcFilename, destFilename, (flags || 0) | 0);\n  };\n\n  Volume.prototype.copyFile = function (src, dest, a, b) {\n    var srcFilename = pathToFilename(src);\n    var destFilename = pathToFilename(dest);\n    var flags;\n    var callback;\n\n    if (typeof a === 'function') {\n      flags = 0;\n      callback = a;\n    } else {\n      flags = a;\n      callback = b;\n    }\n\n    validateCallback(callback);\n    this.wrapAsync(this.copyFileBase, [srcFilename, destFilename, flags], callback);\n  };\n\n  Volume.prototype.linkSync = function (existingPath, newPath) {\n    var existingPathFilename = pathToFilename(existingPath);\n    var newPathFilename = pathToFilename(newPath);\n    this.linkBase(existingPathFilename, newPathFilename);\n  };\n\n  Volume.prototype.link = function (existingPath, newPath, callback) {\n    var existingPathFilename = pathToFilename(existingPath);\n    var newPathFilename = pathToFilename(newPath);\n    this.wrapAsync(this.linkBase, [existingPathFilename, newPathFilename], callback);\n  };\n\n  Volume.prototype.unlinkBase = function (filename) {\n    var steps = filenameToSteps(filename);\n    var link = this.getLink(steps);\n    if (!link) throw createError(ENOENT, 'unlink', filename); // TODO: Check if it is file, dir, other...\n\n    if (link.length) throw Error('Dir not empty...');\n    this.deleteLink(link);\n    var node = link.getNode();\n    node.nlink--; // When all hard links to i-node are deleted, remove the i-node, too.\n\n    if (node.nlink <= 0) {\n      this.deleteNode(node);\n    }\n  };\n\n  Volume.prototype.unlinkSync = function (path) {\n    var filename = pathToFilename(path);\n    this.unlinkBase(filename);\n  };\n\n  Volume.prototype.unlink = function (path, callback) {\n    var filename = pathToFilename(path);\n    this.wrapAsync(this.unlinkBase, [filename], callback);\n  };\n\n  Volume.prototype.symlinkBase = function (targetFilename, pathFilename) {\n    var pathSteps = filenameToSteps(pathFilename); // Check if directory exists, where we about to create a symlink.\n\n    var dirLink = this.getLinkParent(pathSteps);\n    if (!dirLink) throw createError(ENOENT, 'symlink', targetFilename, pathFilename);\n    var name = pathSteps[pathSteps.length - 1]; // Check if new file already exists.\n\n    if (dirLink.getChild(name)) throw createError(EEXIST, 'symlink', targetFilename, pathFilename); // Create symlink.\n\n    var symlink = dirLink.createChild(name);\n    symlink.getNode().makeSymlink(filenameToSteps(targetFilename));\n    return symlink;\n  }; // `type` argument works only on Windows.\n\n\n  Volume.prototype.symlinkSync = function (target, path, type) {\n    var targetFilename = pathToFilename(target);\n    var pathFilename = pathToFilename(path);\n    this.symlinkBase(targetFilename, pathFilename);\n  };\n\n  Volume.prototype.symlink = function (target, path, a, b) {\n    var callback = validateCallback(typeof a === 'function' ? a : b);\n    var targetFilename = pathToFilename(target);\n    var pathFilename = pathToFilename(path);\n    this.wrapAsync(this.symlinkBase, [targetFilename, pathFilename], callback);\n  };\n\n  Volume.prototype.realpathBase = function (filename, encoding) {\n    var steps = filenameToSteps(filename);\n    var realLink = this.getResolvedLink(steps);\n    if (!realLink) throw createError(ENOENT, 'realpath', filename);\n    return (0, encoding_1.strToEncoding)(realLink.getPath(), encoding);\n  };\n\n  Volume.prototype.realpathSync = function (path, options) {\n    return this.realpathBase(pathToFilename(path), getRealpathOptions(options).encoding);\n  };\n\n  Volume.prototype.realpath = function (path, a, b) {\n    var _a = getRealpathOptsAndCb(a, b),\n        opts = _a[0],\n        callback = _a[1];\n\n    var pathFilename = pathToFilename(path);\n    this.wrapAsync(this.realpathBase, [pathFilename, opts.encoding], callback);\n  };\n\n  Volume.prototype.lstatBase = function (filename, bigint, throwIfNoEntry) {\n    if (bigint === void 0) {\n      bigint = false;\n    }\n\n    if (throwIfNoEntry === void 0) {\n      throwIfNoEntry = false;\n    }\n\n    var link = this.getLink(filenameToSteps(filename));\n\n    if (link) {\n      return Stats_1.default.build(link.getNode(), bigint);\n    } else if (!throwIfNoEntry) {\n      return undefined;\n    } else {\n      throw createError(ENOENT, 'lstat', filename);\n    }\n  };\n\n  Volume.prototype.lstatSync = function (path, options) {\n    var _a = getStatOptions(options),\n        _b = _a.throwIfNoEntry,\n        throwIfNoEntry = _b === void 0 ? true : _b,\n        _c = _a.bigint,\n        bigint = _c === void 0 ? false : _c;\n\n    return this.lstatBase(pathToFilename(path), bigint, throwIfNoEntry);\n  };\n\n  Volume.prototype.lstat = function (path, a, b) {\n    var _a = getStatOptsAndCb(a, b),\n        _b = _a[0],\n        _c = _b.throwIfNoEntry,\n        throwIfNoEntry = _c === void 0 ? true : _c,\n        _d = _b.bigint,\n        bigint = _d === void 0 ? false : _d,\n        callback = _a[1];\n\n    this.wrapAsync(this.lstatBase, [pathToFilename(path), bigint, throwIfNoEntry], callback);\n  };\n\n  Volume.prototype.statBase = function (filename, bigint, throwIfNoEntry) {\n    if (bigint === void 0) {\n      bigint = false;\n    }\n\n    if (throwIfNoEntry === void 0) {\n      throwIfNoEntry = true;\n    }\n\n    var link = this.getResolvedLink(filenameToSteps(filename));\n\n    if (link) {\n      return Stats_1.default.build(link.getNode(), bigint);\n    } else if (!throwIfNoEntry) {\n      return undefined;\n    } else {\n      throw createError(ENOENT, 'stat', filename);\n    }\n  };\n\n  Volume.prototype.statSync = function (path, options) {\n    var _a = getStatOptions(options),\n        _b = _a.bigint,\n        bigint = _b === void 0 ? true : _b,\n        _c = _a.throwIfNoEntry,\n        throwIfNoEntry = _c === void 0 ? true : _c;\n\n    return this.statBase(pathToFilename(path), bigint, throwIfNoEntry);\n  };\n\n  Volume.prototype.stat = function (path, a, b) {\n    var _a = getStatOptsAndCb(a, b),\n        _b = _a[0],\n        _c = _b.bigint,\n        bigint = _c === void 0 ? false : _c,\n        _d = _b.throwIfNoEntry,\n        throwIfNoEntry = _d === void 0 ? true : _d,\n        callback = _a[1];\n\n    this.wrapAsync(this.statBase, [pathToFilename(path), bigint, throwIfNoEntry], callback);\n  };\n\n  Volume.prototype.fstatBase = function (fd, bigint) {\n    if (bigint === void 0) {\n      bigint = false;\n    }\n\n    var file = this.getFileByFd(fd);\n    if (!file) throw createError(EBADF, 'fstat');\n    return Stats_1.default.build(file.node, bigint);\n  };\n\n  Volume.prototype.fstatSync = function (fd, options) {\n    return this.fstatBase(fd, getStatOptions(options).bigint);\n  };\n\n  Volume.prototype.fstat = function (fd, a, b) {\n    var _a = getStatOptsAndCb(a, b),\n        opts = _a[0],\n        callback = _a[1];\n\n    this.wrapAsync(this.fstatBase, [fd, opts.bigint], callback);\n  };\n\n  Volume.prototype.renameBase = function (oldPathFilename, newPathFilename) {\n    var link = this.getLink(filenameToSteps(oldPathFilename));\n    if (!link) throw createError(ENOENT, 'rename', oldPathFilename, newPathFilename); // TODO: Check if it is directory, if non-empty, we cannot move it, right?\n\n    var newPathSteps = filenameToSteps(newPathFilename); // Check directory exists for the new location.\n\n    var newPathDirLink = this.getLinkParent(newPathSteps);\n    if (!newPathDirLink) throw createError(ENOENT, 'rename', oldPathFilename, newPathFilename); // TODO: Also treat cases with directories and symbolic links.\n    // TODO: See: http://man7.org/linux/man-pages/man2/rename.2.html\n    // Remove hard link from old folder.\n\n    var oldLinkParent = link.parent;\n\n    if (oldLinkParent) {\n      oldLinkParent.deleteChild(link);\n    } // Rename should overwrite the new path, if that exists.\n\n\n    var name = newPathSteps[newPathSteps.length - 1];\n    link.name = name;\n    link.steps = __spreadArray(__spreadArray([], newPathDirLink.steps, true), [name], false);\n    newPathDirLink.setChild(link.getName(), link);\n  };\n\n  Volume.prototype.renameSync = function (oldPath, newPath) {\n    var oldPathFilename = pathToFilename(oldPath);\n    var newPathFilename = pathToFilename(newPath);\n    this.renameBase(oldPathFilename, newPathFilename);\n  };\n\n  Volume.prototype.rename = function (oldPath, newPath, callback) {\n    var oldPathFilename = pathToFilename(oldPath);\n    var newPathFilename = pathToFilename(newPath);\n    this.wrapAsync(this.renameBase, [oldPathFilename, newPathFilename], callback);\n  };\n\n  Volume.prototype.existsBase = function (filename) {\n    return !!this.statBase(filename);\n  };\n\n  Volume.prototype.existsSync = function (path) {\n    try {\n      return this.existsBase(pathToFilename(path));\n    } catch (err) {\n      return false;\n    }\n  };\n\n  Volume.prototype.exists = function (path, callback) {\n    var _this = this;\n\n    var filename = pathToFilename(path);\n    if (typeof callback !== 'function') throw Error(ERRSTR.CB);\n    (0, setImmediate_1.default)(function () {\n      try {\n        callback(_this.existsBase(filename));\n      } catch (err) {\n        callback(false);\n      }\n    });\n  };\n\n  Volume.prototype.accessBase = function (filename, mode) {\n    var link = this.getLinkOrThrow(filename, 'access'); // TODO: Verify permissions\n  };\n\n  Volume.prototype.accessSync = function (path, mode) {\n    if (mode === void 0) {\n      mode = F_OK;\n    }\n\n    var filename = pathToFilename(path);\n    mode = mode | 0;\n    this.accessBase(filename, mode);\n  };\n\n  Volume.prototype.access = function (path, a, b) {\n    var mode = F_OK;\n    var callback;\n\n    if (typeof a !== 'function') {\n      mode = a | 0; // cast to number\n\n      callback = validateCallback(b);\n    } else {\n      callback = a;\n    }\n\n    var filename = pathToFilename(path);\n    this.wrapAsync(this.accessBase, [filename, mode], callback);\n  };\n\n  Volume.prototype.appendFileSync = function (id, data, options) {\n    if (options === void 0) {\n      options = appendFileDefaults;\n    }\n\n    var opts = getAppendFileOpts(options); // force append behavior when using a supplied file descriptor\n\n    if (!opts.flag || isFd(id)) opts.flag = 'a';\n    this.writeFileSync(id, data, opts);\n  };\n\n  Volume.prototype.appendFile = function (id, data, a, b) {\n    var _a = getAppendFileOptsAndCb(a, b),\n        opts = _a[0],\n        callback = _a[1]; // force append behavior when using a supplied file descriptor\n\n\n    if (!opts.flag || isFd(id)) opts.flag = 'a';\n    this.writeFile(id, data, opts, callback);\n  };\n\n  Volume.prototype.readdirBase = function (filename, options) {\n    var steps = filenameToSteps(filename);\n    var link = this.getResolvedLink(steps);\n    if (!link) throw createError(ENOENT, 'readdir', filename);\n    var node = link.getNode();\n    if (!node.isDirectory()) throw createError(ENOTDIR, 'scandir', filename);\n\n    if (options.withFileTypes) {\n      var list_1 = [];\n\n      for (var name_2 in link.children) {\n        var child = link.getChild(name_2);\n\n        if (!child) {\n          continue;\n        }\n\n        list_1.push(Dirent_1.default.build(child, options.encoding));\n      }\n\n      if (!isWin && options.encoding !== 'buffer') list_1.sort(function (a, b) {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      });\n      return list_1;\n    }\n\n    var list = [];\n\n    for (var name_3 in link.children) {\n      list.push((0, encoding_1.strToEncoding)(name_3, options.encoding));\n    }\n\n    if (!isWin && options.encoding !== 'buffer') list.sort();\n    return list;\n  };\n\n  Volume.prototype.readdirSync = function (path, options) {\n    var opts = getReaddirOptions(options);\n    var filename = pathToFilename(path);\n    return this.readdirBase(filename, opts);\n  };\n\n  Volume.prototype.readdir = function (path, a, b) {\n    var _a = getReaddirOptsAndCb(a, b),\n        options = _a[0],\n        callback = _a[1];\n\n    var filename = pathToFilename(path);\n    this.wrapAsync(this.readdirBase, [filename, options], callback);\n  };\n\n  Volume.prototype.readlinkBase = function (filename, encoding) {\n    var link = this.getLinkOrThrow(filename, 'readlink');\n    var node = link.getNode();\n    if (!node.isSymlink()) throw createError(EINVAL, 'readlink', filename);\n    var str = sep + node.symlink.join(sep);\n    return (0, encoding_1.strToEncoding)(str, encoding);\n  };\n\n  Volume.prototype.readlinkSync = function (path, options) {\n    var opts = getDefaultOpts(options);\n    var filename = pathToFilename(path);\n    return this.readlinkBase(filename, opts.encoding);\n  };\n\n  Volume.prototype.readlink = function (path, a, b) {\n    var _a = getDefaultOptsAndCb(a, b),\n        opts = _a[0],\n        callback = _a[1];\n\n    var filename = pathToFilename(path);\n    this.wrapAsync(this.readlinkBase, [filename, opts.encoding], callback);\n  };\n\n  Volume.prototype.fsyncBase = function (fd) {\n    this.getFileByFdOrThrow(fd, 'fsync');\n  };\n\n  Volume.prototype.fsyncSync = function (fd) {\n    this.fsyncBase(fd);\n  };\n\n  Volume.prototype.fsync = function (fd, callback) {\n    this.wrapAsync(this.fsyncBase, [fd], callback);\n  };\n\n  Volume.prototype.fdatasyncBase = function (fd) {\n    this.getFileByFdOrThrow(fd, 'fdatasync');\n  };\n\n  Volume.prototype.fdatasyncSync = function (fd) {\n    this.fdatasyncBase(fd);\n  };\n\n  Volume.prototype.fdatasync = function (fd, callback) {\n    this.wrapAsync(this.fdatasyncBase, [fd], callback);\n  };\n\n  Volume.prototype.ftruncateBase = function (fd, len) {\n    var file = this.getFileByFdOrThrow(fd, 'ftruncate');\n    file.truncate(len);\n  };\n\n  Volume.prototype.ftruncateSync = function (fd, len) {\n    this.ftruncateBase(fd, len);\n  };\n\n  Volume.prototype.ftruncate = function (fd, a, b) {\n    var len = typeof a === 'number' ? a : 0;\n    var callback = validateCallback(typeof a === 'number' ? b : a);\n    this.wrapAsync(this.ftruncateBase, [fd, len], callback);\n  };\n\n  Volume.prototype.truncateBase = function (path, len) {\n    var fd = this.openSync(path, 'r+');\n\n    try {\n      this.ftruncateSync(fd, len);\n    } finally {\n      this.closeSync(fd);\n    }\n  };\n\n  Volume.prototype.truncateSync = function (id, len) {\n    if (isFd(id)) return this.ftruncateSync(id, len);\n    this.truncateBase(id, len);\n  };\n\n  Volume.prototype.truncate = function (id, a, b) {\n    var len = typeof a === 'number' ? a : 0;\n    var callback = validateCallback(typeof a === 'number' ? b : a);\n    if (isFd(id)) return this.ftruncate(id, len, callback);\n    this.wrapAsync(this.truncateBase, [id, len], callback);\n  };\n\n  Volume.prototype.futimesBase = function (fd, atime, mtime) {\n    var file = this.getFileByFdOrThrow(fd, 'futimes');\n    var node = file.node;\n    node.atime = new Date(atime * 1000);\n    node.mtime = new Date(mtime * 1000);\n  };\n\n  Volume.prototype.futimesSync = function (fd, atime, mtime) {\n    this.futimesBase(fd, toUnixTimestamp(atime), toUnixTimestamp(mtime));\n  };\n\n  Volume.prototype.futimes = function (fd, atime, mtime, callback) {\n    this.wrapAsync(this.futimesBase, [fd, toUnixTimestamp(atime), toUnixTimestamp(mtime)], callback);\n  };\n\n  Volume.prototype.utimesBase = function (filename, atime, mtime) {\n    var fd = this.openSync(filename, 'r+');\n\n    try {\n      this.futimesBase(fd, atime, mtime);\n    } finally {\n      this.closeSync(fd);\n    }\n  };\n\n  Volume.prototype.utimesSync = function (path, atime, mtime) {\n    this.utimesBase(pathToFilename(path), toUnixTimestamp(atime), toUnixTimestamp(mtime));\n  };\n\n  Volume.prototype.utimes = function (path, atime, mtime, callback) {\n    this.wrapAsync(this.utimesBase, [pathToFilename(path), toUnixTimestamp(atime), toUnixTimestamp(mtime)], callback);\n  };\n\n  Volume.prototype.mkdirBase = function (filename, modeNum) {\n    var steps = filenameToSteps(filename); // This will throw if user tries to create root dir `fs.mkdirSync('/')`.\n\n    if (!steps.length) {\n      throw createError(EEXIST, 'mkdir', filename);\n    }\n\n    var dir = this.getLinkParentAsDirOrThrow(filename, 'mkdir'); // Check path already exists.\n\n    var name = steps[steps.length - 1];\n    if (dir.getChild(name)) throw createError(EEXIST, 'mkdir', filename);\n    dir.createChild(name, this.createNode(true, modeNum));\n  };\n  /**\n   * Creates directory tree recursively.\n   * @param filename\n   * @param modeNum\n   */\n\n\n  Volume.prototype.mkdirpBase = function (filename, modeNum) {\n    var steps = filenameToSteps(filename);\n    var link = this.root;\n\n    for (var i = 0; i < steps.length; i++) {\n      var step = steps[i];\n      if (!link.getNode().isDirectory()) throw createError(ENOTDIR, 'mkdir', link.getPath());\n      var child = link.getChild(step);\n\n      if (child) {\n        if (child.getNode().isDirectory()) link = child;else throw createError(ENOTDIR, 'mkdir', child.getPath());\n      } else {\n        link = link.createChild(step, this.createNode(true, modeNum));\n      }\n    }\n  };\n\n  Volume.prototype.mkdirSync = function (path, options) {\n    var opts = getMkdirOptions(options);\n    var modeNum = modeToNumber(opts.mode, 511);\n    var filename = pathToFilename(path);\n    if (opts.recursive) this.mkdirpBase(filename, modeNum);else this.mkdirBase(filename, modeNum);\n  };\n\n  Volume.prototype.mkdir = function (path, a, b) {\n    var opts = getMkdirOptions(a);\n    var callback = validateCallback(typeof a === 'function' ? a : b);\n    var modeNum = modeToNumber(opts.mode, 511);\n    var filename = pathToFilename(path);\n    if (opts.recursive) this.wrapAsync(this.mkdirpBase, [filename, modeNum], callback);else this.wrapAsync(this.mkdirBase, [filename, modeNum], callback);\n  }; // legacy interface\n\n\n  Volume.prototype.mkdirpSync = function (path, mode) {\n    this.mkdirSync(path, {\n      mode: mode,\n      recursive: true\n    });\n  };\n\n  Volume.prototype.mkdirp = function (path, a, b) {\n    var mode = typeof a === 'function' ? undefined : a;\n    var callback = validateCallback(typeof a === 'function' ? a : b);\n    this.mkdir(path, {\n      mode: mode,\n      recursive: true\n    }, callback);\n  };\n\n  Volume.prototype.mkdtempBase = function (prefix, encoding, retry) {\n    if (retry === void 0) {\n      retry = 5;\n    }\n\n    var filename = prefix + this.genRndStr();\n\n    try {\n      this.mkdirBase(filename, 511\n      /* DIR */\n      );\n      return (0, encoding_1.strToEncoding)(filename, encoding);\n    } catch (err) {\n      if (err.code === EEXIST) {\n        if (retry > 1) return this.mkdtempBase(prefix, encoding, retry - 1);else throw Error('Could not create temp dir.');\n      } else throw err;\n    }\n  };\n\n  Volume.prototype.mkdtempSync = function (prefix, options) {\n    var encoding = getDefaultOpts(options).encoding;\n    if (!prefix || typeof prefix !== 'string') throw new TypeError('filename prefix is required');\n    nullCheck(prefix);\n    return this.mkdtempBase(prefix, encoding);\n  };\n\n  Volume.prototype.mkdtemp = function (prefix, a, b) {\n    var _a = getDefaultOptsAndCb(a, b),\n        encoding = _a[0].encoding,\n        callback = _a[1];\n\n    if (!prefix || typeof prefix !== 'string') throw new TypeError('filename prefix is required');\n    if (!nullCheck(prefix)) return;\n    this.wrapAsync(this.mkdtempBase, [prefix, encoding], callback);\n  };\n\n  Volume.prototype.rmdirBase = function (filename, options) {\n    var opts = getRmdirOptions(options);\n    var link = this.getLinkAsDirOrThrow(filename, 'rmdir'); // Check directory is empty.\n\n    if (link.length && !opts.recursive) throw createError(ENOTEMPTY, 'rmdir', filename);\n    this.deleteLink(link);\n  };\n\n  Volume.prototype.rmdirSync = function (path, options) {\n    this.rmdirBase(pathToFilename(path), options);\n  };\n\n  Volume.prototype.rmdir = function (path, a, b) {\n    var opts = getRmdirOptions(a);\n    var callback = validateCallback(typeof a === 'function' ? a : b);\n    this.wrapAsync(this.rmdirBase, [pathToFilename(path), opts], callback);\n  };\n\n  Volume.prototype.rmBase = function (filename, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var link = this.getResolvedLink(filename);\n\n    if (!link) {\n      // \"stat\" is used to match Node's native error message.\n      if (!options.force) throw createError(ENOENT, 'stat', filename);\n      return;\n    }\n\n    if (link.getNode().isDirectory()) {\n      if (!options.recursive) {\n        throw createError(ERR_FS_EISDIR, 'rm', filename);\n      }\n    }\n\n    this.deleteLink(link);\n  };\n\n  Volume.prototype.rmSync = function (path, options) {\n    this.rmBase(pathToFilename(path), options);\n  };\n\n  Volume.prototype.rm = function (path, a, b) {\n    var _a = getRmOptsAndCb(a, b),\n        opts = _a[0],\n        callback = _a[1];\n\n    this.wrapAsync(this.rmBase, [pathToFilename(path), opts], callback);\n  };\n\n  Volume.prototype.fchmodBase = function (fd, modeNum) {\n    var file = this.getFileByFdOrThrow(fd, 'fchmod');\n    file.chmod(modeNum);\n  };\n\n  Volume.prototype.fchmodSync = function (fd, mode) {\n    this.fchmodBase(fd, modeToNumber(mode));\n  };\n\n  Volume.prototype.fchmod = function (fd, mode, callback) {\n    this.wrapAsync(this.fchmodBase, [fd, modeToNumber(mode)], callback);\n  };\n\n  Volume.prototype.chmodBase = function (filename, modeNum) {\n    var fd = this.openSync(filename, 'r+');\n\n    try {\n      this.fchmodBase(fd, modeNum);\n    } finally {\n      this.closeSync(fd);\n    }\n  };\n\n  Volume.prototype.chmodSync = function (path, mode) {\n    var modeNum = modeToNumber(mode);\n    var filename = pathToFilename(path);\n    this.chmodBase(filename, modeNum);\n  };\n\n  Volume.prototype.chmod = function (path, mode, callback) {\n    var modeNum = modeToNumber(mode);\n    var filename = pathToFilename(path);\n    this.wrapAsync(this.chmodBase, [filename, modeNum], callback);\n  };\n\n  Volume.prototype.lchmodBase = function (filename, modeNum) {\n    var fd = this.openBase(filename, O_RDWR, 0, false);\n\n    try {\n      this.fchmodBase(fd, modeNum);\n    } finally {\n      this.closeSync(fd);\n    }\n  };\n\n  Volume.prototype.lchmodSync = function (path, mode) {\n    var modeNum = modeToNumber(mode);\n    var filename = pathToFilename(path);\n    this.lchmodBase(filename, modeNum);\n  };\n\n  Volume.prototype.lchmod = function (path, mode, callback) {\n    var modeNum = modeToNumber(mode);\n    var filename = pathToFilename(path);\n    this.wrapAsync(this.lchmodBase, [filename, modeNum], callback);\n  };\n\n  Volume.prototype.fchownBase = function (fd, uid, gid) {\n    this.getFileByFdOrThrow(fd, 'fchown').chown(uid, gid);\n  };\n\n  Volume.prototype.fchownSync = function (fd, uid, gid) {\n    validateUid(uid);\n    validateGid(gid);\n    this.fchownBase(fd, uid, gid);\n  };\n\n  Volume.prototype.fchown = function (fd, uid, gid, callback) {\n    validateUid(uid);\n    validateGid(gid);\n    this.wrapAsync(this.fchownBase, [fd, uid, gid], callback);\n  };\n\n  Volume.prototype.chownBase = function (filename, uid, gid) {\n    var link = this.getResolvedLinkOrThrow(filename, 'chown');\n    var node = link.getNode();\n    node.chown(uid, gid); // if(node.isFile() || node.isSymlink()) {\n    //\n    // } else if(node.isDirectory()) {\n    //\n    // } else {\n    // TODO: What do we do here?\n    // }\n  };\n\n  Volume.prototype.chownSync = function (path, uid, gid) {\n    validateUid(uid);\n    validateGid(gid);\n    this.chownBase(pathToFilename(path), uid, gid);\n  };\n\n  Volume.prototype.chown = function (path, uid, gid, callback) {\n    validateUid(uid);\n    validateGid(gid);\n    this.wrapAsync(this.chownBase, [pathToFilename(path), uid, gid], callback);\n  };\n\n  Volume.prototype.lchownBase = function (filename, uid, gid) {\n    this.getLinkOrThrow(filename, 'lchown').getNode().chown(uid, gid);\n  };\n\n  Volume.prototype.lchownSync = function (path, uid, gid) {\n    validateUid(uid);\n    validateGid(gid);\n    this.lchownBase(pathToFilename(path), uid, gid);\n  };\n\n  Volume.prototype.lchown = function (path, uid, gid, callback) {\n    validateUid(uid);\n    validateGid(gid);\n    this.wrapAsync(this.lchownBase, [pathToFilename(path), uid, gid], callback);\n  };\n\n  Volume.prototype.watchFile = function (path, a, b) {\n    var filename = pathToFilename(path);\n    var options = a;\n    var listener = b;\n\n    if (typeof options === 'function') {\n      listener = a;\n      options = null;\n    }\n\n    if (typeof listener !== 'function') {\n      throw Error('\"watchFile()\" requires a listener function');\n    }\n\n    var interval = 5007;\n    var persistent = true;\n\n    if (options && _typeof(options) === 'object') {\n      if (typeof options.interval === 'number') interval = options.interval;\n      if (typeof options.persistent === 'boolean') persistent = options.persistent;\n    }\n\n    var watcher = this.statWatchers[filename];\n\n    if (!watcher) {\n      watcher = new this.StatWatcher();\n      watcher.start(filename, persistent, interval);\n      this.statWatchers[filename] = watcher;\n    }\n\n    watcher.addListener('change', listener);\n    return watcher;\n  };\n\n  Volume.prototype.unwatchFile = function (path, listener) {\n    var filename = pathToFilename(path);\n    var watcher = this.statWatchers[filename];\n    if (!watcher) return;\n\n    if (typeof listener === 'function') {\n      watcher.removeListener('change', listener);\n    } else {\n      watcher.removeAllListeners('change');\n    }\n\n    if (watcher.listenerCount('change') === 0) {\n      watcher.stop();\n      delete this.statWatchers[filename];\n    }\n  };\n\n  Volume.prototype.createReadStream = function (path, options) {\n    return new this.ReadStream(path, options);\n  };\n\n  Volume.prototype.createWriteStream = function (path, options) {\n    return new this.WriteStream(path, options);\n  }; // watch(path: PathLike): FSWatcher;\n  // watch(path: PathLike, options?: IWatchOptions | string): FSWatcher;\n\n\n  Volume.prototype.watch = function (path, options, listener) {\n    var filename = pathToFilename(path);\n    var givenOptions = options;\n\n    if (typeof options === 'function') {\n      listener = options;\n      givenOptions = null;\n    } // tslint:disable-next-line prefer-const\n\n\n    var _a = getDefaultOpts(givenOptions),\n        persistent = _a.persistent,\n        recursive = _a.recursive,\n        encoding = _a.encoding;\n\n    if (persistent === undefined) persistent = true;\n    if (recursive === undefined) recursive = false;\n    var watcher = new this.FSWatcher();\n    watcher.start(filename, persistent, recursive, encoding);\n\n    if (listener) {\n      watcher.addListener('change', listener);\n    }\n\n    return watcher;\n  };\n  /**\n   * Global file descriptor counter. UNIX file descriptors start from 0 and go sequentially\n   * up, so here, in order not to conflict with them, we choose some big number and descrease\n   * the file descriptor of every new opened file.\n   * @type {number}\n   * @todo This should not be static, right?\n   */\n\n\n  Volume.fd = 0x7fffffff;\n  return Volume;\n}();\n\nexports.Volume = Volume;\n\nfunction emitStop(self) {\n  self.emit('stop');\n}\n\nvar StatWatcher =\n/** @class */\nfunction (_super) {\n  __extends(StatWatcher, _super);\n\n  function StatWatcher(vol) {\n    var _this = _super.call(this) || this;\n\n    _this.onInterval = function () {\n      try {\n        var stats = _this.vol.statSync(_this.filename);\n\n        if (_this.hasChanged(stats)) {\n          _this.emit('change', stats, _this.prev);\n\n          _this.prev = stats;\n        }\n      } finally {\n        _this.loop();\n      }\n    };\n\n    _this.vol = vol;\n    return _this;\n  }\n\n  StatWatcher.prototype.loop = function () {\n    this.timeoutRef = this.setTimeout(this.onInterval, this.interval);\n  };\n\n  StatWatcher.prototype.hasChanged = function (stats) {\n    // if(!this.prev) return false;\n    if (stats.mtimeMs > this.prev.mtimeMs) return true;\n    if (stats.nlink !== this.prev.nlink) return true;\n    return false;\n  };\n\n  StatWatcher.prototype.start = function (path, persistent, interval) {\n    if (persistent === void 0) {\n      persistent = true;\n    }\n\n    if (interval === void 0) {\n      interval = 5007;\n    }\n\n    this.filename = pathToFilename(path);\n    this.setTimeout = persistent ? setTimeout.bind(typeof globalThis !== 'undefined' ? globalThis : global) : setTimeoutUnref_1.default;\n    this.interval = interval;\n    this.prev = this.vol.statSync(this.filename);\n    this.loop();\n  };\n\n  StatWatcher.prototype.stop = function () {\n    clearTimeout(this.timeoutRef);\n    process_1.default.nextTick(emitStop, this);\n  };\n\n  return StatWatcher;\n}(events_1.EventEmitter);\n\nexports.StatWatcher = StatWatcher;\nvar pool;\n\nfunction allocNewPool(poolSize) {\n  pool = (0, buffer_1.bufferAllocUnsafe)(poolSize);\n  pool.used = 0;\n}\n\nutil.inherits(FsReadStream, stream_1.Readable);\nexports.ReadStream = FsReadStream;\n\nfunction FsReadStream(vol, path, options) {\n  if (!(this instanceof FsReadStream)) return new FsReadStream(vol, path, options);\n  this._vol = vol; // a little bit bigger buffer and water marks by default\n\n  options = Object.assign({}, getOptions(options, {}));\n  if (options.highWaterMark === undefined) options.highWaterMark = 64 * 1024;\n  stream_1.Readable.call(this, options);\n  this.path = pathToFilename(path);\n  this.fd = options.fd === undefined ? null : options.fd;\n  this.flags = options.flags === undefined ? 'r' : options.flags;\n  this.mode = options.mode === undefined ? 438 : options.mode;\n  this.start = options.start;\n  this.end = options.end;\n  this.autoClose = options.autoClose === undefined ? true : options.autoClose;\n  this.pos = undefined;\n  this.bytesRead = 0;\n\n  if (this.start !== undefined) {\n    if (typeof this.start !== 'number') {\n      throw new TypeError('\"start\" option must be a Number');\n    }\n\n    if (this.end === undefined) {\n      this.end = Infinity;\n    } else if (typeof this.end !== 'number') {\n      throw new TypeError('\"end\" option must be a Number');\n    }\n\n    if (this.start > this.end) {\n      throw new Error('\"start\" option must be <= \"end\" option');\n    }\n\n    this.pos = this.start;\n  }\n\n  if (typeof this.fd !== 'number') this.open();\n  this.on('end', function () {\n    if (this.autoClose) {\n      if (this.destroy) this.destroy();\n    }\n  });\n}\n\nFsReadStream.prototype.open = function () {\n  var self = this; // tslint:disable-line no-this-assignment\n\n  this._vol.open(this.path, this.flags, this.mode, function (er, fd) {\n    if (er) {\n      if (self.autoClose) {\n        if (self.destroy) self.destroy();\n      }\n\n      self.emit('error', er);\n      return;\n    }\n\n    self.fd = fd;\n    self.emit('open', fd); // start the flow of data.\n\n    self.read();\n  });\n};\n\nFsReadStream.prototype._read = function (n) {\n  if (typeof this.fd !== 'number') {\n    return this.once('open', function () {\n      this._read(n);\n    });\n  }\n\n  if (this.destroyed) return;\n\n  if (!pool || pool.length - pool.used < kMinPoolSpace) {\n    // discard the old pool.\n    allocNewPool(this._readableState.highWaterMark);\n  } // Grab another reference to the pool in the case that while we're\n  // in the thread pool another read() finishes up the pool, and\n  // allocates a new one.\n\n\n  var thisPool = pool;\n  var toRead = Math.min(pool.length - pool.used, n);\n  var start = pool.used;\n  if (this.pos !== undefined) toRead = Math.min(this.end - this.pos + 1, toRead); // already read everything we were supposed to read!\n  // treat as EOF.\n\n  if (toRead <= 0) return this.push(null); // the actual read.\n\n  var self = this; // tslint:disable-line no-this-assignment\n\n  this._vol.read(this.fd, pool, pool.used, toRead, this.pos, onread); // move the pool positions, and internal position for reading.\n\n\n  if (this.pos !== undefined) this.pos += toRead;\n  pool.used += toRead;\n\n  function onread(er, bytesRead) {\n    if (er) {\n      if (self.autoClose && self.destroy) {\n        self.destroy();\n      }\n\n      self.emit('error', er);\n    } else {\n      var b = null;\n\n      if (bytesRead > 0) {\n        self.bytesRead += bytesRead;\n        b = thisPool.slice(start, start + bytesRead);\n      }\n\n      self.push(b);\n    }\n  }\n};\n\nFsReadStream.prototype._destroy = function (err, cb) {\n  this.close(function (err2) {\n    cb(err || err2);\n  });\n};\n\nFsReadStream.prototype.close = function (cb) {\n  var _this = this;\n\n  if (cb) this.once('close', cb);\n\n  if (this.closed || typeof this.fd !== 'number') {\n    if (typeof this.fd !== 'number') {\n      this.once('open', closeOnOpen);\n      return;\n    }\n\n    return process_1.default.nextTick(function () {\n      return _this.emit('close');\n    });\n  }\n\n  this.closed = true;\n\n  this._vol.close(this.fd, function (er) {\n    if (er) _this.emit('error', er);else _this.emit('close');\n  });\n\n  this.fd = null;\n}; // needed because as it will be called with arguments\n// that does not match this.close() signature\n\n\nfunction closeOnOpen(fd) {\n  this.close();\n}\n\nutil.inherits(FsWriteStream, stream_1.Writable);\nexports.WriteStream = FsWriteStream;\n\nfunction FsWriteStream(vol, path, options) {\n  if (!(this instanceof FsWriteStream)) return new FsWriteStream(vol, path, options);\n  this._vol = vol;\n  options = Object.assign({}, getOptions(options, {}));\n  stream_1.Writable.call(this, options);\n  this.path = pathToFilename(path);\n  this.fd = options.fd === undefined ? null : options.fd;\n  this.flags = options.flags === undefined ? 'w' : options.flags;\n  this.mode = options.mode === undefined ? 438 : options.mode;\n  this.start = options.start;\n  this.autoClose = options.autoClose === undefined ? true : !!options.autoClose;\n  this.pos = undefined;\n  this.bytesWritten = 0;\n\n  if (this.start !== undefined) {\n    if (typeof this.start !== 'number') {\n      throw new TypeError('\"start\" option must be a Number');\n    }\n\n    if (this.start < 0) {\n      throw new Error('\"start\" must be >= zero');\n    }\n\n    this.pos = this.start;\n  }\n\n  if (options.encoding) this.setDefaultEncoding(options.encoding);\n  if (typeof this.fd !== 'number') this.open(); // dispose on finish.\n\n  this.once('finish', function () {\n    if (this.autoClose) {\n      this.close();\n    }\n  });\n}\n\nFsWriteStream.prototype.open = function () {\n  this._vol.open(this.path, this.flags, this.mode, function (er, fd) {\n    if (er) {\n      if (this.autoClose && this.destroy) {\n        this.destroy();\n      }\n\n      this.emit('error', er);\n      return;\n    }\n\n    this.fd = fd;\n    this.emit('open', fd);\n  }.bind(this));\n};\n\nFsWriteStream.prototype._write = function (data, encoding, cb) {\n  if (!(data instanceof buffer_1.Buffer)) return this.emit('error', new Error('Invalid data'));\n\n  if (typeof this.fd !== 'number') {\n    return this.once('open', function () {\n      this._write(data, encoding, cb);\n    });\n  }\n\n  var self = this; // tslint:disable-line no-this-assignment\n\n  this._vol.write(this.fd, data, 0, data.length, this.pos, function (er, bytes) {\n    if (er) {\n      if (self.autoClose && self.destroy) {\n        self.destroy();\n      }\n\n      return cb(er);\n    }\n\n    self.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined) this.pos += data.length;\n};\n\nFsWriteStream.prototype._writev = function (data, cb) {\n  if (typeof this.fd !== 'number') {\n    return this.once('open', function () {\n      this._writev(data, cb);\n    });\n  }\n\n  var self = this; // tslint:disable-line no-this-assignment\n\n  var len = data.length;\n  var chunks = new Array(len);\n  var size = 0;\n\n  for (var i = 0; i < len; i++) {\n    var chunk = data[i].chunk;\n    chunks[i] = chunk;\n    size += chunk.length;\n  }\n\n  var buf = buffer_1.Buffer.concat(chunks);\n\n  this._vol.write(this.fd, buf, 0, buf.length, this.pos, function (er, bytes) {\n    if (er) {\n      if (self.destroy) self.destroy();\n      return cb(er);\n    }\n\n    self.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined) this.pos += size;\n};\n\nFsWriteStream.prototype._destroy = FsReadStream.prototype._destroy;\nFsWriteStream.prototype.close = FsReadStream.prototype.close; // There is no shutdown() for files.\n\nFsWriteStream.prototype.destroySoon = FsWriteStream.prototype.end; // ---------------------------------------- FSWatcher\n\nvar FSWatcher =\n/** @class */\nfunction (_super) {\n  __extends(FSWatcher, _super);\n\n  function FSWatcher(vol) {\n    var _this = _super.call(this) || this;\n\n    _this._filename = '';\n    _this._filenameEncoded = ''; // _persistent: boolean = true;\n\n    _this._recursive = false;\n    _this._encoding = encoding_1.ENCODING_UTF8;\n\n    _this._onNodeChange = function () {\n      _this._emit('change');\n    };\n\n    _this._onParentChild = function (link) {\n      if (link.getName() === _this._getName()) {\n        _this._emit('rename');\n      }\n    };\n\n    _this._emit = function (type) {\n      _this.emit('change', type, _this._filenameEncoded);\n    };\n\n    _this._persist = function () {\n      _this._timer = setTimeout(_this._persist, 1e6);\n    };\n\n    _this._vol = vol;\n    return _this; // TODO: Emit \"error\" messages when watching.\n    // this._handle.onchange = function(status, eventType, filename) {\n    //     if (status < 0) {\n    //         self._handle.close();\n    //         const error = !filename ?\n    //             errnoException(status, 'Error watching file for changes:') :\n    //             errnoException(status, `Error watching file ${filename} for changes:`);\n    //         error.filename = filename;\n    //         self.emit('error', error);\n    //     } else {\n    //         self.emit('change', eventType, filename);\n    //     }\n    // };\n  }\n\n  FSWatcher.prototype._getName = function () {\n    return this._steps[this._steps.length - 1];\n  };\n\n  FSWatcher.prototype.start = function (path, persistent, recursive, encoding) {\n    if (persistent === void 0) {\n      persistent = true;\n    }\n\n    if (recursive === void 0) {\n      recursive = false;\n    }\n\n    if (encoding === void 0) {\n      encoding = encoding_1.ENCODING_UTF8;\n    }\n\n    this._filename = pathToFilename(path);\n    this._steps = filenameToSteps(this._filename);\n    this._filenameEncoded = (0, encoding_1.strToEncoding)(this._filename); // this._persistent = persistent;\n\n    this._recursive = recursive;\n    this._encoding = encoding;\n\n    try {\n      this._link = this._vol.getLinkOrThrow(this._filename, 'FSWatcher');\n    } catch (err) {\n      var error = new Error(\"watch \".concat(this._filename, \" \").concat(err.code));\n      error.code = err.code;\n      error.errno = err.code;\n      throw error;\n    }\n\n    this._link.getNode().on('change', this._onNodeChange);\n\n    this._link.on('child:add', this._onNodeChange);\n\n    this._link.on('child:delete', this._onNodeChange);\n\n    var parent = this._link.parent;\n\n    if (parent) {\n      // parent.on('child:add', this._onParentChild);\n      parent.setMaxListeners(parent.getMaxListeners() + 1);\n      parent.on('child:delete', this._onParentChild);\n    }\n\n    if (persistent) this._persist();\n  };\n\n  FSWatcher.prototype.close = function () {\n    clearTimeout(this._timer);\n\n    this._link.getNode().removeListener('change', this._onNodeChange);\n\n    var parent = this._link.parent;\n\n    if (parent) {\n      // parent.removeListener('child:add', this._onParentChild);\n      parent.removeListener('child:delete', this._onParentChild);\n    }\n  };\n\n  return FSWatcher;\n}(events_1.EventEmitter);\n\nexports.FSWatcher = FSWatcher;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/memfs/lib/volume.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__spreadArray","to","from","pack","arguments","length","i","l","ar","slice","concat","defineProperty","exports","value","FSWatcher","StatWatcher","Volume","toUnixTimestamp","bufferToEncoding","dataToBuffer","dataToStr","pathToSteps","filenameToSteps","pathToFilename","flagsToNumber","FLAGS","pathModule","require","node_1","Stats_1","Dirent_1","buffer_1","setImmediate_1","process_1","setTimeoutUnref_1","stream_1","constants_1","events_1","encoding_1","errors","util","promises_1","resolveCrossPlatform","resolve","O_RDONLY","constants","O_WRONLY","O_RDWR","O_CREAT","O_EXCL","O_TRUNC","O_APPEND","O_SYNC","O_DIRECTORY","F_OK","COPYFILE_EXCL","COPYFILE_FICLONE_FORCE","_a","posix","sep","relative","join","dirname","isWin","default","platform","kMinPoolSpace","ERRSTR","PATH_STR","FD","MODE_INT","CB","UID","GID","LEN","ATIME","MTIME","PREFIX","BUFFER","OFFSET","LENGTH","POSITION","ERRSTR_OPTS","tipeof","ENOENT","EBADF","EINVAL","EPERM","EPROTO","EEXIST","ENOTDIR","EMFILE","EACCES","EISDIR","ENOTEMPTY","ENOSYS","ERR_FS_EISDIR","formatError","errorCode","func","path","path2","pathFormatted","createError","Constructor","Error","error","code","rs","wx","ax","flags","flagsNum","getOptions","defaults","options","opts","assign","encoding","assertEncoding","optsGenerator","validateCallback","callback","optsAndCbGenerator","getOpts","optsDefaults","getDefaultOpts","getDefaultOptsAndCb","readFileOptsDefaults","flag","getReadFileOptions","writeFileDefaults","mode","w","getWriteFileOptions","appendFileDefaults","a","getAppendFileOpts","getAppendFileOptsAndCb","realpathDefaults","getRealpathOptions","getRealpathOptsAndCb","mkdirDefaults","recursive","getMkdirOptions","rmdirDefaults","getRmdirOptions","getRmOpts","getRmOptsAndCb","readdirDefaults","withFileTypes","getReaddirOptions","getReaddirOptsAndCb","statDefaults","bigint","getStatOptions","getStatOptsAndCb","getPathFromURLPosix","url","hostname","pathname","n","third","codePointAt","decodeURIComponent","Buffer","isBuffer","URL","err","pathString","nullCheck","filename","base","cwd","_resolve_1","unixify_1","unixify","fullPath","fullPathSansSlash","substr","split","data","ENCODING_UTF8","toString","Uint8Array","bufferFrom","buffer","indexOf","er","nextTick","_modeToNumber","def","parseInt","modeToNumber","undefined","result","isNaN","isFd","validateFd","fd","time","Date","getTime","isFinite","now","validateUid","uid","validateGid","gid","flattenJSON","nestedJSON","flatJSON","flatten","pathPrefix","node","contentOrNode","joinedPath","keys","props","ino","inodes","releasedInos","fds","releasedFds","maxFiles","openFiles","promisesApi","statWatchers","Node","Link","File","root","createLink","setNode","createNode","self","_super","_ReadStream","FsReadStream","ReadStream","class_1","args","_i","apply","_WriteStream","FsWriteStream","WriteStream","class_2","fromJSON","json","vol","fromNestedJSON","get","enumerable","configurable","parent","name","isDirectory","perm","createChild","deleteLink","link","deleteChild","newInoNumber","releasedFd","pop","newFdNumber","setIsDirectory","getNode","deleteNode","del","push","genRndStr","str","Math","random","getLink","steps","walk","getLinkOrThrow","funcName","getResolvedLink","filenameOrSteps","step","getChild","isSymlink","symlink","getResolvedLinkOrThrow","resolveSymlinks","getLinkAsDirOrThrow","getLinkParent","getLinkParentAsDirOrThrow","getFileByFd","getFileByFdOrThrow","file","wrapAsync","method","_this","_toJSON","isEmpty","children","isFile","getName","name_1","child","getPath","getString","dirPath","toJSON","paths","isRelative","links","paths_1","links_1","dir","mkdirpBase","writeFileSync","reset","mountSync","mountpoint","openLink","realLink","canRead","truncate","openFile","modeNum","dirLink","openBase","openSync","fileName","open","closeFile","closeSync","close","openFileOrGetById","id","readBase","offset","position","read","Number","readSync","bytes","readFileBase","isUserFd","userOwnsFd","getBuffer","readFileSync","readFile","writeBase","buf","write","writeSync","c","e","tipa","tipb","tipc","tipd","cb","writeFileBase","written","writeFile","linkBase","filename1","filename2","steps1","link1","steps2","dir2","nlink","copyFileBase","src","dest","existsSync","copyFileSync","srcFilename","destFilename","copyFile","linkSync","existingPath","newPath","existingPathFilename","newPathFilename","unlinkBase","unlinkSync","unlink","symlinkBase","targetFilename","pathFilename","pathSteps","makeSymlink","symlinkSync","target","type","realpathBase","strToEncoding","realpathSync","realpath","lstatBase","throwIfNoEntry","build","lstatSync","_b","_c","lstat","_d","statBase","statSync","stat","fstatBase","fstatSync","fstat","renameBase","oldPathFilename","newPathSteps","newPathDirLink","oldLinkParent","setChild","renameSync","oldPath","rename","existsBase","exists","accessBase","accessSync","access","appendFileSync","appendFile","readdirBase","list_1","name_2","sort","list","name_3","readdirSync","readdir","readlinkBase","readlinkSync","readlink","fsyncBase","fsyncSync","fsync","fdatasyncBase","fdatasyncSync","fdatasync","ftruncateBase","len","ftruncateSync","ftruncate","truncateBase","truncateSync","futimesBase","atime","mtime","futimesSync","futimes","utimesBase","utimesSync","utimes","mkdirBase","mkdirSync","mkdir","mkdirpSync","mkdirp","mkdtempBase","prefix","retry","mkdtempSync","mkdtemp","rmdirBase","rmdirSync","rmdir","rmBase","force","rmSync","rm","fchmodBase","chmod","fchmodSync","fchmod","chmodBase","chmodSync","lchmodBase","lchmodSync","lchmod","fchownBase","chown","fchownSync","fchown","chownBase","chownSync","lchownBase","lchownSync","lchown","watchFile","listener","interval","persistent","watcher","start","addListener","unwatchFile","removeListener","removeAllListeners","listenerCount","stop","createReadStream","createWriteStream","watch","givenOptions","emitStop","emit","onInterval","stats","hasChanged","prev","loop","timeoutRef","setTimeout","mtimeMs","bind","globalThis","global","clearTimeout","EventEmitter","pool","allocNewPool","poolSize","bufferAllocUnsafe","used","inherits","Readable","_vol","highWaterMark","end","autoClose","pos","bytesRead","Infinity","on","destroy","_read","once","destroyed","_readableState","thisPool","toRead","min","onread","_destroy","err2","closed","closeOnOpen","Writable","bytesWritten","setDefaultEncoding","_write","_writev","chunks","size","chunk","destroySoon","_filename","_filenameEncoded","_recursive","_encoding","_onNodeChange","_emit","_onParentChild","_getName","_persist","_timer","_steps","_link","errno","setMaxListeners","getMaxListeners"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FSWatcher = exports.StatWatcher = exports.Volume = exports.toUnixTimestamp = exports.bufferToEncoding = exports.dataToBuffer = exports.dataToStr = exports.pathToSteps = exports.filenameToSteps = exports.pathToFilename = exports.flagsToNumber = exports.FLAGS = void 0;\nvar pathModule = require(\"path\");\nvar node_1 = require(\"./node\");\nvar Stats_1 = require(\"./Stats\");\nvar Dirent_1 = require(\"./Dirent\");\nvar buffer_1 = require(\"./internal/buffer\");\nvar setImmediate_1 = require(\"./setImmediate\");\nvar process_1 = require(\"./process\");\nvar setTimeoutUnref_1 = require(\"./setTimeoutUnref\");\nvar stream_1 = require(\"stream\");\nvar constants_1 = require(\"./constants\");\nvar events_1 = require(\"events\");\nvar encoding_1 = require(\"./encoding\");\nvar errors = require(\"./internal/errors\");\nvar util = require(\"util\");\nvar promises_1 = require(\"./promises\");\nvar resolveCrossPlatform = pathModule.resolve;\nvar O_RDONLY = constants_1.constants.O_RDONLY, O_WRONLY = constants_1.constants.O_WRONLY, O_RDWR = constants_1.constants.O_RDWR, O_CREAT = constants_1.constants.O_CREAT, O_EXCL = constants_1.constants.O_EXCL, O_TRUNC = constants_1.constants.O_TRUNC, O_APPEND = constants_1.constants.O_APPEND, O_SYNC = constants_1.constants.O_SYNC, O_DIRECTORY = constants_1.constants.O_DIRECTORY, F_OK = constants_1.constants.F_OK, COPYFILE_EXCL = constants_1.constants.COPYFILE_EXCL, COPYFILE_FICLONE_FORCE = constants_1.constants.COPYFILE_FICLONE_FORCE;\nvar _a = pathModule.posix ? pathModule.posix : pathModule, sep = _a.sep, relative = _a.relative, join = _a.join, dirname = _a.dirname;\nvar isWin = process_1.default.platform === 'win32';\nvar kMinPoolSpace = 128;\n// const kMaxLength = require('buffer').kMaxLength;\n// ---------------------------------------- Error messages\n// TODO: Use `internal/errors.js` in the future.\nvar ERRSTR = {\n    PATH_STR: 'path must be a string or Buffer',\n    // FD:             'file descriptor must be a unsigned 32-bit integer',\n    FD: 'fd must be a file descriptor',\n    MODE_INT: 'mode must be an int',\n    CB: 'callback must be a function',\n    UID: 'uid must be an unsigned int',\n    GID: 'gid must be an unsigned int',\n    LEN: 'len must be an integer',\n    ATIME: 'atime must be an integer',\n    MTIME: 'mtime must be an integer',\n    PREFIX: 'filename prefix is required',\n    BUFFER: 'buffer must be an instance of Buffer or StaticBuffer',\n    OFFSET: 'offset must be an integer',\n    LENGTH: 'length must be an integer',\n    POSITION: 'position must be an integer',\n};\nvar ERRSTR_OPTS = function (tipeof) { return \"Expected options to be either an object or a string, but got \".concat(tipeof, \" instead\"); };\n// const ERRSTR_FLAG = flag => `Unknown file open flag: ${flag}`;\nvar ENOENT = 'ENOENT';\nvar EBADF = 'EBADF';\nvar EINVAL = 'EINVAL';\nvar EPERM = 'EPERM';\nvar EPROTO = 'EPROTO';\nvar EEXIST = 'EEXIST';\nvar ENOTDIR = 'ENOTDIR';\nvar EMFILE = 'EMFILE';\nvar EACCES = 'EACCES';\nvar EISDIR = 'EISDIR';\nvar ENOTEMPTY = 'ENOTEMPTY';\nvar ENOSYS = 'ENOSYS';\nvar ERR_FS_EISDIR = 'ERR_FS_EISDIR';\nfunction formatError(errorCode, func, path, path2) {\n    if (func === void 0) { func = ''; }\n    if (path === void 0) { path = ''; }\n    if (path2 === void 0) { path2 = ''; }\n    var pathFormatted = '';\n    if (path)\n        pathFormatted = \" '\".concat(path, \"'\");\n    if (path2)\n        pathFormatted += \" -> '\".concat(path2, \"'\");\n    switch (errorCode) {\n        case ENOENT:\n            return \"ENOENT: no such file or directory, \".concat(func).concat(pathFormatted);\n        case EBADF:\n            return \"EBADF: bad file descriptor, \".concat(func).concat(pathFormatted);\n        case EINVAL:\n            return \"EINVAL: invalid argument, \".concat(func).concat(pathFormatted);\n        case EPERM:\n            return \"EPERM: operation not permitted, \".concat(func).concat(pathFormatted);\n        case EPROTO:\n            return \"EPROTO: protocol error, \".concat(func).concat(pathFormatted);\n        case EEXIST:\n            return \"EEXIST: file already exists, \".concat(func).concat(pathFormatted);\n        case ENOTDIR:\n            return \"ENOTDIR: not a directory, \".concat(func).concat(pathFormatted);\n        case EISDIR:\n            return \"EISDIR: illegal operation on a directory, \".concat(func).concat(pathFormatted);\n        case EACCES:\n            return \"EACCES: permission denied, \".concat(func).concat(pathFormatted);\n        case ENOTEMPTY:\n            return \"ENOTEMPTY: directory not empty, \".concat(func).concat(pathFormatted);\n        case EMFILE:\n            return \"EMFILE: too many open files, \".concat(func).concat(pathFormatted);\n        case ENOSYS:\n            return \"ENOSYS: function not implemented, \".concat(func).concat(pathFormatted);\n        case ERR_FS_EISDIR:\n            return \"[ERR_FS_EISDIR]: Path is a directory: \".concat(func, \" returned EISDIR (is a directory) \").concat(path);\n        default:\n            return \"\".concat(errorCode, \": error occurred, \").concat(func).concat(pathFormatted);\n    }\n}\nfunction createError(errorCode, func, path, path2, Constructor) {\n    if (func === void 0) { func = ''; }\n    if (path === void 0) { path = ''; }\n    if (path2 === void 0) { path2 = ''; }\n    if (Constructor === void 0) { Constructor = Error; }\n    var error = new Constructor(formatError(errorCode, func, path, path2));\n    error.code = errorCode;\n    return error;\n}\n// ---------------------------------------- Flags\n// List of file `flags` as defined by Node.\nvar FLAGS;\n(function (FLAGS) {\n    // Open file for reading. An exception occurs if the file does not exist.\n    FLAGS[FLAGS[\"r\"] = O_RDONLY] = \"r\";\n    // Open file for reading and writing. An exception occurs if the file does not exist.\n    FLAGS[FLAGS[\"r+\"] = O_RDWR] = \"r+\";\n    // Open file for reading in synchronous mode. Instructs the operating system to bypass the local file system cache.\n    FLAGS[FLAGS[\"rs\"] = O_RDONLY | O_SYNC] = \"rs\";\n    FLAGS[FLAGS[\"sr\"] = FLAGS.rs] = \"sr\";\n    // Open file for reading and writing, telling the OS to open it synchronously. See notes for 'rs' about using this with caution.\n    FLAGS[FLAGS[\"rs+\"] = O_RDWR | O_SYNC] = \"rs+\";\n    FLAGS[FLAGS[\"sr+\"] = FLAGS['rs+']] = \"sr+\";\n    // Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n    FLAGS[FLAGS[\"w\"] = O_WRONLY | O_CREAT | O_TRUNC] = \"w\";\n    // Like 'w' but fails if path exists.\n    FLAGS[FLAGS[\"wx\"] = O_WRONLY | O_CREAT | O_TRUNC | O_EXCL] = \"wx\";\n    FLAGS[FLAGS[\"xw\"] = FLAGS.wx] = \"xw\";\n    // Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n    FLAGS[FLAGS[\"w+\"] = O_RDWR | O_CREAT | O_TRUNC] = \"w+\";\n    // Like 'w+' but fails if path exists.\n    FLAGS[FLAGS[\"wx+\"] = O_RDWR | O_CREAT | O_TRUNC | O_EXCL] = \"wx+\";\n    FLAGS[FLAGS[\"xw+\"] = FLAGS['wx+']] = \"xw+\";\n    // Open file for appending. The file is created if it does not exist.\n    FLAGS[FLAGS[\"a\"] = O_WRONLY | O_APPEND | O_CREAT] = \"a\";\n    // Like 'a' but fails if path exists.\n    FLAGS[FLAGS[\"ax\"] = O_WRONLY | O_APPEND | O_CREAT | O_EXCL] = \"ax\";\n    FLAGS[FLAGS[\"xa\"] = FLAGS.ax] = \"xa\";\n    // Open file for reading and appending. The file is created if it does not exist.\n    FLAGS[FLAGS[\"a+\"] = O_RDWR | O_APPEND | O_CREAT] = \"a+\";\n    // Like 'a+' but fails if path exists.\n    FLAGS[FLAGS[\"ax+\"] = O_RDWR | O_APPEND | O_CREAT | O_EXCL] = \"ax+\";\n    FLAGS[FLAGS[\"xa+\"] = FLAGS['ax+']] = \"xa+\";\n})(FLAGS = exports.FLAGS || (exports.FLAGS = {}));\nfunction flagsToNumber(flags) {\n    if (typeof flags === 'number')\n        return flags;\n    if (typeof flags === 'string') {\n        var flagsNum = FLAGS[flags];\n        if (typeof flagsNum !== 'undefined')\n            return flagsNum;\n    }\n    // throw new TypeError(formatError(ERRSTR_FLAG(flags)));\n    throw new errors.TypeError('ERR_INVALID_OPT_VALUE', 'flags', flags);\n}\nexports.flagsToNumber = flagsToNumber;\n// ---------------------------------------- Options\nfunction getOptions(defaults, options) {\n    var opts;\n    if (!options)\n        return defaults;\n    else {\n        var tipeof = typeof options;\n        switch (tipeof) {\n            case 'string':\n                opts = Object.assign({}, defaults, { encoding: options });\n                break;\n            case 'object':\n                opts = Object.assign({}, defaults, options);\n                break;\n            default:\n                throw TypeError(ERRSTR_OPTS(tipeof));\n        }\n    }\n    if (opts.encoding !== 'buffer')\n        (0, encoding_1.assertEncoding)(opts.encoding);\n    return opts;\n}\nfunction optsGenerator(defaults) {\n    return function (options) { return getOptions(defaults, options); };\n}\nfunction validateCallback(callback) {\n    if (typeof callback !== 'function')\n        throw TypeError(ERRSTR.CB);\n    return callback;\n}\nfunction optsAndCbGenerator(getOpts) {\n    return function (options, callback) {\n        return typeof options === 'function' ? [getOpts(), options] : [getOpts(options), validateCallback(callback)];\n    };\n}\nvar optsDefaults = {\n    encoding: 'utf8',\n};\nvar getDefaultOpts = optsGenerator(optsDefaults);\nvar getDefaultOptsAndCb = optsAndCbGenerator(getDefaultOpts);\nvar readFileOptsDefaults = {\n    flag: 'r',\n};\nvar getReadFileOptions = optsGenerator(readFileOptsDefaults);\nvar writeFileDefaults = {\n    encoding: 'utf8',\n    mode: 438 /* DEFAULT */,\n    flag: FLAGS[FLAGS.w],\n};\nvar getWriteFileOptions = optsGenerator(writeFileDefaults);\nvar appendFileDefaults = {\n    encoding: 'utf8',\n    mode: 438 /* DEFAULT */,\n    flag: FLAGS[FLAGS.a],\n};\nvar getAppendFileOpts = optsGenerator(appendFileDefaults);\nvar getAppendFileOptsAndCb = optsAndCbGenerator(getAppendFileOpts);\nvar realpathDefaults = optsDefaults;\nvar getRealpathOptions = optsGenerator(realpathDefaults);\nvar getRealpathOptsAndCb = optsAndCbGenerator(getRealpathOptions);\nvar mkdirDefaults = {\n    mode: 511 /* DIR */,\n    recursive: false,\n};\nvar getMkdirOptions = function (options) {\n    if (typeof options === 'number')\n        return Object.assign({}, mkdirDefaults, { mode: options });\n    return Object.assign({}, mkdirDefaults, options);\n};\nvar rmdirDefaults = {\n    recursive: false,\n};\nvar getRmdirOptions = function (options) {\n    return Object.assign({}, rmdirDefaults, options);\n};\nvar getRmOpts = optsGenerator(optsDefaults);\nvar getRmOptsAndCb = optsAndCbGenerator(getRmOpts);\nvar readdirDefaults = {\n    encoding: 'utf8',\n    withFileTypes: false,\n};\nvar getReaddirOptions = optsGenerator(readdirDefaults);\nvar getReaddirOptsAndCb = optsAndCbGenerator(getReaddirOptions);\nvar statDefaults = {\n    bigint: false,\n};\nvar getStatOptions = function (options) {\n    if (options === void 0) { options = {}; }\n    return Object.assign({}, statDefaults, options);\n};\nvar getStatOptsAndCb = function (options, callback) {\n    return typeof options === 'function' ? [getStatOptions(), options] : [getStatOptions(options), validateCallback(callback)];\n};\n// ---------------------------------------- Utility functions\nfunction getPathFromURLPosix(url) {\n    if (url.hostname !== '') {\n        throw new errors.TypeError('ERR_INVALID_FILE_URL_HOST', process_1.default.platform);\n    }\n    var pathname = url.pathname;\n    for (var n = 0; n < pathname.length; n++) {\n        if (pathname[n] === '%') {\n            var third = pathname.codePointAt(n + 2) | 0x20;\n            if (pathname[n + 1] === '2' && third === 102) {\n                throw new errors.TypeError('ERR_INVALID_FILE_URL_PATH', 'must not include encoded / characters');\n            }\n        }\n    }\n    return decodeURIComponent(pathname);\n}\nfunction pathToFilename(path) {\n    if (typeof path !== 'string' && !buffer_1.Buffer.isBuffer(path)) {\n        try {\n            if (!(path instanceof require('url').URL))\n                throw new TypeError(ERRSTR.PATH_STR);\n        }\n        catch (err) {\n            throw new TypeError(ERRSTR.PATH_STR);\n        }\n        path = getPathFromURLPosix(path);\n    }\n    var pathString = String(path);\n    nullCheck(pathString);\n    // return slash(pathString);\n    return pathString;\n}\nexports.pathToFilename = pathToFilename;\nvar resolve = function (filename, base) {\n    if (base === void 0) { base = process_1.default.cwd(); }\n    return resolveCrossPlatform(base, filename);\n};\nif (isWin) {\n    var _resolve_1 = resolve;\n    var unixify_1 = require('fs-monkey/lib/correctPath').unixify;\n    resolve = function (filename, base) { return unixify_1(_resolve_1(filename, base)); };\n}\nfunction filenameToSteps(filename, base) {\n    var fullPath = resolve(filename, base);\n    var fullPathSansSlash = fullPath.substr(1);\n    if (!fullPathSansSlash)\n        return [];\n    return fullPathSansSlash.split(sep);\n}\nexports.filenameToSteps = filenameToSteps;\nfunction pathToSteps(path) {\n    return filenameToSteps(pathToFilename(path));\n}\nexports.pathToSteps = pathToSteps;\nfunction dataToStr(data, encoding) {\n    if (encoding === void 0) { encoding = encoding_1.ENCODING_UTF8; }\n    if (buffer_1.Buffer.isBuffer(data))\n        return data.toString(encoding);\n    else if (data instanceof Uint8Array)\n        return (0, buffer_1.bufferFrom)(data).toString(encoding);\n    else\n        return String(data);\n}\nexports.dataToStr = dataToStr;\nfunction dataToBuffer(data, encoding) {\n    if (encoding === void 0) { encoding = encoding_1.ENCODING_UTF8; }\n    if (buffer_1.Buffer.isBuffer(data))\n        return data;\n    else if (data instanceof Uint8Array)\n        return (0, buffer_1.bufferFrom)(data);\n    else\n        return (0, buffer_1.bufferFrom)(String(data), encoding);\n}\nexports.dataToBuffer = dataToBuffer;\nfunction bufferToEncoding(buffer, encoding) {\n    if (!encoding || encoding === 'buffer')\n        return buffer;\n    else\n        return buffer.toString(encoding);\n}\nexports.bufferToEncoding = bufferToEncoding;\nfunction nullCheck(path, callback) {\n    if (('' + path).indexOf('\\u0000') !== -1) {\n        var er = new Error('Path must be a string without null bytes');\n        er.code = ENOENT;\n        if (typeof callback !== 'function')\n            throw er;\n        process_1.default.nextTick(callback, er);\n        return false;\n    }\n    return true;\n}\nfunction _modeToNumber(mode, def) {\n    if (typeof mode === 'number')\n        return mode;\n    if (typeof mode === 'string')\n        return parseInt(mode, 8);\n    if (def)\n        return modeToNumber(def);\n    return undefined;\n}\nfunction modeToNumber(mode, def) {\n    var result = _modeToNumber(mode, def);\n    if (typeof result !== 'number' || isNaN(result))\n        throw new TypeError(ERRSTR.MODE_INT);\n    return result;\n}\nfunction isFd(path) {\n    return path >>> 0 === path;\n}\nfunction validateFd(fd) {\n    if (!isFd(fd))\n        throw TypeError(ERRSTR.FD);\n}\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time) {\n    // tslint:disable-next-line triple-equals\n    if (typeof time === 'string' && +time == time) {\n        return +time;\n    }\n    if (time instanceof Date) {\n        return time.getTime() / 1000;\n    }\n    if (isFinite(time)) {\n        if (time < 0) {\n            return Date.now() / 1000;\n        }\n        return time;\n    }\n    throw new Error('Cannot parse time: ' + time);\n}\nexports.toUnixTimestamp = toUnixTimestamp;\nfunction validateUid(uid) {\n    if (typeof uid !== 'number')\n        throw TypeError(ERRSTR.UID);\n}\nfunction validateGid(gid) {\n    if (typeof gid !== 'number')\n        throw TypeError(ERRSTR.GID);\n}\nfunction flattenJSON(nestedJSON) {\n    var flatJSON = {};\n    function flatten(pathPrefix, node) {\n        for (var path in node) {\n            var contentOrNode = node[path];\n            var joinedPath = join(pathPrefix, path);\n            if (typeof contentOrNode === 'string') {\n                flatJSON[joinedPath] = contentOrNode;\n            }\n            else if (typeof contentOrNode === 'object' && contentOrNode !== null && Object.keys(contentOrNode).length > 0) {\n                // empty directories need an explicit entry and therefore get handled in `else`, non-empty ones are implicitly considered\n                flatten(joinedPath, contentOrNode);\n            }\n            else {\n                // without this branch null, empty-object or non-object entries would not be handled in the same way\n                // by both fromJSON() and fromNestedJSON()\n                flatJSON[joinedPath] = null;\n            }\n        }\n    }\n    flatten('', nestedJSON);\n    return flatJSON;\n}\n/**\n * `Volume` represents a file system.\n */\nvar Volume = /** @class */ (function () {\n    function Volume(props) {\n        if (props === void 0) { props = {}; }\n        // I-node number counter.\n        this.ino = 0;\n        // A mapping for i-node numbers to i-nodes (`Node`);\n        this.inodes = {};\n        // List of released i-node numbers, for reuse.\n        this.releasedInos = [];\n        // A mapping for file descriptors to `File`s.\n        this.fds = {};\n        // A list of reusable (opened and closed) file descriptors, that should be\n        // used first before creating a new file descriptor.\n        this.releasedFds = [];\n        // Max number of open files.\n        this.maxFiles = 10000;\n        // Current number of open files.\n        this.openFiles = 0;\n        this.promisesApi = (0, promises_1.default)(this);\n        this.statWatchers = {};\n        this.props = Object.assign({ Node: node_1.Node, Link: node_1.Link, File: node_1.File }, props);\n        var root = this.createLink();\n        root.setNode(this.createNode(true));\n        var self = this; // tslint:disable-line no-this-assignment\n        this.StatWatcher = /** @class */ (function (_super) {\n            __extends(StatWatcher, _super);\n            function StatWatcher() {\n                return _super.call(this, self) || this;\n            }\n            return StatWatcher;\n        }(StatWatcher));\n        var _ReadStream = FsReadStream;\n        this.ReadStream = /** @class */ (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return _super.apply(this, __spreadArray([self], args, false)) || this;\n            }\n            return class_1;\n        }(_ReadStream));\n        var _WriteStream = FsWriteStream;\n        this.WriteStream = /** @class */ (function (_super) {\n            __extends(class_2, _super);\n            function class_2() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return _super.apply(this, __spreadArray([self], args, false)) || this;\n            }\n            return class_2;\n        }(_WriteStream));\n        this.FSWatcher = /** @class */ (function (_super) {\n            __extends(FSWatcher, _super);\n            function FSWatcher() {\n                return _super.call(this, self) || this;\n            }\n            return FSWatcher;\n        }(FSWatcher));\n        // root.setChild('.', root);\n        // root.getNode().nlink++;\n        // root.setChild('..', root);\n        // root.getNode().nlink++;\n        this.root = root;\n    }\n    Volume.fromJSON = function (json, cwd) {\n        var vol = new Volume();\n        vol.fromJSON(json, cwd);\n        return vol;\n    };\n    Volume.fromNestedJSON = function (json, cwd) {\n        var vol = new Volume();\n        vol.fromNestedJSON(json, cwd);\n        return vol;\n    };\n    Object.defineProperty(Volume.prototype, \"promises\", {\n        get: function () {\n            if (this.promisesApi === null)\n                throw new Error('Promise is not supported in this environment.');\n            return this.promisesApi;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Volume.prototype.createLink = function (parent, name, isDirectory, perm) {\n        if (isDirectory === void 0) { isDirectory = false; }\n        if (!parent) {\n            return new this.props.Link(this, null, '');\n        }\n        if (!name) {\n            throw new Error('createLink: name cannot be empty');\n        }\n        return parent.createChild(name, this.createNode(isDirectory, perm));\n    };\n    Volume.prototype.deleteLink = function (link) {\n        var parent = link.parent;\n        if (parent) {\n            parent.deleteChild(link);\n            return true;\n        }\n        return false;\n    };\n    Volume.prototype.newInoNumber = function () {\n        var releasedFd = this.releasedInos.pop();\n        if (releasedFd)\n            return releasedFd;\n        else {\n            this.ino = (this.ino + 1) % 0xffffffff;\n            return this.ino;\n        }\n    };\n    Volume.prototype.newFdNumber = function () {\n        var releasedFd = this.releasedFds.pop();\n        return typeof releasedFd === 'number' ? releasedFd : Volume.fd--;\n    };\n    Volume.prototype.createNode = function (isDirectory, perm) {\n        if (isDirectory === void 0) { isDirectory = false; }\n        var node = new this.props.Node(this.newInoNumber(), perm);\n        if (isDirectory)\n            node.setIsDirectory();\n        this.inodes[node.ino] = node;\n        return node;\n    };\n    Volume.prototype.getNode = function (ino) {\n        return this.inodes[ino];\n    };\n    Volume.prototype.deleteNode = function (node) {\n        node.del();\n        delete this.inodes[node.ino];\n        this.releasedInos.push(node.ino);\n    };\n    // Generates 6 character long random string, used by `mkdtemp`.\n    Volume.prototype.genRndStr = function () {\n        var str = (Math.random() + 1).toString(36).substr(2, 6);\n        if (str.length === 6)\n            return str;\n        else\n            return this.genRndStr();\n    };\n    // Returns a `Link` (hard link) referenced by path \"split\" into steps.\n    Volume.prototype.getLink = function (steps) {\n        return this.root.walk(steps);\n    };\n    // Just link `getLink`, but throws a correct user error, if link to found.\n    Volume.prototype.getLinkOrThrow = function (filename, funcName) {\n        var steps = filenameToSteps(filename);\n        var link = this.getLink(steps);\n        if (!link)\n            throw createError(ENOENT, funcName, filename);\n        return link;\n    };\n    // Just like `getLink`, but also dereference/resolves symbolic links.\n    Volume.prototype.getResolvedLink = function (filenameOrSteps) {\n        var steps = typeof filenameOrSteps === 'string' ? filenameToSteps(filenameOrSteps) : filenameOrSteps;\n        var link = this.root;\n        var i = 0;\n        while (i < steps.length) {\n            var step = steps[i];\n            link = link.getChild(step);\n            if (!link)\n                return null;\n            var node = link.getNode();\n            if (node.isSymlink()) {\n                steps = node.symlink.concat(steps.slice(i + 1));\n                link = this.root;\n                i = 0;\n                continue;\n            }\n            i++;\n        }\n        return link;\n    };\n    // Just like `getLinkOrThrow`, but also dereference/resolves symbolic links.\n    Volume.prototype.getResolvedLinkOrThrow = function (filename, funcName) {\n        var link = this.getResolvedLink(filename);\n        if (!link)\n            throw createError(ENOENT, funcName, filename);\n        return link;\n    };\n    Volume.prototype.resolveSymlinks = function (link) {\n        // let node: Node = link.getNode();\n        // while(link && node.isSymlink()) {\n        //     link = this.getLink(node.symlink);\n        //     if(!link) return null;\n        //     node = link.getNode();\n        // }\n        // return link;\n        return this.getResolvedLink(link.steps.slice(1));\n    };\n    // Just like `getLinkOrThrow`, but also verifies that the link is a directory.\n    Volume.prototype.getLinkAsDirOrThrow = function (filename, funcName) {\n        var link = this.getLinkOrThrow(filename, funcName);\n        if (!link.getNode().isDirectory())\n            throw createError(ENOTDIR, funcName, filename);\n        return link;\n    };\n    // Get the immediate parent directory of the link.\n    Volume.prototype.getLinkParent = function (steps) {\n        return this.root.walk(steps, steps.length - 1);\n    };\n    Volume.prototype.getLinkParentAsDirOrThrow = function (filenameOrSteps, funcName) {\n        var steps = filenameOrSteps instanceof Array ? filenameOrSteps : filenameToSteps(filenameOrSteps);\n        var link = this.getLinkParent(steps);\n        if (!link)\n            throw createError(ENOENT, funcName, sep + steps.join(sep));\n        if (!link.getNode().isDirectory())\n            throw createError(ENOTDIR, funcName, sep + steps.join(sep));\n        return link;\n    };\n    Volume.prototype.getFileByFd = function (fd) {\n        return this.fds[String(fd)];\n    };\n    Volume.prototype.getFileByFdOrThrow = function (fd, funcName) {\n        if (!isFd(fd))\n            throw TypeError(ERRSTR.FD);\n        var file = this.getFileByFd(fd);\n        if (!file)\n            throw createError(EBADF, funcName);\n        return file;\n    };\n    /**\n     * @todo This is not used anymore. Remove.\n     */\n    /*\n    private getNodeByIdOrCreate(id: TFileId, flags: number, perm: number): Node {\n      if (typeof id === 'number') {\n        const file = this.getFileByFd(id);\n        if (!file) throw Error('File nto found');\n        return file.node;\n      } else {\n        const steps = pathToSteps(id as PathLike);\n        let link = this.getLink(steps);\n        if (link) return link.getNode();\n  \n        // Try creating a node if not found.\n        if (flags & O_CREAT) {\n          const dirLink = this.getLinkParent(steps);\n          if (dirLink) {\n            const name = steps[steps.length - 1];\n            link = this.createLink(dirLink, name, false, perm);\n            return link.getNode();\n          }\n        }\n  \n        throw createError(ENOENT, 'getNodeByIdOrCreate', pathToFilename(id));\n      }\n    }\n    */\n    Volume.prototype.wrapAsync = function (method, args, callback) {\n        var _this = this;\n        validateCallback(callback);\n        (0, setImmediate_1.default)(function () {\n            var result;\n            try {\n                result = method.apply(_this, args);\n            }\n            catch (err) {\n                callback(err);\n                return;\n            }\n            callback(null, result);\n        });\n    };\n    Volume.prototype._toJSON = function (link, json, path) {\n        var _a;\n        if (link === void 0) { link = this.root; }\n        if (json === void 0) { json = {}; }\n        var isEmpty = true;\n        var children = link.children;\n        if (link.getNode().isFile()) {\n            children = (_a = {}, _a[link.getName()] = link.parent.getChild(link.getName()), _a);\n            link = link.parent;\n        }\n        for (var name_1 in children) {\n            isEmpty = false;\n            var child = link.getChild(name_1);\n            if (!child) {\n                throw new Error('_toJSON: unexpected undefined');\n            }\n            var node = child.getNode();\n            if (node.isFile()) {\n                var filename = child.getPath();\n                if (path)\n                    filename = relative(path, filename);\n                json[filename] = node.getString();\n            }\n            else if (node.isDirectory()) {\n                this._toJSON(child, json, path);\n            }\n        }\n        var dirPath = link.getPath();\n        if (path)\n            dirPath = relative(path, dirPath);\n        if (dirPath && isEmpty) {\n            json[dirPath] = null;\n        }\n        return json;\n    };\n    Volume.prototype.toJSON = function (paths, json, isRelative) {\n        if (json === void 0) { json = {}; }\n        if (isRelative === void 0) { isRelative = false; }\n        var links = [];\n        if (paths) {\n            if (!(paths instanceof Array))\n                paths = [paths];\n            for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\n                var path = paths_1[_i];\n                var filename = pathToFilename(path);\n                var link = this.getResolvedLink(filename);\n                if (!link)\n                    continue;\n                links.push(link);\n            }\n        }\n        else {\n            links.push(this.root);\n        }\n        if (!links.length)\n            return json;\n        for (var _a = 0, links_1 = links; _a < links_1.length; _a++) {\n            var link = links_1[_a];\n            this._toJSON(link, json, isRelative ? link.getPath() : '');\n        }\n        return json;\n    };\n    Volume.prototype.fromJSON = function (json, cwd) {\n        if (cwd === void 0) { cwd = process_1.default.cwd(); }\n        for (var filename in json) {\n            var data = json[filename];\n            filename = resolve(filename, cwd);\n            if (typeof data === 'string') {\n                var dir = dirname(filename);\n                this.mkdirpBase(dir, 511 /* DIR */);\n                this.writeFileSync(filename, data);\n            }\n            else {\n                this.mkdirpBase(filename, 511 /* DIR */);\n            }\n        }\n    };\n    Volume.prototype.fromNestedJSON = function (json, cwd) {\n        this.fromJSON(flattenJSON(json), cwd);\n    };\n    Volume.prototype.reset = function () {\n        this.ino = 0;\n        this.inodes = {};\n        this.releasedInos = [];\n        this.fds = {};\n        this.releasedFds = [];\n        this.openFiles = 0;\n        this.root = this.createLink();\n        this.root.setNode(this.createNode(true));\n    };\n    // Legacy interface\n    Volume.prototype.mountSync = function (mountpoint, json) {\n        this.fromJSON(json, mountpoint);\n    };\n    Volume.prototype.openLink = function (link, flagsNum, resolveSymlinks) {\n        if (resolveSymlinks === void 0) { resolveSymlinks = true; }\n        if (this.openFiles >= this.maxFiles) {\n            // Too many open files.\n            throw createError(EMFILE, 'open', link.getPath());\n        }\n        // Resolve symlinks.\n        var realLink = link;\n        if (resolveSymlinks)\n            realLink = this.resolveSymlinks(link);\n        if (!realLink)\n            throw createError(ENOENT, 'open', link.getPath());\n        var node = realLink.getNode();\n        // Check whether node is a directory\n        if (node.isDirectory()) {\n            if ((flagsNum & (O_RDONLY | O_RDWR | O_WRONLY)) !== O_RDONLY)\n                throw createError(EISDIR, 'open', link.getPath());\n        }\n        else {\n            if (flagsNum & O_DIRECTORY)\n                throw createError(ENOTDIR, 'open', link.getPath());\n        }\n        // Check node permissions\n        if (!(flagsNum & O_WRONLY)) {\n            if (!node.canRead()) {\n                throw createError(EACCES, 'open', link.getPath());\n            }\n        }\n        if (flagsNum & O_RDWR) {\n        }\n        var file = new this.props.File(link, node, flagsNum, this.newFdNumber());\n        this.fds[file.fd] = file;\n        this.openFiles++;\n        if (flagsNum & O_TRUNC)\n            file.truncate();\n        return file;\n    };\n    Volume.prototype.openFile = function (filename, flagsNum, modeNum, resolveSymlinks) {\n        if (resolveSymlinks === void 0) { resolveSymlinks = true; }\n        var steps = filenameToSteps(filename);\n        var link = resolveSymlinks ? this.getResolvedLink(steps) : this.getLink(steps);\n        // Try creating a new file, if it does not exist.\n        if (!link && flagsNum & O_CREAT) {\n            // const dirLink: Link = this.getLinkParent(steps);\n            var dirLink = this.getResolvedLink(steps.slice(0, steps.length - 1));\n            // if(!dirLink) throw createError(ENOENT, 'open', filename);\n            if (!dirLink)\n                throw createError(ENOENT, 'open', sep + steps.join(sep));\n            if (flagsNum & O_CREAT && typeof modeNum === 'number') {\n                link = this.createLink(dirLink, steps[steps.length - 1], false, modeNum);\n            }\n        }\n        if (link)\n            return this.openLink(link, flagsNum, resolveSymlinks);\n        throw createError(ENOENT, 'open', filename);\n    };\n    Volume.prototype.openBase = function (filename, flagsNum, modeNum, resolveSymlinks) {\n        if (resolveSymlinks === void 0) { resolveSymlinks = true; }\n        var file = this.openFile(filename, flagsNum, modeNum, resolveSymlinks);\n        if (!file)\n            throw createError(ENOENT, 'open', filename);\n        return file.fd;\n    };\n    Volume.prototype.openSync = function (path, flags, mode) {\n        if (mode === void 0) { mode = 438 /* DEFAULT */; }\n        // Validate (1) mode; (2) path; (3) flags - in that order.\n        var modeNum = modeToNumber(mode);\n        var fileName = pathToFilename(path);\n        var flagsNum = flagsToNumber(flags);\n        return this.openBase(fileName, flagsNum, modeNum);\n    };\n    Volume.prototype.open = function (path, flags, a, b) {\n        var mode = a;\n        var callback = b;\n        if (typeof a === 'function') {\n            mode = 438 /* DEFAULT */;\n            callback = a;\n        }\n        mode = mode || 438 /* DEFAULT */;\n        var modeNum = modeToNumber(mode);\n        var fileName = pathToFilename(path);\n        var flagsNum = flagsToNumber(flags);\n        this.wrapAsync(this.openBase, [fileName, flagsNum, modeNum], callback);\n    };\n    Volume.prototype.closeFile = function (file) {\n        if (!this.fds[file.fd])\n            return;\n        this.openFiles--;\n        delete this.fds[file.fd];\n        this.releasedFds.push(file.fd);\n    };\n    Volume.prototype.closeSync = function (fd) {\n        validateFd(fd);\n        var file = this.getFileByFdOrThrow(fd, 'close');\n        this.closeFile(file);\n    };\n    Volume.prototype.close = function (fd, callback) {\n        validateFd(fd);\n        this.wrapAsync(this.closeSync, [fd], callback);\n    };\n    Volume.prototype.openFileOrGetById = function (id, flagsNum, modeNum) {\n        if (typeof id === 'number') {\n            var file = this.fds[id];\n            if (!file)\n                throw createError(ENOENT);\n            return file;\n        }\n        else {\n            return this.openFile(pathToFilename(id), flagsNum, modeNum);\n        }\n    };\n    Volume.prototype.readBase = function (fd, buffer, offset, length, position) {\n        var file = this.getFileByFdOrThrow(fd);\n        return file.read(buffer, Number(offset), Number(length), position);\n    };\n    Volume.prototype.readSync = function (fd, buffer, offset, length, position) {\n        validateFd(fd);\n        return this.readBase(fd, buffer, offset, length, position);\n    };\n    Volume.prototype.read = function (fd, buffer, offset, length, position, callback) {\n        var _this = this;\n        validateCallback(callback);\n        // This `if` branch is from Node.js\n        if (length === 0) {\n            return process_1.default.nextTick(function () {\n                if (callback)\n                    callback(null, 0, buffer);\n            });\n        }\n        (0, setImmediate_1.default)(function () {\n            try {\n                var bytes = _this.readBase(fd, buffer, offset, length, position);\n                callback(null, bytes, buffer);\n            }\n            catch (err) {\n                callback(err);\n            }\n        });\n    };\n    Volume.prototype.readFileBase = function (id, flagsNum, encoding) {\n        var result;\n        var isUserFd = typeof id === 'number';\n        var userOwnsFd = isUserFd && isFd(id);\n        var fd;\n        if (userOwnsFd)\n            fd = id;\n        else {\n            var filename = pathToFilename(id);\n            var steps = filenameToSteps(filename);\n            var link = this.getResolvedLink(steps);\n            if (link) {\n                var node = link.getNode();\n                if (node.isDirectory())\n                    throw createError(EISDIR, 'open', link.getPath());\n            }\n            fd = this.openSync(id, flagsNum);\n        }\n        try {\n            result = bufferToEncoding(this.getFileByFdOrThrow(fd).getBuffer(), encoding);\n        }\n        finally {\n            if (!userOwnsFd) {\n                this.closeSync(fd);\n            }\n        }\n        return result;\n    };\n    Volume.prototype.readFileSync = function (file, options) {\n        var opts = getReadFileOptions(options);\n        var flagsNum = flagsToNumber(opts.flag);\n        return this.readFileBase(file, flagsNum, opts.encoding);\n    };\n    Volume.prototype.readFile = function (id, a, b) {\n        var _a = optsAndCbGenerator(getReadFileOptions)(a, b), opts = _a[0], callback = _a[1];\n        var flagsNum = flagsToNumber(opts.flag);\n        this.wrapAsync(this.readFileBase, [id, flagsNum, opts.encoding], callback);\n    };\n    Volume.prototype.writeBase = function (fd, buf, offset, length, position) {\n        var file = this.getFileByFdOrThrow(fd, 'write');\n        return file.write(buf, offset, length, position);\n    };\n    Volume.prototype.writeSync = function (fd, a, b, c, d) {\n        validateFd(fd);\n        var encoding;\n        var offset;\n        var length;\n        var position;\n        var isBuffer = typeof a !== 'string';\n        if (isBuffer) {\n            offset = (b || 0) | 0;\n            length = c;\n            position = d;\n        }\n        else {\n            position = b;\n            encoding = c;\n        }\n        var buf = dataToBuffer(a, encoding);\n        if (isBuffer) {\n            if (typeof length === 'undefined') {\n                length = buf.length;\n            }\n        }\n        else {\n            offset = 0;\n            length = buf.length;\n        }\n        return this.writeBase(fd, buf, offset, length, position);\n    };\n    Volume.prototype.write = function (fd, a, b, c, d, e) {\n        var _this = this;\n        validateFd(fd);\n        var offset;\n        var length;\n        var position;\n        var encoding;\n        var callback;\n        var tipa = typeof a;\n        var tipb = typeof b;\n        var tipc = typeof c;\n        var tipd = typeof d;\n        if (tipa !== 'string') {\n            if (tipb === 'function') {\n                callback = b;\n            }\n            else if (tipc === 'function') {\n                offset = b | 0;\n                callback = c;\n            }\n            else if (tipd === 'function') {\n                offset = b | 0;\n                length = c;\n                callback = d;\n            }\n            else {\n                offset = b | 0;\n                length = c;\n                position = d;\n                callback = e;\n            }\n        }\n        else {\n            if (tipb === 'function') {\n                callback = b;\n            }\n            else if (tipc === 'function') {\n                position = b;\n                callback = c;\n            }\n            else if (tipd === 'function') {\n                position = b;\n                encoding = c;\n                callback = d;\n            }\n        }\n        var buf = dataToBuffer(a, encoding);\n        if (tipa !== 'string') {\n            if (typeof length === 'undefined')\n                length = buf.length;\n        }\n        else {\n            offset = 0;\n            length = buf.length;\n        }\n        var cb = validateCallback(callback);\n        (0, setImmediate_1.default)(function () {\n            try {\n                var bytes = _this.writeBase(fd, buf, offset, length, position);\n                if (tipa !== 'string') {\n                    cb(null, bytes, buf);\n                }\n                else {\n                    cb(null, bytes, a);\n                }\n            }\n            catch (err) {\n                cb(err);\n            }\n        });\n    };\n    Volume.prototype.writeFileBase = function (id, buf, flagsNum, modeNum) {\n        // console.log('writeFileBase', id, buf, flagsNum, modeNum);\n        // const node = this.getNodeByIdOrCreate(id, flagsNum, modeNum);\n        // node.setBuffer(buf);\n        var isUserFd = typeof id === 'number';\n        var fd;\n        if (isUserFd)\n            fd = id;\n        else {\n            fd = this.openBase(pathToFilename(id), flagsNum, modeNum);\n            // fd = this.openSync(id as PathLike, flagsNum, modeNum);\n        }\n        var offset = 0;\n        var length = buf.length;\n        var position = flagsNum & O_APPEND ? undefined : 0;\n        try {\n            while (length > 0) {\n                var written = this.writeSync(fd, buf, offset, length, position);\n                offset += written;\n                length -= written;\n                if (position !== undefined)\n                    position += written;\n            }\n        }\n        finally {\n            if (!isUserFd)\n                this.closeSync(fd);\n        }\n    };\n    Volume.prototype.writeFileSync = function (id, data, options) {\n        var opts = getWriteFileOptions(options);\n        var flagsNum = flagsToNumber(opts.flag);\n        var modeNum = modeToNumber(opts.mode);\n        var buf = dataToBuffer(data, opts.encoding);\n        this.writeFileBase(id, buf, flagsNum, modeNum);\n    };\n    Volume.prototype.writeFile = function (id, data, a, b) {\n        var options = a;\n        var callback = b;\n        if (typeof a === 'function') {\n            options = writeFileDefaults;\n            callback = a;\n        }\n        var cb = validateCallback(callback);\n        var opts = getWriteFileOptions(options);\n        var flagsNum = flagsToNumber(opts.flag);\n        var modeNum = modeToNumber(opts.mode);\n        var buf = dataToBuffer(data, opts.encoding);\n        this.wrapAsync(this.writeFileBase, [id, buf, flagsNum, modeNum], cb);\n    };\n    Volume.prototype.linkBase = function (filename1, filename2) {\n        var steps1 = filenameToSteps(filename1);\n        var link1 = this.getLink(steps1);\n        if (!link1)\n            throw createError(ENOENT, 'link', filename1, filename2);\n        var steps2 = filenameToSteps(filename2);\n        // Check new link directory exists.\n        var dir2 = this.getLinkParent(steps2);\n        if (!dir2)\n            throw createError(ENOENT, 'link', filename1, filename2);\n        var name = steps2[steps2.length - 1];\n        // Check if new file already exists.\n        if (dir2.getChild(name))\n            throw createError(EEXIST, 'link', filename1, filename2);\n        var node = link1.getNode();\n        node.nlink++;\n        dir2.createChild(name, node);\n    };\n    Volume.prototype.copyFileBase = function (src, dest, flags) {\n        var buf = this.readFileSync(src);\n        if (flags & COPYFILE_EXCL) {\n            if (this.existsSync(dest)) {\n                throw createError(EEXIST, 'copyFile', src, dest);\n            }\n        }\n        if (flags & COPYFILE_FICLONE_FORCE) {\n            throw createError(ENOSYS, 'copyFile', src, dest);\n        }\n        this.writeFileBase(dest, buf, FLAGS.w, 438 /* DEFAULT */);\n    };\n    Volume.prototype.copyFileSync = function (src, dest, flags) {\n        var srcFilename = pathToFilename(src);\n        var destFilename = pathToFilename(dest);\n        return this.copyFileBase(srcFilename, destFilename, (flags || 0) | 0);\n    };\n    Volume.prototype.copyFile = function (src, dest, a, b) {\n        var srcFilename = pathToFilename(src);\n        var destFilename = pathToFilename(dest);\n        var flags;\n        var callback;\n        if (typeof a === 'function') {\n            flags = 0;\n            callback = a;\n        }\n        else {\n            flags = a;\n            callback = b;\n        }\n        validateCallback(callback);\n        this.wrapAsync(this.copyFileBase, [srcFilename, destFilename, flags], callback);\n    };\n    Volume.prototype.linkSync = function (existingPath, newPath) {\n        var existingPathFilename = pathToFilename(existingPath);\n        var newPathFilename = pathToFilename(newPath);\n        this.linkBase(existingPathFilename, newPathFilename);\n    };\n    Volume.prototype.link = function (existingPath, newPath, callback) {\n        var existingPathFilename = pathToFilename(existingPath);\n        var newPathFilename = pathToFilename(newPath);\n        this.wrapAsync(this.linkBase, [existingPathFilename, newPathFilename], callback);\n    };\n    Volume.prototype.unlinkBase = function (filename) {\n        var steps = filenameToSteps(filename);\n        var link = this.getLink(steps);\n        if (!link)\n            throw createError(ENOENT, 'unlink', filename);\n        // TODO: Check if it is file, dir, other...\n        if (link.length)\n            throw Error('Dir not empty...');\n        this.deleteLink(link);\n        var node = link.getNode();\n        node.nlink--;\n        // When all hard links to i-node are deleted, remove the i-node, too.\n        if (node.nlink <= 0) {\n            this.deleteNode(node);\n        }\n    };\n    Volume.prototype.unlinkSync = function (path) {\n        var filename = pathToFilename(path);\n        this.unlinkBase(filename);\n    };\n    Volume.prototype.unlink = function (path, callback) {\n        var filename = pathToFilename(path);\n        this.wrapAsync(this.unlinkBase, [filename], callback);\n    };\n    Volume.prototype.symlinkBase = function (targetFilename, pathFilename) {\n        var pathSteps = filenameToSteps(pathFilename);\n        // Check if directory exists, where we about to create a symlink.\n        var dirLink = this.getLinkParent(pathSteps);\n        if (!dirLink)\n            throw createError(ENOENT, 'symlink', targetFilename, pathFilename);\n        var name = pathSteps[pathSteps.length - 1];\n        // Check if new file already exists.\n        if (dirLink.getChild(name))\n            throw createError(EEXIST, 'symlink', targetFilename, pathFilename);\n        // Create symlink.\n        var symlink = dirLink.createChild(name);\n        symlink.getNode().makeSymlink(filenameToSteps(targetFilename));\n        return symlink;\n    };\n    // `type` argument works only on Windows.\n    Volume.prototype.symlinkSync = function (target, path, type) {\n        var targetFilename = pathToFilename(target);\n        var pathFilename = pathToFilename(path);\n        this.symlinkBase(targetFilename, pathFilename);\n    };\n    Volume.prototype.symlink = function (target, path, a, b) {\n        var callback = validateCallback(typeof a === 'function' ? a : b);\n        var targetFilename = pathToFilename(target);\n        var pathFilename = pathToFilename(path);\n        this.wrapAsync(this.symlinkBase, [targetFilename, pathFilename], callback);\n    };\n    Volume.prototype.realpathBase = function (filename, encoding) {\n        var steps = filenameToSteps(filename);\n        var realLink = this.getResolvedLink(steps);\n        if (!realLink)\n            throw createError(ENOENT, 'realpath', filename);\n        return (0, encoding_1.strToEncoding)(realLink.getPath(), encoding);\n    };\n    Volume.prototype.realpathSync = function (path, options) {\n        return this.realpathBase(pathToFilename(path), getRealpathOptions(options).encoding);\n    };\n    Volume.prototype.realpath = function (path, a, b) {\n        var _a = getRealpathOptsAndCb(a, b), opts = _a[0], callback = _a[1];\n        var pathFilename = pathToFilename(path);\n        this.wrapAsync(this.realpathBase, [pathFilename, opts.encoding], callback);\n    };\n    Volume.prototype.lstatBase = function (filename, bigint, throwIfNoEntry) {\n        if (bigint === void 0) { bigint = false; }\n        if (throwIfNoEntry === void 0) { throwIfNoEntry = false; }\n        var link = this.getLink(filenameToSteps(filename));\n        if (link) {\n            return Stats_1.default.build(link.getNode(), bigint);\n        }\n        else if (!throwIfNoEntry) {\n            return undefined;\n        }\n        else {\n            throw createError(ENOENT, 'lstat', filename);\n        }\n    };\n    Volume.prototype.lstatSync = function (path, options) {\n        var _a = getStatOptions(options), _b = _a.throwIfNoEntry, throwIfNoEntry = _b === void 0 ? true : _b, _c = _a.bigint, bigint = _c === void 0 ? false : _c;\n        return this.lstatBase(pathToFilename(path), bigint, throwIfNoEntry);\n    };\n    Volume.prototype.lstat = function (path, a, b) {\n        var _a = getStatOptsAndCb(a, b), _b = _a[0], _c = _b.throwIfNoEntry, throwIfNoEntry = _c === void 0 ? true : _c, _d = _b.bigint, bigint = _d === void 0 ? false : _d, callback = _a[1];\n        this.wrapAsync(this.lstatBase, [pathToFilename(path), bigint, throwIfNoEntry], callback);\n    };\n    Volume.prototype.statBase = function (filename, bigint, throwIfNoEntry) {\n        if (bigint === void 0) { bigint = false; }\n        if (throwIfNoEntry === void 0) { throwIfNoEntry = true; }\n        var link = this.getResolvedLink(filenameToSteps(filename));\n        if (link) {\n            return Stats_1.default.build(link.getNode(), bigint);\n        }\n        else if (!throwIfNoEntry) {\n            return undefined;\n        }\n        else {\n            throw createError(ENOENT, 'stat', filename);\n        }\n    };\n    Volume.prototype.statSync = function (path, options) {\n        var _a = getStatOptions(options), _b = _a.bigint, bigint = _b === void 0 ? true : _b, _c = _a.throwIfNoEntry, throwIfNoEntry = _c === void 0 ? true : _c;\n        return this.statBase(pathToFilename(path), bigint, throwIfNoEntry);\n    };\n    Volume.prototype.stat = function (path, a, b) {\n        var _a = getStatOptsAndCb(a, b), _b = _a[0], _c = _b.bigint, bigint = _c === void 0 ? false : _c, _d = _b.throwIfNoEntry, throwIfNoEntry = _d === void 0 ? true : _d, callback = _a[1];\n        this.wrapAsync(this.statBase, [pathToFilename(path), bigint, throwIfNoEntry], callback);\n    };\n    Volume.prototype.fstatBase = function (fd, bigint) {\n        if (bigint === void 0) { bigint = false; }\n        var file = this.getFileByFd(fd);\n        if (!file)\n            throw createError(EBADF, 'fstat');\n        return Stats_1.default.build(file.node, bigint);\n    };\n    Volume.prototype.fstatSync = function (fd, options) {\n        return this.fstatBase(fd, getStatOptions(options).bigint);\n    };\n    Volume.prototype.fstat = function (fd, a, b) {\n        var _a = getStatOptsAndCb(a, b), opts = _a[0], callback = _a[1];\n        this.wrapAsync(this.fstatBase, [fd, opts.bigint], callback);\n    };\n    Volume.prototype.renameBase = function (oldPathFilename, newPathFilename) {\n        var link = this.getLink(filenameToSteps(oldPathFilename));\n        if (!link)\n            throw createError(ENOENT, 'rename', oldPathFilename, newPathFilename);\n        // TODO: Check if it is directory, if non-empty, we cannot move it, right?\n        var newPathSteps = filenameToSteps(newPathFilename);\n        // Check directory exists for the new location.\n        var newPathDirLink = this.getLinkParent(newPathSteps);\n        if (!newPathDirLink)\n            throw createError(ENOENT, 'rename', oldPathFilename, newPathFilename);\n        // TODO: Also treat cases with directories and symbolic links.\n        // TODO: See: http://man7.org/linux/man-pages/man2/rename.2.html\n        // Remove hard link from old folder.\n        var oldLinkParent = link.parent;\n        if (oldLinkParent) {\n            oldLinkParent.deleteChild(link);\n        }\n        // Rename should overwrite the new path, if that exists.\n        var name = newPathSteps[newPathSteps.length - 1];\n        link.name = name;\n        link.steps = __spreadArray(__spreadArray([], newPathDirLink.steps, true), [name], false);\n        newPathDirLink.setChild(link.getName(), link);\n    };\n    Volume.prototype.renameSync = function (oldPath, newPath) {\n        var oldPathFilename = pathToFilename(oldPath);\n        var newPathFilename = pathToFilename(newPath);\n        this.renameBase(oldPathFilename, newPathFilename);\n    };\n    Volume.prototype.rename = function (oldPath, newPath, callback) {\n        var oldPathFilename = pathToFilename(oldPath);\n        var newPathFilename = pathToFilename(newPath);\n        this.wrapAsync(this.renameBase, [oldPathFilename, newPathFilename], callback);\n    };\n    Volume.prototype.existsBase = function (filename) {\n        return !!this.statBase(filename);\n    };\n    Volume.prototype.existsSync = function (path) {\n        try {\n            return this.existsBase(pathToFilename(path));\n        }\n        catch (err) {\n            return false;\n        }\n    };\n    Volume.prototype.exists = function (path, callback) {\n        var _this = this;\n        var filename = pathToFilename(path);\n        if (typeof callback !== 'function')\n            throw Error(ERRSTR.CB);\n        (0, setImmediate_1.default)(function () {\n            try {\n                callback(_this.existsBase(filename));\n            }\n            catch (err) {\n                callback(false);\n            }\n        });\n    };\n    Volume.prototype.accessBase = function (filename, mode) {\n        var link = this.getLinkOrThrow(filename, 'access');\n        // TODO: Verify permissions\n    };\n    Volume.prototype.accessSync = function (path, mode) {\n        if (mode === void 0) { mode = F_OK; }\n        var filename = pathToFilename(path);\n        mode = mode | 0;\n        this.accessBase(filename, mode);\n    };\n    Volume.prototype.access = function (path, a, b) {\n        var mode = F_OK;\n        var callback;\n        if (typeof a !== 'function') {\n            mode = a | 0; // cast to number\n            callback = validateCallback(b);\n        }\n        else {\n            callback = a;\n        }\n        var filename = pathToFilename(path);\n        this.wrapAsync(this.accessBase, [filename, mode], callback);\n    };\n    Volume.prototype.appendFileSync = function (id, data, options) {\n        if (options === void 0) { options = appendFileDefaults; }\n        var opts = getAppendFileOpts(options);\n        // force append behavior when using a supplied file descriptor\n        if (!opts.flag || isFd(id))\n            opts.flag = 'a';\n        this.writeFileSync(id, data, opts);\n    };\n    Volume.prototype.appendFile = function (id, data, a, b) {\n        var _a = getAppendFileOptsAndCb(a, b), opts = _a[0], callback = _a[1];\n        // force append behavior when using a supplied file descriptor\n        if (!opts.flag || isFd(id))\n            opts.flag = 'a';\n        this.writeFile(id, data, opts, callback);\n    };\n    Volume.prototype.readdirBase = function (filename, options) {\n        var steps = filenameToSteps(filename);\n        var link = this.getResolvedLink(steps);\n        if (!link)\n            throw createError(ENOENT, 'readdir', filename);\n        var node = link.getNode();\n        if (!node.isDirectory())\n            throw createError(ENOTDIR, 'scandir', filename);\n        if (options.withFileTypes) {\n            var list_1 = [];\n            for (var name_2 in link.children) {\n                var child = link.getChild(name_2);\n                if (!child) {\n                    continue;\n                }\n                list_1.push(Dirent_1.default.build(child, options.encoding));\n            }\n            if (!isWin && options.encoding !== 'buffer')\n                list_1.sort(function (a, b) {\n                    if (a.name < b.name)\n                        return -1;\n                    if (a.name > b.name)\n                        return 1;\n                    return 0;\n                });\n            return list_1;\n        }\n        var list = [];\n        for (var name_3 in link.children) {\n            list.push((0, encoding_1.strToEncoding)(name_3, options.encoding));\n        }\n        if (!isWin && options.encoding !== 'buffer')\n            list.sort();\n        return list;\n    };\n    Volume.prototype.readdirSync = function (path, options) {\n        var opts = getReaddirOptions(options);\n        var filename = pathToFilename(path);\n        return this.readdirBase(filename, opts);\n    };\n    Volume.prototype.readdir = function (path, a, b) {\n        var _a = getReaddirOptsAndCb(a, b), options = _a[0], callback = _a[1];\n        var filename = pathToFilename(path);\n        this.wrapAsync(this.readdirBase, [filename, options], callback);\n    };\n    Volume.prototype.readlinkBase = function (filename, encoding) {\n        var link = this.getLinkOrThrow(filename, 'readlink');\n        var node = link.getNode();\n        if (!node.isSymlink())\n            throw createError(EINVAL, 'readlink', filename);\n        var str = sep + node.symlink.join(sep);\n        return (0, encoding_1.strToEncoding)(str, encoding);\n    };\n    Volume.prototype.readlinkSync = function (path, options) {\n        var opts = getDefaultOpts(options);\n        var filename = pathToFilename(path);\n        return this.readlinkBase(filename, opts.encoding);\n    };\n    Volume.prototype.readlink = function (path, a, b) {\n        var _a = getDefaultOptsAndCb(a, b), opts = _a[0], callback = _a[1];\n        var filename = pathToFilename(path);\n        this.wrapAsync(this.readlinkBase, [filename, opts.encoding], callback);\n    };\n    Volume.prototype.fsyncBase = function (fd) {\n        this.getFileByFdOrThrow(fd, 'fsync');\n    };\n    Volume.prototype.fsyncSync = function (fd) {\n        this.fsyncBase(fd);\n    };\n    Volume.prototype.fsync = function (fd, callback) {\n        this.wrapAsync(this.fsyncBase, [fd], callback);\n    };\n    Volume.prototype.fdatasyncBase = function (fd) {\n        this.getFileByFdOrThrow(fd, 'fdatasync');\n    };\n    Volume.prototype.fdatasyncSync = function (fd) {\n        this.fdatasyncBase(fd);\n    };\n    Volume.prototype.fdatasync = function (fd, callback) {\n        this.wrapAsync(this.fdatasyncBase, [fd], callback);\n    };\n    Volume.prototype.ftruncateBase = function (fd, len) {\n        var file = this.getFileByFdOrThrow(fd, 'ftruncate');\n        file.truncate(len);\n    };\n    Volume.prototype.ftruncateSync = function (fd, len) {\n        this.ftruncateBase(fd, len);\n    };\n    Volume.prototype.ftruncate = function (fd, a, b) {\n        var len = typeof a === 'number' ? a : 0;\n        var callback = validateCallback(typeof a === 'number' ? b : a);\n        this.wrapAsync(this.ftruncateBase, [fd, len], callback);\n    };\n    Volume.prototype.truncateBase = function (path, len) {\n        var fd = this.openSync(path, 'r+');\n        try {\n            this.ftruncateSync(fd, len);\n        }\n        finally {\n            this.closeSync(fd);\n        }\n    };\n    Volume.prototype.truncateSync = function (id, len) {\n        if (isFd(id))\n            return this.ftruncateSync(id, len);\n        this.truncateBase(id, len);\n    };\n    Volume.prototype.truncate = function (id, a, b) {\n        var len = typeof a === 'number' ? a : 0;\n        var callback = validateCallback(typeof a === 'number' ? b : a);\n        if (isFd(id))\n            return this.ftruncate(id, len, callback);\n        this.wrapAsync(this.truncateBase, [id, len], callback);\n    };\n    Volume.prototype.futimesBase = function (fd, atime, mtime) {\n        var file = this.getFileByFdOrThrow(fd, 'futimes');\n        var node = file.node;\n        node.atime = new Date(atime * 1000);\n        node.mtime = new Date(mtime * 1000);\n    };\n    Volume.prototype.futimesSync = function (fd, atime, mtime) {\n        this.futimesBase(fd, toUnixTimestamp(atime), toUnixTimestamp(mtime));\n    };\n    Volume.prototype.futimes = function (fd, atime, mtime, callback) {\n        this.wrapAsync(this.futimesBase, [fd, toUnixTimestamp(atime), toUnixTimestamp(mtime)], callback);\n    };\n    Volume.prototype.utimesBase = function (filename, atime, mtime) {\n        var fd = this.openSync(filename, 'r+');\n        try {\n            this.futimesBase(fd, atime, mtime);\n        }\n        finally {\n            this.closeSync(fd);\n        }\n    };\n    Volume.prototype.utimesSync = function (path, atime, mtime) {\n        this.utimesBase(pathToFilename(path), toUnixTimestamp(atime), toUnixTimestamp(mtime));\n    };\n    Volume.prototype.utimes = function (path, atime, mtime, callback) {\n        this.wrapAsync(this.utimesBase, [pathToFilename(path), toUnixTimestamp(atime), toUnixTimestamp(mtime)], callback);\n    };\n    Volume.prototype.mkdirBase = function (filename, modeNum) {\n        var steps = filenameToSteps(filename);\n        // This will throw if user tries to create root dir `fs.mkdirSync('/')`.\n        if (!steps.length) {\n            throw createError(EEXIST, 'mkdir', filename);\n        }\n        var dir = this.getLinkParentAsDirOrThrow(filename, 'mkdir');\n        // Check path already exists.\n        var name = steps[steps.length - 1];\n        if (dir.getChild(name))\n            throw createError(EEXIST, 'mkdir', filename);\n        dir.createChild(name, this.createNode(true, modeNum));\n    };\n    /**\n     * Creates directory tree recursively.\n     * @param filename\n     * @param modeNum\n     */\n    Volume.prototype.mkdirpBase = function (filename, modeNum) {\n        var steps = filenameToSteps(filename);\n        var link = this.root;\n        for (var i = 0; i < steps.length; i++) {\n            var step = steps[i];\n            if (!link.getNode().isDirectory())\n                throw createError(ENOTDIR, 'mkdir', link.getPath());\n            var child = link.getChild(step);\n            if (child) {\n                if (child.getNode().isDirectory())\n                    link = child;\n                else\n                    throw createError(ENOTDIR, 'mkdir', child.getPath());\n            }\n            else {\n                link = link.createChild(step, this.createNode(true, modeNum));\n            }\n        }\n    };\n    Volume.prototype.mkdirSync = function (path, options) {\n        var opts = getMkdirOptions(options);\n        var modeNum = modeToNumber(opts.mode, 511);\n        var filename = pathToFilename(path);\n        if (opts.recursive)\n            this.mkdirpBase(filename, modeNum);\n        else\n            this.mkdirBase(filename, modeNum);\n    };\n    Volume.prototype.mkdir = function (path, a, b) {\n        var opts = getMkdirOptions(a);\n        var callback = validateCallback(typeof a === 'function' ? a : b);\n        var modeNum = modeToNumber(opts.mode, 511);\n        var filename = pathToFilename(path);\n        if (opts.recursive)\n            this.wrapAsync(this.mkdirpBase, [filename, modeNum], callback);\n        else\n            this.wrapAsync(this.mkdirBase, [filename, modeNum], callback);\n    };\n    // legacy interface\n    Volume.prototype.mkdirpSync = function (path, mode) {\n        this.mkdirSync(path, { mode: mode, recursive: true });\n    };\n    Volume.prototype.mkdirp = function (path, a, b) {\n        var mode = typeof a === 'function' ? undefined : a;\n        var callback = validateCallback(typeof a === 'function' ? a : b);\n        this.mkdir(path, { mode: mode, recursive: true }, callback);\n    };\n    Volume.prototype.mkdtempBase = function (prefix, encoding, retry) {\n        if (retry === void 0) { retry = 5; }\n        var filename = prefix + this.genRndStr();\n        try {\n            this.mkdirBase(filename, 511 /* DIR */);\n            return (0, encoding_1.strToEncoding)(filename, encoding);\n        }\n        catch (err) {\n            if (err.code === EEXIST) {\n                if (retry > 1)\n                    return this.mkdtempBase(prefix, encoding, retry - 1);\n                else\n                    throw Error('Could not create temp dir.');\n            }\n            else\n                throw err;\n        }\n    };\n    Volume.prototype.mkdtempSync = function (prefix, options) {\n        var encoding = getDefaultOpts(options).encoding;\n        if (!prefix || typeof prefix !== 'string')\n            throw new TypeError('filename prefix is required');\n        nullCheck(prefix);\n        return this.mkdtempBase(prefix, encoding);\n    };\n    Volume.prototype.mkdtemp = function (prefix, a, b) {\n        var _a = getDefaultOptsAndCb(a, b), encoding = _a[0].encoding, callback = _a[1];\n        if (!prefix || typeof prefix !== 'string')\n            throw new TypeError('filename prefix is required');\n        if (!nullCheck(prefix))\n            return;\n        this.wrapAsync(this.mkdtempBase, [prefix, encoding], callback);\n    };\n    Volume.prototype.rmdirBase = function (filename, options) {\n        var opts = getRmdirOptions(options);\n        var link = this.getLinkAsDirOrThrow(filename, 'rmdir');\n        // Check directory is empty.\n        if (link.length && !opts.recursive)\n            throw createError(ENOTEMPTY, 'rmdir', filename);\n        this.deleteLink(link);\n    };\n    Volume.prototype.rmdirSync = function (path, options) {\n        this.rmdirBase(pathToFilename(path), options);\n    };\n    Volume.prototype.rmdir = function (path, a, b) {\n        var opts = getRmdirOptions(a);\n        var callback = validateCallback(typeof a === 'function' ? a : b);\n        this.wrapAsync(this.rmdirBase, [pathToFilename(path), opts], callback);\n    };\n    Volume.prototype.rmBase = function (filename, options) {\n        if (options === void 0) { options = {}; }\n        var link = this.getResolvedLink(filename);\n        if (!link) {\n            // \"stat\" is used to match Node's native error message.\n            if (!options.force)\n                throw createError(ENOENT, 'stat', filename);\n            return;\n        }\n        if (link.getNode().isDirectory()) {\n            if (!options.recursive) {\n                throw createError(ERR_FS_EISDIR, 'rm', filename);\n            }\n        }\n        this.deleteLink(link);\n    };\n    Volume.prototype.rmSync = function (path, options) {\n        this.rmBase(pathToFilename(path), options);\n    };\n    Volume.prototype.rm = function (path, a, b) {\n        var _a = getRmOptsAndCb(a, b), opts = _a[0], callback = _a[1];\n        this.wrapAsync(this.rmBase, [pathToFilename(path), opts], callback);\n    };\n    Volume.prototype.fchmodBase = function (fd, modeNum) {\n        var file = this.getFileByFdOrThrow(fd, 'fchmod');\n        file.chmod(modeNum);\n    };\n    Volume.prototype.fchmodSync = function (fd, mode) {\n        this.fchmodBase(fd, modeToNumber(mode));\n    };\n    Volume.prototype.fchmod = function (fd, mode, callback) {\n        this.wrapAsync(this.fchmodBase, [fd, modeToNumber(mode)], callback);\n    };\n    Volume.prototype.chmodBase = function (filename, modeNum) {\n        var fd = this.openSync(filename, 'r+');\n        try {\n            this.fchmodBase(fd, modeNum);\n        }\n        finally {\n            this.closeSync(fd);\n        }\n    };\n    Volume.prototype.chmodSync = function (path, mode) {\n        var modeNum = modeToNumber(mode);\n        var filename = pathToFilename(path);\n        this.chmodBase(filename, modeNum);\n    };\n    Volume.prototype.chmod = function (path, mode, callback) {\n        var modeNum = modeToNumber(mode);\n        var filename = pathToFilename(path);\n        this.wrapAsync(this.chmodBase, [filename, modeNum], callback);\n    };\n    Volume.prototype.lchmodBase = function (filename, modeNum) {\n        var fd = this.openBase(filename, O_RDWR, 0, false);\n        try {\n            this.fchmodBase(fd, modeNum);\n        }\n        finally {\n            this.closeSync(fd);\n        }\n    };\n    Volume.prototype.lchmodSync = function (path, mode) {\n        var modeNum = modeToNumber(mode);\n        var filename = pathToFilename(path);\n        this.lchmodBase(filename, modeNum);\n    };\n    Volume.prototype.lchmod = function (path, mode, callback) {\n        var modeNum = modeToNumber(mode);\n        var filename = pathToFilename(path);\n        this.wrapAsync(this.lchmodBase, [filename, modeNum], callback);\n    };\n    Volume.prototype.fchownBase = function (fd, uid, gid) {\n        this.getFileByFdOrThrow(fd, 'fchown').chown(uid, gid);\n    };\n    Volume.prototype.fchownSync = function (fd, uid, gid) {\n        validateUid(uid);\n        validateGid(gid);\n        this.fchownBase(fd, uid, gid);\n    };\n    Volume.prototype.fchown = function (fd, uid, gid, callback) {\n        validateUid(uid);\n        validateGid(gid);\n        this.wrapAsync(this.fchownBase, [fd, uid, gid], callback);\n    };\n    Volume.prototype.chownBase = function (filename, uid, gid) {\n        var link = this.getResolvedLinkOrThrow(filename, 'chown');\n        var node = link.getNode();\n        node.chown(uid, gid);\n        // if(node.isFile() || node.isSymlink()) {\n        //\n        // } else if(node.isDirectory()) {\n        //\n        // } else {\n        // TODO: What do we do here?\n        // }\n    };\n    Volume.prototype.chownSync = function (path, uid, gid) {\n        validateUid(uid);\n        validateGid(gid);\n        this.chownBase(pathToFilename(path), uid, gid);\n    };\n    Volume.prototype.chown = function (path, uid, gid, callback) {\n        validateUid(uid);\n        validateGid(gid);\n        this.wrapAsync(this.chownBase, [pathToFilename(path), uid, gid], callback);\n    };\n    Volume.prototype.lchownBase = function (filename, uid, gid) {\n        this.getLinkOrThrow(filename, 'lchown')\n            .getNode()\n            .chown(uid, gid);\n    };\n    Volume.prototype.lchownSync = function (path, uid, gid) {\n        validateUid(uid);\n        validateGid(gid);\n        this.lchownBase(pathToFilename(path), uid, gid);\n    };\n    Volume.prototype.lchown = function (path, uid, gid, callback) {\n        validateUid(uid);\n        validateGid(gid);\n        this.wrapAsync(this.lchownBase, [pathToFilename(path), uid, gid], callback);\n    };\n    Volume.prototype.watchFile = function (path, a, b) {\n        var filename = pathToFilename(path);\n        var options = a;\n        var listener = b;\n        if (typeof options === 'function') {\n            listener = a;\n            options = null;\n        }\n        if (typeof listener !== 'function') {\n            throw Error('\"watchFile()\" requires a listener function');\n        }\n        var interval = 5007;\n        var persistent = true;\n        if (options && typeof options === 'object') {\n            if (typeof options.interval === 'number')\n                interval = options.interval;\n            if (typeof options.persistent === 'boolean')\n                persistent = options.persistent;\n        }\n        var watcher = this.statWatchers[filename];\n        if (!watcher) {\n            watcher = new this.StatWatcher();\n            watcher.start(filename, persistent, interval);\n            this.statWatchers[filename] = watcher;\n        }\n        watcher.addListener('change', listener);\n        return watcher;\n    };\n    Volume.prototype.unwatchFile = function (path, listener) {\n        var filename = pathToFilename(path);\n        var watcher = this.statWatchers[filename];\n        if (!watcher)\n            return;\n        if (typeof listener === 'function') {\n            watcher.removeListener('change', listener);\n        }\n        else {\n            watcher.removeAllListeners('change');\n        }\n        if (watcher.listenerCount('change') === 0) {\n            watcher.stop();\n            delete this.statWatchers[filename];\n        }\n    };\n    Volume.prototype.createReadStream = function (path, options) {\n        return new this.ReadStream(path, options);\n    };\n    Volume.prototype.createWriteStream = function (path, options) {\n        return new this.WriteStream(path, options);\n    };\n    // watch(path: PathLike): FSWatcher;\n    // watch(path: PathLike, options?: IWatchOptions | string): FSWatcher;\n    Volume.prototype.watch = function (path, options, listener) {\n        var filename = pathToFilename(path);\n        var givenOptions = options;\n        if (typeof options === 'function') {\n            listener = options;\n            givenOptions = null;\n        }\n        // tslint:disable-next-line prefer-const\n        var _a = getDefaultOpts(givenOptions), persistent = _a.persistent, recursive = _a.recursive, encoding = _a.encoding;\n        if (persistent === undefined)\n            persistent = true;\n        if (recursive === undefined)\n            recursive = false;\n        var watcher = new this.FSWatcher();\n        watcher.start(filename, persistent, recursive, encoding);\n        if (listener) {\n            watcher.addListener('change', listener);\n        }\n        return watcher;\n    };\n    /**\n     * Global file descriptor counter. UNIX file descriptors start from 0 and go sequentially\n     * up, so here, in order not to conflict with them, we choose some big number and descrease\n     * the file descriptor of every new opened file.\n     * @type {number}\n     * @todo This should not be static, right?\n     */\n    Volume.fd = 0x7fffffff;\n    return Volume;\n}());\nexports.Volume = Volume;\nfunction emitStop(self) {\n    self.emit('stop');\n}\nvar StatWatcher = /** @class */ (function (_super) {\n    __extends(StatWatcher, _super);\n    function StatWatcher(vol) {\n        var _this = _super.call(this) || this;\n        _this.onInterval = function () {\n            try {\n                var stats = _this.vol.statSync(_this.filename);\n                if (_this.hasChanged(stats)) {\n                    _this.emit('change', stats, _this.prev);\n                    _this.prev = stats;\n                }\n            }\n            finally {\n                _this.loop();\n            }\n        };\n        _this.vol = vol;\n        return _this;\n    }\n    StatWatcher.prototype.loop = function () {\n        this.timeoutRef = this.setTimeout(this.onInterval, this.interval);\n    };\n    StatWatcher.prototype.hasChanged = function (stats) {\n        // if(!this.prev) return false;\n        if (stats.mtimeMs > this.prev.mtimeMs)\n            return true;\n        if (stats.nlink !== this.prev.nlink)\n            return true;\n        return false;\n    };\n    StatWatcher.prototype.start = function (path, persistent, interval) {\n        if (persistent === void 0) { persistent = true; }\n        if (interval === void 0) { interval = 5007; }\n        this.filename = pathToFilename(path);\n        this.setTimeout = persistent ? setTimeout.bind(typeof globalThis !== 'undefined' ? globalThis : global) : setTimeoutUnref_1.default;\n        this.interval = interval;\n        this.prev = this.vol.statSync(this.filename);\n        this.loop();\n    };\n    StatWatcher.prototype.stop = function () {\n        clearTimeout(this.timeoutRef);\n        process_1.default.nextTick(emitStop, this);\n    };\n    return StatWatcher;\n}(events_1.EventEmitter));\nexports.StatWatcher = StatWatcher;\nvar pool;\nfunction allocNewPool(poolSize) {\n    pool = (0, buffer_1.bufferAllocUnsafe)(poolSize);\n    pool.used = 0;\n}\nutil.inherits(FsReadStream, stream_1.Readable);\nexports.ReadStream = FsReadStream;\nfunction FsReadStream(vol, path, options) {\n    if (!(this instanceof FsReadStream))\n        return new FsReadStream(vol, path, options);\n    this._vol = vol;\n    // a little bit bigger buffer and water marks by default\n    options = Object.assign({}, getOptions(options, {}));\n    if (options.highWaterMark === undefined)\n        options.highWaterMark = 64 * 1024;\n    stream_1.Readable.call(this, options);\n    this.path = pathToFilename(path);\n    this.fd = options.fd === undefined ? null : options.fd;\n    this.flags = options.flags === undefined ? 'r' : options.flags;\n    this.mode = options.mode === undefined ? 438 : options.mode;\n    this.start = options.start;\n    this.end = options.end;\n    this.autoClose = options.autoClose === undefined ? true : options.autoClose;\n    this.pos = undefined;\n    this.bytesRead = 0;\n    if (this.start !== undefined) {\n        if (typeof this.start !== 'number') {\n            throw new TypeError('\"start\" option must be a Number');\n        }\n        if (this.end === undefined) {\n            this.end = Infinity;\n        }\n        else if (typeof this.end !== 'number') {\n            throw new TypeError('\"end\" option must be a Number');\n        }\n        if (this.start > this.end) {\n            throw new Error('\"start\" option must be <= \"end\" option');\n        }\n        this.pos = this.start;\n    }\n    if (typeof this.fd !== 'number')\n        this.open();\n    this.on('end', function () {\n        if (this.autoClose) {\n            if (this.destroy)\n                this.destroy();\n        }\n    });\n}\nFsReadStream.prototype.open = function () {\n    var self = this; // tslint:disable-line no-this-assignment\n    this._vol.open(this.path, this.flags, this.mode, function (er, fd) {\n        if (er) {\n            if (self.autoClose) {\n                if (self.destroy)\n                    self.destroy();\n            }\n            self.emit('error', er);\n            return;\n        }\n        self.fd = fd;\n        self.emit('open', fd);\n        // start the flow of data.\n        self.read();\n    });\n};\nFsReadStream.prototype._read = function (n) {\n    if (typeof this.fd !== 'number') {\n        return this.once('open', function () {\n            this._read(n);\n        });\n    }\n    if (this.destroyed)\n        return;\n    if (!pool || pool.length - pool.used < kMinPoolSpace) {\n        // discard the old pool.\n        allocNewPool(this._readableState.highWaterMark);\n    }\n    // Grab another reference to the pool in the case that while we're\n    // in the thread pool another read() finishes up the pool, and\n    // allocates a new one.\n    var thisPool = pool;\n    var toRead = Math.min(pool.length - pool.used, n);\n    var start = pool.used;\n    if (this.pos !== undefined)\n        toRead = Math.min(this.end - this.pos + 1, toRead);\n    // already read everything we were supposed to read!\n    // treat as EOF.\n    if (toRead <= 0)\n        return this.push(null);\n    // the actual read.\n    var self = this; // tslint:disable-line no-this-assignment\n    this._vol.read(this.fd, pool, pool.used, toRead, this.pos, onread);\n    // move the pool positions, and internal position for reading.\n    if (this.pos !== undefined)\n        this.pos += toRead;\n    pool.used += toRead;\n    function onread(er, bytesRead) {\n        if (er) {\n            if (self.autoClose && self.destroy) {\n                self.destroy();\n            }\n            self.emit('error', er);\n        }\n        else {\n            var b = null;\n            if (bytesRead > 0) {\n                self.bytesRead += bytesRead;\n                b = thisPool.slice(start, start + bytesRead);\n            }\n            self.push(b);\n        }\n    }\n};\nFsReadStream.prototype._destroy = function (err, cb) {\n    this.close(function (err2) {\n        cb(err || err2);\n    });\n};\nFsReadStream.prototype.close = function (cb) {\n    var _this = this;\n    if (cb)\n        this.once('close', cb);\n    if (this.closed || typeof this.fd !== 'number') {\n        if (typeof this.fd !== 'number') {\n            this.once('open', closeOnOpen);\n            return;\n        }\n        return process_1.default.nextTick(function () { return _this.emit('close'); });\n    }\n    this.closed = true;\n    this._vol.close(this.fd, function (er) {\n        if (er)\n            _this.emit('error', er);\n        else\n            _this.emit('close');\n    });\n    this.fd = null;\n};\n// needed because as it will be called with arguments\n// that does not match this.close() signature\nfunction closeOnOpen(fd) {\n    this.close();\n}\nutil.inherits(FsWriteStream, stream_1.Writable);\nexports.WriteStream = FsWriteStream;\nfunction FsWriteStream(vol, path, options) {\n    if (!(this instanceof FsWriteStream))\n        return new FsWriteStream(vol, path, options);\n    this._vol = vol;\n    options = Object.assign({}, getOptions(options, {}));\n    stream_1.Writable.call(this, options);\n    this.path = pathToFilename(path);\n    this.fd = options.fd === undefined ? null : options.fd;\n    this.flags = options.flags === undefined ? 'w' : options.flags;\n    this.mode = options.mode === undefined ? 438 : options.mode;\n    this.start = options.start;\n    this.autoClose = options.autoClose === undefined ? true : !!options.autoClose;\n    this.pos = undefined;\n    this.bytesWritten = 0;\n    if (this.start !== undefined) {\n        if (typeof this.start !== 'number') {\n            throw new TypeError('\"start\" option must be a Number');\n        }\n        if (this.start < 0) {\n            throw new Error('\"start\" must be >= zero');\n        }\n        this.pos = this.start;\n    }\n    if (options.encoding)\n        this.setDefaultEncoding(options.encoding);\n    if (typeof this.fd !== 'number')\n        this.open();\n    // dispose on finish.\n    this.once('finish', function () {\n        if (this.autoClose) {\n            this.close();\n        }\n    });\n}\nFsWriteStream.prototype.open = function () {\n    this._vol.open(this.path, this.flags, this.mode, function (er, fd) {\n        if (er) {\n            if (this.autoClose && this.destroy) {\n                this.destroy();\n            }\n            this.emit('error', er);\n            return;\n        }\n        this.fd = fd;\n        this.emit('open', fd);\n    }.bind(this));\n};\nFsWriteStream.prototype._write = function (data, encoding, cb) {\n    if (!(data instanceof buffer_1.Buffer))\n        return this.emit('error', new Error('Invalid data'));\n    if (typeof this.fd !== 'number') {\n        return this.once('open', function () {\n            this._write(data, encoding, cb);\n        });\n    }\n    var self = this; // tslint:disable-line no-this-assignment\n    this._vol.write(this.fd, data, 0, data.length, this.pos, function (er, bytes) {\n        if (er) {\n            if (self.autoClose && self.destroy) {\n                self.destroy();\n            }\n            return cb(er);\n        }\n        self.bytesWritten += bytes;\n        cb();\n    });\n    if (this.pos !== undefined)\n        this.pos += data.length;\n};\nFsWriteStream.prototype._writev = function (data, cb) {\n    if (typeof this.fd !== 'number') {\n        return this.once('open', function () {\n            this._writev(data, cb);\n        });\n    }\n    var self = this; // tslint:disable-line no-this-assignment\n    var len = data.length;\n    var chunks = new Array(len);\n    var size = 0;\n    for (var i = 0; i < len; i++) {\n        var chunk = data[i].chunk;\n        chunks[i] = chunk;\n        size += chunk.length;\n    }\n    var buf = buffer_1.Buffer.concat(chunks);\n    this._vol.write(this.fd, buf, 0, buf.length, this.pos, function (er, bytes) {\n        if (er) {\n            if (self.destroy)\n                self.destroy();\n            return cb(er);\n        }\n        self.bytesWritten += bytes;\n        cb();\n    });\n    if (this.pos !== undefined)\n        this.pos += size;\n};\nFsWriteStream.prototype._destroy = FsReadStream.prototype._destroy;\nFsWriteStream.prototype.close = FsReadStream.prototype.close;\n// There is no shutdown() for files.\nFsWriteStream.prototype.destroySoon = FsWriteStream.prototype.end;\n// ---------------------------------------- FSWatcher\nvar FSWatcher = /** @class */ (function (_super) {\n    __extends(FSWatcher, _super);\n    function FSWatcher(vol) {\n        var _this = _super.call(this) || this;\n        _this._filename = '';\n        _this._filenameEncoded = '';\n        // _persistent: boolean = true;\n        _this._recursive = false;\n        _this._encoding = encoding_1.ENCODING_UTF8;\n        _this._onNodeChange = function () {\n            _this._emit('change');\n        };\n        _this._onParentChild = function (link) {\n            if (link.getName() === _this._getName()) {\n                _this._emit('rename');\n            }\n        };\n        _this._emit = function (type) {\n            _this.emit('change', type, _this._filenameEncoded);\n        };\n        _this._persist = function () {\n            _this._timer = setTimeout(_this._persist, 1e6);\n        };\n        _this._vol = vol;\n        return _this;\n        // TODO: Emit \"error\" messages when watching.\n        // this._handle.onchange = function(status, eventType, filename) {\n        //     if (status < 0) {\n        //         self._handle.close();\n        //         const error = !filename ?\n        //             errnoException(status, 'Error watching file for changes:') :\n        //             errnoException(status, `Error watching file ${filename} for changes:`);\n        //         error.filename = filename;\n        //         self.emit('error', error);\n        //     } else {\n        //         self.emit('change', eventType, filename);\n        //     }\n        // };\n    }\n    FSWatcher.prototype._getName = function () {\n        return this._steps[this._steps.length - 1];\n    };\n    FSWatcher.prototype.start = function (path, persistent, recursive, encoding) {\n        if (persistent === void 0) { persistent = true; }\n        if (recursive === void 0) { recursive = false; }\n        if (encoding === void 0) { encoding = encoding_1.ENCODING_UTF8; }\n        this._filename = pathToFilename(path);\n        this._steps = filenameToSteps(this._filename);\n        this._filenameEncoded = (0, encoding_1.strToEncoding)(this._filename);\n        // this._persistent = persistent;\n        this._recursive = recursive;\n        this._encoding = encoding;\n        try {\n            this._link = this._vol.getLinkOrThrow(this._filename, 'FSWatcher');\n        }\n        catch (err) {\n            var error = new Error(\"watch \".concat(this._filename, \" \").concat(err.code));\n            error.code = err.code;\n            error.errno = err.code;\n            throw error;\n        }\n        this._link.getNode().on('change', this._onNodeChange);\n        this._link.on('child:add', this._onNodeChange);\n        this._link.on('child:delete', this._onNodeChange);\n        var parent = this._link.parent;\n        if (parent) {\n            // parent.on('child:add', this._onParentChild);\n            parent.setMaxListeners(parent.getMaxListeners() + 1);\n            parent.on('child:delete', this._onParentChild);\n        }\n        if (persistent)\n            this._persist();\n    };\n    FSWatcher.prototype.close = function () {\n        clearTimeout(this._timer);\n        this._link.getNode().removeListener('change', this._onNodeChange);\n        var parent = this._link.parent;\n        if (parent) {\n            // parent.removeListener('child:add', this._onParentChild);\n            parent.removeListener('child:delete', this._onParentChild);\n        }\n    };\n    return FSWatcher;\n}(events_1.EventEmitter));\nexports.FSWatcher = FSWatcher;\n"]},"metadata":{},"sourceType":"script"}