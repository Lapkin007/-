{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar util_1 = require(\"../../compile/util\");\n\nvar def = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n        schema = cxt.schema,\n        it = cxt.it;\n\n    if ((0, util_1.alwaysValidSchema)(it, schema)) {\n      cxt.fail();\n      return;\n    }\n\n    var valid = gen.name(\"valid\");\n    cxt.subschema({\n      keyword: \"not\",\n      compositeRule: true,\n      createErrors: false,\n      allErrors: false\n    }, valid);\n    cxt.failResult(valid, function () {\n      return cxt.reset();\n    }, function () {\n      return cxt.error();\n    });\n  },\n  error: {\n    message: \"must NOT be valid\"\n  }\n};\nexports.default = def;","map":{"version":3,"mappings":";;;;;;;;AAEA;;AAIA,IAAMA,GAAG,GAA0B;AACjCC,SAAO,EAAE,KADwB;AAEjCC,YAAU,EAAE,CAAC,QAAD,EAAW,SAAX,CAFqB;AAGjCC,aAAW,EAAE,IAHoB;AAIjCC,MAJiC,gBAI5BC,GAJ4B,EAIb;AAClB,QAAOC,GAAP,GAA0BD,GAA1B,CAAOC,GAAP;AAAA,QAAYC,MAAZ,GAA0BF,GAA1B,CAAYE,MAAZ;AAAA,QAAoBC,EAApB,GAA0BH,GAA1B,CAAoBG,EAApB;;AACA,QAAI,8BAAkBA,EAAlB,EAAsBD,MAAtB,CAAJ,EAAmC;AACjCF,SAAG,CAACI,IAAJ;AACA;AACD;;AAED,QAAMC,KAAK,GAAGJ,GAAG,CAACK,IAAJ,CAAS,OAAT,CAAd;AACAN,OAAG,CAACO,SAAJ,CACE;AACEX,aAAO,EAAE,KADX;AAEEY,mBAAa,EAAE,IAFjB;AAGEC,kBAAY,EAAE,KAHhB;AAIEC,eAAS,EAAE;AAJb,KADF,EAOEL,KAPF;AAUAL,OAAG,CAACW,UAAJ,CACEN,KADF,EAEE;AAAA,aAAML,GAAG,CAACY,KAAJ,EAAN;AAAA,KAFF,EAGE;AAAA,aAAMZ,GAAG,CAACa,KAAJ,EAAN;AAAA,KAHF;AAKD,GA3BgC;AA4BjCA,OAAK,EAAE;AAACC,WAAO,EAAE;AAAV;AA5B0B,CAAnC;AA+BAC,kBAAepB,GAAf","names":["def","keyword","schemaType","trackErrors","code","cxt","gen","schema","it","fail","valid","name","subschema","compositeRule","createErrors","allErrors","failResult","reset","error","message","exports"],"sourceRoot":"","sources":["../../../lib/vocabularies/applicator/not.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}