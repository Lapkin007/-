{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nvar _util_1 = require(\"./_util\");\n\nvar error = {\n  message: function message(_ref) {\n    var schemaProp = _ref.params.schemaProp;\n    return schemaProp ? (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"should match case \\\"\", \"\\\" schema\"])), schemaProp) : (0, codegen_1.str)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"should match default case schema\"])));\n  },\n  params: function params(_ref2) {\n    var schemaProp = _ref2.params.schemaProp;\n    return schemaProp ? (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"{failingCase: \", \"}\"])), schemaProp) : (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"{failingDefault: true}\"])));\n  }\n};\n\nfunction getDef(opts) {\n  var metaSchema = (0, _util_1.metaSchemaRef)(opts);\n  return [{\n    keyword: \"select\",\n    schemaType: [\"string\", \"number\", \"boolean\", \"null\"],\n    $data: true,\n    error: error,\n    dependencies: [\"selectCases\"],\n    code: function code(cxt) {\n      var gen = cxt.gen,\n          schemaCode = cxt.schemaCode,\n          parentSchema = cxt.parentSchema;\n      cxt.block$data(codegen_1.nil, function () {\n        var valid = gen.let(\"valid\", true);\n        var schValid = gen.name(\"_valid\");\n        var value = gen.const(\"value\", (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" === null ? \\\"null\\\" : \", \"\"])), schemaCode, schemaCode));\n        gen.if(false); // optimizer should remove it from generated code\n\n        for (var schemaProp in parentSchema.selectCases) {\n          cxt.setParams({\n            schemaProp: schemaProp\n          });\n          gen.elseIf((0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\\"\\\" + \", \" == \", \"\"])), value, schemaProp)); // intentional ==, to match numbers and booleans\n\n          var schCxt = cxt.subschema({\n            keyword: \"selectCases\",\n            schemaProp: schemaProp\n          }, schValid);\n          cxt.mergeEvaluated(schCxt, codegen_1.Name);\n          gen.assign(valid, schValid);\n        }\n\n        gen.else();\n\n        if (parentSchema.selectDefault !== undefined) {\n          cxt.setParams({\n            schemaProp: undefined\n          });\n\n          var _schCxt = cxt.subschema({\n            keyword: \"selectDefault\"\n          }, schValid);\n\n          cxt.mergeEvaluated(_schCxt, codegen_1.Name);\n          gen.assign(valid, schValid);\n        }\n\n        gen.endIf();\n        cxt.pass(valid);\n      });\n    }\n  }, {\n    keyword: \"selectCases\",\n    dependencies: [\"select\"],\n    metaSchema: {\n      type: \"object\",\n      additionalProperties: metaSchema\n    }\n  }, {\n    keyword: \"selectDefault\",\n    dependencies: [\"select\", \"selectCases\"],\n    metaSchema: metaSchema\n  }];\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"mappings":"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","names":["error","message","schemaProp","params","getDef","opts","metaSchema","keyword","schemaType","$data","dependencies","code","cxt","gen","schemaCode","parentSchema","block$data","codegen_1","valid","let","schValid","name","value","const","if","selectCases","setParams","elseIf","schCxt","subschema","mergeEvaluated","assign","else","selectDefault","undefined","endIf","pass","type","additionalProperties","exports","module"],"sourceRoot":"","sources":["../../src/definitions/select.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}