{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * First-in, First-out task queue that manages a dedicated pool\n * for each worker as well as a shared queue. The FIFO ordering is guaranteed\n * across the worker specific and shared queue.\n */\n\n\nvar FifoQueue = /*#__PURE__*/function () {\n  function FifoQueue() {\n    _classCallCheck(this, FifoQueue);\n\n    _defineProperty(this, '_workerQueues', []);\n\n    _defineProperty(this, '_sharedQueue', new InternalQueue());\n  }\n\n  _createClass(FifoQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(task, workerId) {\n      if (workerId == null) {\n        this._sharedQueue.enqueue(task);\n\n        return;\n      }\n\n      var workerQueue = this._workerQueues[workerId];\n\n      if (workerQueue == null) {\n        workerQueue = this._workerQueues[workerId] = new InternalQueue();\n      }\n\n      var sharedTop = this._sharedQueue.peekLast();\n\n      var item = {\n        previousSharedTask: sharedTop,\n        task: task\n      };\n      workerQueue.enqueue(item);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue(workerId) {\n      var _this$_workerQueues$w, _workerTop$previousSh, _workerTop$previousSh2;\n\n      var workerTop = (_this$_workerQueues$w = this._workerQueues[workerId]) === null || _this$_workerQueues$w === void 0 ? void 0 : _this$_workerQueues$w.peek();\n      var sharedTaskIsProcessed = (_workerTop$previousSh = workerTop === null || workerTop === void 0 ? void 0 : (_workerTop$previousSh2 = workerTop.previousSharedTask) === null || _workerTop$previousSh2 === void 0 ? void 0 : _workerTop$previousSh2.request[1]) !== null && _workerTop$previousSh !== void 0 ? _workerTop$previousSh : true; // Process the top task from the shared queue if\n      // - there's no task in the worker specific queue or\n      // - if the non-worker-specific task after which this worker specifif task\n      //   hasn been queued wasn't processed yet\n\n      if (workerTop != null && sharedTaskIsProcessed) {\n        var _this$_workerQueues$w2, _this$_workerQueues$w3, _this$_workerQueues$w4;\n\n        return (_this$_workerQueues$w2 = (_this$_workerQueues$w3 = this._workerQueues[workerId]) === null || _this$_workerQueues$w3 === void 0 ? void 0 : (_this$_workerQueues$w4 = _this$_workerQueues$w3.dequeue()) === null || _this$_workerQueues$w4 === void 0 ? void 0 : _this$_workerQueues$w4.task) !== null && _this$_workerQueues$w2 !== void 0 ? _this$_workerQueues$w2 : null;\n      }\n\n      return this._sharedQueue.dequeue();\n    }\n  }]);\n\n  return FifoQueue;\n}();\n\nexports.default = FifoQueue;\n/**\n * FIFO queue for a single worker / shared queue.\n */\n\nvar InternalQueue = /*#__PURE__*/function () {\n  function InternalQueue() {\n    _classCallCheck(this, InternalQueue);\n\n    _defineProperty(this, '_head', null);\n\n    _defineProperty(this, '_last', null);\n  }\n\n  _createClass(InternalQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      var item = {\n        next: null,\n        value: value\n      };\n\n      if (this._last == null) {\n        this._head = item;\n      } else {\n        this._last.next = item;\n      }\n\n      this._last = item;\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      if (this._head == null) {\n        return null;\n      }\n\n      var item = this._head;\n      this._head = item.next;\n\n      if (this._head == null) {\n        this._last = null;\n      }\n\n      return item.value;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      var _this$_head$value, _this$_head;\n\n      return (_this$_head$value = (_this$_head = this._head) === null || _this$_head === void 0 ? void 0 : _this$_head.value) !== null && _this$_head$value !== void 0 ? _this$_head$value : null;\n    }\n  }, {\n    key: \"peekLast\",\n    value: function peekLast() {\n      var _this$_last$value, _this$_last;\n\n      return (_this$_last$value = (_this$_last = this._last) === null || _this$_last === void 0 ? void 0 : _this$_last.value) !== null && _this$_last$value !== void 0 ? _this$_last$value : null;\n    }\n  }]);\n\n  return InternalQueue;\n}();","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/jest-worker/build/FifoQueue.js"],"names":["Object","defineProperty","exports","value","default","_defineProperty","obj","key","enumerable","configurable","writable","FifoQueue","InternalQueue","task","workerId","_sharedQueue","enqueue","workerQueue","_workerQueues","sharedTop","peekLast","item","previousSharedTask","_this$_workerQueues$w","_workerTop$previousSh","_workerTop$previousSh2","workerTop","peek","sharedTaskIsProcessed","request","_this$_workerQueues$w2","_this$_workerQueues$w3","_this$_workerQueues$w4","dequeue","next","_last","_head","_this$_head$value","_this$_head","_this$_last$value","_this$_last"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * First-in, First-out task queue that manages a dedicated pool\n * for each worker as well as a shared queue. The FIFO ordering is guaranteed\n * across the worker specific and shared queue.\n */\nclass FifoQueue {\n  constructor() {\n    _defineProperty(this, '_workerQueues', []);\n\n    _defineProperty(this, '_sharedQueue', new InternalQueue());\n  }\n\n  enqueue(task, workerId) {\n    if (workerId == null) {\n      this._sharedQueue.enqueue(task);\n\n      return;\n    }\n\n    let workerQueue = this._workerQueues[workerId];\n\n    if (workerQueue == null) {\n      workerQueue = this._workerQueues[workerId] = new InternalQueue();\n    }\n\n    const sharedTop = this._sharedQueue.peekLast();\n\n    const item = {\n      previousSharedTask: sharedTop,\n      task\n    };\n    workerQueue.enqueue(item);\n  }\n\n  dequeue(workerId) {\n    var _this$_workerQueues$w, _workerTop$previousSh, _workerTop$previousSh2;\n\n    const workerTop =\n      (_this$_workerQueues$w = this._workerQueues[workerId]) === null ||\n      _this$_workerQueues$w === void 0\n        ? void 0\n        : _this$_workerQueues$w.peek();\n    const sharedTaskIsProcessed =\n      (_workerTop$previousSh =\n        workerTop === null || workerTop === void 0\n          ? void 0\n          : (_workerTop$previousSh2 = workerTop.previousSharedTask) === null ||\n            _workerTop$previousSh2 === void 0\n          ? void 0\n          : _workerTop$previousSh2.request[1]) !== null &&\n      _workerTop$previousSh !== void 0\n        ? _workerTop$previousSh\n        : true; // Process the top task from the shared queue if\n    // - there's no task in the worker specific queue or\n    // - if the non-worker-specific task after which this worker specifif task\n    //   hasn been queued wasn't processed yet\n\n    if (workerTop != null && sharedTaskIsProcessed) {\n      var _this$_workerQueues$w2,\n        _this$_workerQueues$w3,\n        _this$_workerQueues$w4;\n\n      return (_this$_workerQueues$w2 =\n        (_this$_workerQueues$w3 = this._workerQueues[workerId]) === null ||\n        _this$_workerQueues$w3 === void 0\n          ? void 0\n          : (_this$_workerQueues$w4 = _this$_workerQueues$w3.dequeue()) ===\n              null || _this$_workerQueues$w4 === void 0\n          ? void 0\n          : _this$_workerQueues$w4.task) !== null &&\n        _this$_workerQueues$w2 !== void 0\n        ? _this$_workerQueues$w2\n        : null;\n    }\n\n    return this._sharedQueue.dequeue();\n  }\n}\n\nexports.default = FifoQueue;\n\n/**\n * FIFO queue for a single worker / shared queue.\n */\nclass InternalQueue {\n  constructor() {\n    _defineProperty(this, '_head', null);\n\n    _defineProperty(this, '_last', null);\n  }\n\n  enqueue(value) {\n    const item = {\n      next: null,\n      value\n    };\n\n    if (this._last == null) {\n      this._head = item;\n    } else {\n      this._last.next = item;\n    }\n\n    this._last = item;\n  }\n\n  dequeue() {\n    if (this._head == null) {\n      return null;\n    }\n\n    const item = this._head;\n    this._head = item.next;\n\n    if (this._head == null) {\n      this._last = null;\n    }\n\n    return item.value;\n  }\n\n  peek() {\n    var _this$_head$value, _this$_head;\n\n    return (_this$_head$value =\n      (_this$_head = this._head) === null || _this$_head === void 0\n        ? void 0\n        : _this$_head.value) !== null && _this$_head$value !== void 0\n      ? _this$_head$value\n      : null;\n  }\n\n  peekLast() {\n    var _this$_last$value, _this$_last;\n\n    return (_this$_last$value =\n      (_this$_last = this._last) === null || _this$_last === void 0\n        ? void 0\n        : _this$_last.value) !== null && _this$_last$value !== void 0\n      ? _this$_last$value\n      : null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}