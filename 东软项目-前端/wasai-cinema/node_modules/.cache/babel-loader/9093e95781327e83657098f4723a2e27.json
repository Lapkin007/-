{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject;\n\nrequire(\"core-js/modules/es.regexp.flags.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nvar _util_1 = require(\"./_util\");\n\nvar regexpMetaSchema = {\n  type: \"object\",\n  properties: {\n    pattern: {\n      type: \"string\"\n    },\n    flags: {\n      type: \"string\",\n      nullable: true\n    }\n  },\n  required: [\"pattern\"],\n  additionalProperties: false\n};\nvar metaRegexp = /^\\/(.*)\\/([gimuy]*)$/;\n\nfunction getDef() {\n  return {\n    keyword: \"regexp\",\n    type: \"string\",\n    schemaType: [\"string\", \"object\"],\n    code: function code(cxt) {\n      var data = cxt.data,\n          schema = cxt.schema;\n      var regx = getRegExp(schema);\n      cxt.pass((0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \".test(\", \")\"])), regx, data));\n\n      function getRegExp(sch) {\n        if (_typeof(sch) == \"object\") return (0, _util_1.usePattern)(cxt, sch.pattern, sch.flags);\n        var rx = metaRegexp.exec(sch);\n        if (rx) return (0, _util_1.usePattern)(cxt, rx[1], rx[2]);\n        throw new Error(\"cannot parse string into RegExp\");\n      }\n    },\n    metaSchema: {\n      anyOf: [{\n        type: \"string\"\n      }, regexpMetaSchema]\n    }\n  };\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AACA;;AACA;;AAOA,IAAMA,gBAAgB,GAAiC;AACrDC,MAAI,EAAE,QAD+C;AAErDC,YAAU,EAAE;AACVC,WAAO,EAAE;AAACF,UAAI,EAAE;AAAP,KADC;AAEVG,SAAK,EAAE;AAACH,UAAI,EAAE,QAAP;AAAiBI,cAAQ,EAAE;AAA3B;AAFG,GAFyC;AAMrDC,UAAQ,EAAE,CAAC,SAAD,CAN2C;AAOrDC,sBAAoB,EAAE;AAP+B,CAAvD;AAUA,IAAMC,UAAU,GAAG,sBAAnB;;AAEA,SAAwBC,MAAxB,GAA8B;AAC5B,SAAO;AACLC,WAAO,EAAE,QADJ;AAELT,QAAI,EAAE,QAFD;AAGLU,cAAU,EAAE,CAAC,QAAD,EAAW,QAAX,CAHP;AAILC,QAJK,gBAIAC,GAJA,EAIe;AAClB,UAAOC,IAAP,GAAuBD,GAAvB,CAAOC,IAAP;AAAA,UAAaC,MAAb,GAAuBF,GAAvB,CAAaE,MAAb;AACA,UAAMC,IAAI,GAAGC,SAAS,CAACF,MAAD,CAAtB;AACAF,SAAG,CAACK,IAAJ,EAAS,cAAT,sFAAaF,IAAb,EAA0BF,IAA1B;;AAEA,eAASG,SAAT,CAAmBE,GAAnB,EAA6C;AAC3C,YAAI,QAAOA,GAAP,KAAc,QAAlB,EAA4B,OAAO,wBAAWN,GAAX,EAAgBM,GAAG,CAAChB,OAApB,EAA6BgB,GAAG,CAACf,KAAjC,CAAP;AAC5B,YAAMgB,EAAE,GAAGZ,UAAU,CAACa,IAAX,CAAgBF,GAAhB,CAAX;AACA,YAAIC,EAAJ,EAAQ,OAAO,wBAAWP,GAAX,EAAgBO,EAAE,CAAC,CAAD,CAAlB,EAAuBA,EAAE,CAAC,CAAD,CAAzB,CAAP;AACR,cAAM,IAAIE,KAAJ,CAAU,iCAAV,CAAN;AACD;AACF,KAfI;AAgBLC,cAAU,EAAE;AACVC,WAAK,EAAE,CAAC;AAACvB,YAAI,EAAE;AAAP,OAAD,EAAmBD,gBAAnB;AADG;AAhBP,GAAP;AAoBD;;AArBDyB;AAuBAC,MAAM,CAACD,OAAP,GAAiBhB,MAAjB","names":["regexpMetaSchema","type","properties","pattern","flags","nullable","required","additionalProperties","metaRegexp","getDef","keyword","schemaType","code","cxt","data","schema","regx","getRegExp","pass","sch","rx","exec","Error","metaSchema","anyOf","exports","module"],"sourceRoot":"","sources":["../../src/definitions/regexp.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}