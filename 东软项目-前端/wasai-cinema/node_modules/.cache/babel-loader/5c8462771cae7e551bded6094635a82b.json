{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2;\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateTuple = void 0;\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar code_1 = require(\"../code\");\n\nvar def = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code: function code(cxt) {\n    var schema = cxt.schema,\n        it = cxt.it;\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema);\n    it.items = true;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    cxt.ok((0, code_1.validateArray)(cxt));\n  }\n};\n\nfunction validateTuple(cxt, extraItems) {\n  var schArr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : cxt.schema;\n  var gen = cxt.gen,\n      parentSchema = cxt.parentSchema,\n      data = cxt.data,\n      keyword = cxt.keyword,\n      it = cxt.it;\n  checkStrictTuple(parentSchema);\n\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n  }\n\n  var valid = gen.name(\"valid\");\n  var len = gen.const(\"len\", (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \".length\"])), data));\n  schArr.forEach(function (sch, i) {\n    if ((0, util_1.alwaysValidSchema)(it, sch)) return;\n    gen.if((0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" > \", \"\"])), len, i), function () {\n      return cxt.subschema({\n        keyword: keyword,\n        schemaProp: i,\n        dataProp: i\n      }, valid);\n    });\n    cxt.ok(valid);\n  });\n\n  function checkStrictTuple(sch) {\n    var opts = it.opts,\n        errSchemaPath = it.errSchemaPath;\n    var l = schArr.length;\n    var fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n\n    if (opts.strictTuples && !fullTuple) {\n      var msg = \"\\\"\".concat(keyword, \"\\\" is \").concat(l, \"-tuple, but minItems or maxItems/\").concat(extraItems, \" are not specified or different at path \\\"\").concat(errSchemaPath, \"\\\"\");\n      (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n    }\n  }\n}\n\nexports.validateTuple = validateTuple;\nexports.default = def;","map":{"version":3,"mappings":"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","names":["def","keyword","type","schemaType","before","code","cxt","schema","it","Array","isArray","validateTuple","items","ok","extraItems","schArr","gen","parentSchema","data","checkStrictTuple","opts","unevaluated","length","util_1","valid","name","len","const","forEach","sch","i","if","subschema","schemaProp","dataProp","errSchemaPath","l","fullTuple","minItems","maxItems","strictTuples","msg","exports"],"sourceRoot":"","sources":["../../../lib/vocabularies/applicator/items.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}