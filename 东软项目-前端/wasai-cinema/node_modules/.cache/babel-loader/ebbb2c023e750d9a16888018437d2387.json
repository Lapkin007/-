{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.sticky.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CONSTRUCTORS = {\n  Object: Object,\n  Array: Array,\n  Function: Function,\n  Number: Number,\n  String: String,\n  Date: Date,\n  RegExp: RegExp\n};\n/* istanbul ignore else */\n\nif (typeof Buffer != \"undefined\") CONSTRUCTORS.Buffer = Buffer;\n/* istanbul ignore else */\n\nif (typeof Promise != \"undefined\") CONSTRUCTORS.Promise = Promise;\nvar getDef = Object.assign(_getDef, {\n  CONSTRUCTORS: CONSTRUCTORS\n});\n\nfunction _getDef() {\n  return {\n    keyword: \"instanceof\",\n    schemaType: [\"string\", \"array\"],\n    compile: function compile(schema) {\n      if (typeof schema == \"string\") {\n        var C = getConstructor(schema);\n        return function (data) {\n          return data instanceof C;\n        };\n      }\n\n      if (Array.isArray(schema)) {\n        var constructors = schema.map(getConstructor);\n        return function (data) {\n          var _iterator = _createForOfIteratorHelper(constructors),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _C = _step.value;\n              if (data instanceof _C) return true;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return false;\n        };\n      }\n      /* istanbul ignore next */\n\n\n      throw new Error(\"ajv implementation error\");\n    },\n    metaSchema: {\n      anyOf: [{\n        type: \"string\"\n      }, {\n        type: \"array\",\n        items: {\n          type: \"string\"\n        }\n      }]\n    }\n  };\n}\n\nfunction getConstructor(c) {\n  var C = CONSTRUCTORS[c];\n  if (C) return C;\n  throw new Error(\"invalid \\\"instanceof\\\" keyword value \".concat(c));\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,YAAY,GAA4C;AAC5DC,QAAM,EAANA,MAD4D;AAE5DC,OAAK,EAALA,KAF4D;AAG5DC,UAAQ,EAARA,QAH4D;AAI5DC,QAAM,EAANA,MAJ4D;AAK5DC,QAAM,EAANA,MAL4D;AAM5DC,MAAI,EAAJA,IAN4D;AAO5DC,QAAM,EAANA;AAP4D,CAA9D;AAUA;;AACA,IAAI,OAAOC,MAAP,IAAiB,WAArB,EAAkCR,YAAY,CAACQ,MAAb,GAAsBA,MAAtB;AAElC;;AACA,IAAI,OAAOC,OAAP,IAAkB,WAAtB,EAAmCT,YAAY,CAACS,OAAb,GAAuBA,OAAvB;AAEnC,IAAMC,MAAM,GAERT,MAAM,CAACU,MAAP,CAAcC,OAAd,EAAuB;AAACZ,cAAY,EAAZA;AAAD,CAAvB,CAFJ;;AAIA,SAASY,OAAT,GAAgB;AACd,SAAO;AACLC,WAAO,EAAE,YADJ;AAELC,cAAU,EAAE,CAAC,QAAD,EAAW,OAAX,CAFP;AAGLC,WAHK,mBAGGC,MAHH,EAG4B;AAC/B,UAAI,OAAOA,MAAP,IAAiB,QAArB,EAA+B;AAC7B,YAAMC,CAAC,GAAGC,cAAc,CAACF,MAAD,CAAxB;AACA,eAAO,UAACG,IAAD;AAAA,iBAAUA,IAAI,YAAYF,CAA1B;AAAA,SAAP;AACD;;AAED,UAAIf,KAAK,CAACkB,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACzB,YAAMK,YAAY,GAAGL,MAAM,CAACM,GAAP,CAAWJ,cAAX,CAArB;AACA,eAAO,UAACC,IAAD,EAAS;AAAA,qDACEE,YADF;AAAA;;AAAA;AACd,gEAA8B;AAAA,kBAAnBJ,EAAmB;AAC5B,kBAAIE,IAAI,YAAYF,EAApB,EAAuB,OAAO,IAAP;AACxB;AAHa;AAAA;AAAA;AAAA;AAAA;;AAId,iBAAO,KAAP;AACD,SALD;AAMD;AAED;;;AACA,YAAM,IAAIM,KAAJ,CAAU,0BAAV,CAAN;AACD,KArBI;AAsBLC,cAAU,EAAE;AACVC,WAAK,EAAE,CAAC;AAACC,YAAI,EAAE;AAAP,OAAD,EAAmB;AAACA,YAAI,EAAE,OAAP;AAAgBC,aAAK,EAAE;AAACD,cAAI,EAAE;AAAP;AAAvB,OAAnB;AADG;AAtBP,GAAP;AA0BD;;AAED,SAASR,cAAT,CAAwBU,CAAxB,EAAiC;AAC/B,MAAMX,CAAC,GAAGjB,YAAY,CAAC4B,CAAD,CAAtB;AACA,MAAIX,CAAJ,EAAO,OAAOA,CAAP;AACP,QAAM,IAAIM,KAAJ,gDAAgDK,CAAhD,EAAN;AACD;;AAEDC,kBAAenB,MAAf;AACAoB,MAAM,CAACD,OAAP,GAAiBnB,MAAjB","names":["CONSTRUCTORS","Object","Array","Function","Number","String","Date","RegExp","Buffer","Promise","getDef","assign","_getDef","keyword","schemaType","compile","schema","C","getConstructor","data","isArray","constructors","map","Error","metaSchema","anyOf","type","items","c","exports","module"],"sourceRoot":"","sources":["../../src/definitions/instanceof.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}