{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callRef = exports.getValidate = void 0;\n\nvar ref_error_1 = require(\"../../compile/ref_error\");\n\nvar code_1 = require(\"../code\");\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar names_1 = require(\"../../compile/names\");\n\nvar compile_1 = require(\"../../compile\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar def = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code: function code(cxt) {\n    var gen = cxt.gen,\n        $ref = cxt.schema,\n        it = cxt.it;\n    var baseId = it.baseId,\n        env = it.schemaEnv,\n        validateName = it.validateName,\n        opts = it.opts,\n        self = it.self;\n    var root = env.root;\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef();\n    var schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n    if (schOrEnv === undefined) throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n    if (schOrEnv instanceof compile_1.SchemaEnv) return callValidate(schOrEnv);\n    return inlineRefSchema(schOrEnv);\n\n    function callRootRef() {\n      if (env === root) return callRef(cxt, validateName, env, env.$async);\n      var rootName = gen.scopeValue(\"root\", {\n        ref: root\n      });\n      return callRef(cxt, (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \".validate\"])), rootName), root, root.$async);\n    }\n\n    function callValidate(sch) {\n      var v = getValidate(cxt, sch);\n      callRef(cxt, v, sch, sch.$async);\n    }\n\n    function inlineRefSchema(sch) {\n      var schName = gen.scopeValue(\"schema\", opts.code.source === true ? {\n        ref: sch,\n        code: (0, codegen_1.stringify)(sch)\n      } : {\n        ref: sch\n      });\n      var valid = gen.name(\"valid\");\n      var schCxt = cxt.subschema({\n        schema: sch,\n        dataTypes: [],\n        schemaPath: codegen_1.nil,\n        topSchemaRef: schName,\n        errSchemaPath: $ref\n      }, valid);\n      cxt.mergeEvaluated(schCxt);\n      cxt.ok(valid);\n    }\n  }\n};\n\nfunction getValidate(cxt, sch) {\n  var gen = cxt.gen;\n  return sch.validate ? gen.scopeValue(\"validate\", {\n    ref: sch.validate\n  }) : (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \".validate\"])), gen.scopeValue(\"wrapper\", {\n    ref: sch\n  }));\n}\n\nexports.getValidate = getValidate;\n\nfunction callRef(cxt, v, sch, $async) {\n  var gen = cxt.gen,\n      it = cxt.it;\n  var allErrors = it.allErrors,\n      env = it.schemaEnv,\n      opts = it.opts;\n  var passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n  if ($async) callAsyncRef();else callSyncRef();\n\n  function callAsyncRef() {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\");\n    var valid = gen.let(\"valid\");\n    gen.try(function () {\n      gen.code((0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"await \", \"\"])), (0, code_1.callValidateCode)(cxt, v, passCxt)));\n      addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n\n      if (!allErrors) gen.assign(valid, true);\n    }, function (e) {\n      gen.if((0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"!(\", \" instanceof \", \")\"])), e, it.ValidationError), function () {\n        return gen.throw(e);\n      });\n      addErrorsFrom(e);\n      if (!allErrors) gen.assign(valid, false);\n    });\n    cxt.ok(valid);\n  }\n\n  function callSyncRef() {\n    cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), function () {\n      return addEvaluatedFrom(v);\n    }, function () {\n      return addErrorsFrom(v);\n    });\n  }\n\n  function addErrorsFrom(source) {\n    var errs = (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \".errors\"])), source);\n    gen.assign(names_1.default.vErrors, (0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\", \" === null ? \", \" : \", \".concat(\", \")\"])), names_1.default.vErrors, errs, names_1.default.vErrors, errs)); // TODO tagged\n\n    gen.assign(names_1.default.errors, (0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \".length\"])), names_1.default.vErrors));\n  }\n\n  function addEvaluatedFrom(source) {\n    var _a;\n\n    if (!it.opts.unevaluated) return;\n    var schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated; // TODO refactor\n\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n        }\n      } else {\n        var props = gen.var(\"props\", (0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \".evaluated.props\"])), source));\n        it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n      }\n    }\n\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n        }\n      } else {\n        var items = gen.var(\"items\", (0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\", \".evaluated.items\"])), source));\n        it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n      }\n    }\n  }\n}\n\nexports.callRef = callRef;\nexports.default = def;","map":{"version":3,"mappings":"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","names":["def","keyword","schemaType","code","cxt","gen","$ref","schema","it","baseId","env","schemaEnv","validateName","opts","self","root","callRootRef","schOrEnv","compile_1","call","undefined","ref_error_1","uriResolver","callValidate","inlineRefSchema","callRef","$async","rootName","scopeValue","ref","sch","v","getValidate","schName","source","valid","name","schCxt","subschema","dataTypes","schemaPath","codegen_1","topSchemaRef","errSchemaPath","mergeEvaluated","ok","validate","exports","allErrors","passCxt","passContext","names_1","this","callAsyncRef","callSyncRef","Error","let","try","addEvaluatedFrom","assign","e","if","ValidationError","throw","addErrorsFrom","result","errs","vErrors","errors","unevaluated","schEvaluated","_a","evaluated","props","dynamicProps","util_1","var","items","dynamicItems"],"sourceRoot":"","sources":["../../../lib/vocabularies/core/ref.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}