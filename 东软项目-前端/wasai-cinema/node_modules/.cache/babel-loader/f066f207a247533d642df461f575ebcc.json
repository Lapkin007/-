{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _typeof = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nvar _classCallCheck = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.sticky.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.map.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.find-index.js\");\n\nrequire(\"core-js/modules/es.array.splice.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.json.stringify.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\n\nvar validate_1 = require(\"./compile/validate\");\n\nObject.defineProperty(exports, \"KeywordCxt\", {\n  enumerable: true,\n  get: function get() {\n    return validate_1.KeywordCxt;\n  }\n});\n\nvar codegen_1 = require(\"./compile/codegen\");\n\nObject.defineProperty(exports, \"_\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1._;\n  }\n});\nObject.defineProperty(exports, \"str\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.str;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.stringify;\n  }\n});\nObject.defineProperty(exports, \"nil\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.nil;\n  }\n});\nObject.defineProperty(exports, \"Name\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.Name;\n  }\n});\nObject.defineProperty(exports, \"CodeGen\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.CodeGen;\n  }\n});\n\nvar validation_error_1 = require(\"./runtime/validation_error\");\n\nvar ref_error_1 = require(\"./compile/ref_error\");\n\nvar rules_1 = require(\"./compile/rules\");\n\nvar compile_1 = require(\"./compile\");\n\nvar codegen_2 = require(\"./compile/codegen\");\n\nvar resolve_1 = require(\"./compile/resolve\");\n\nvar dataType_1 = require(\"./compile/validate/dataType\");\n\nvar util_1 = require(\"./compile/util\");\n\nvar $dataRefSchema = require(\"./refs/data.json\");\n\nvar uri_1 = require(\"./runtime/uri\");\n\nvar defaultRegExp = function defaultRegExp(str, flags) {\n  return new RegExp(str, flags);\n};\n\ndefaultRegExp.code = \"new RegExp\";\nvar META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nvar EXT_SCOPE_NAMES = new Set([\"validate\", \"serialize\", \"parse\", \"wrapper\", \"root\", \"schema\", \"keyword\", \"pattern\", \"formats\", \"validate$data\", \"func\", \"obj\", \"Error\"]);\nvar removedOptions = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\"\n};\nvar deprecatedOptions = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.'\n};\nvar MAX_EXPRESSION = 200; // eslint-disable-next-line complexity\n\nfunction requiredOptions(o) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n\n  var s = o.strict;\n\n  var _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n\n  var optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n  var regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n  var uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n  return {\n    strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n    strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n    strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n    strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n    strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n    code: o.code ? _objectSpread(_objectSpread({}, o.code), {}, {\n      optimize: optimize,\n      regExp: regExp\n    }) : {\n      optimize: optimize,\n      regExp: regExp\n    },\n    loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n    loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n    meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n    messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n    inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n    schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n    addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n    validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n    validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n    unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n    int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n    uriResolver: uriResolver\n  };\n}\n\nvar Ajv = /*#__PURE__*/function () {\n  function Ajv() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Ajv);\n\n    this.schemas = {};\n    this.refs = {};\n    this.formats = {};\n    this._compilations = new Set();\n    this._loading = {};\n    this._cache = new Map();\n    opts = this.opts = _objectSpread(_objectSpread({}, opts), requiredOptions(opts));\n    var _this$opts$code = this.opts.code,\n        es5 = _this$opts$code.es5,\n        lines = _this$opts$code.lines;\n    this.scope = new codegen_2.ValueScope({\n      scope: {},\n      prefixes: EXT_SCOPE_NAMES,\n      es5: es5,\n      lines: lines\n    });\n    this.logger = getLogger(opts.logger);\n    var formatOpt = opts.validateFormats;\n    opts.validateFormats = false;\n    this.RULES = (0, rules_1.getRules)();\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n    this._metaOpts = getMetaSchemaOptions.call(this);\n    if (opts.formats) addInitialFormats.call(this);\n\n    this._addVocabularies();\n\n    this._addDefaultMetaSchema();\n\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords);\n    if (_typeof(opts.meta) == \"object\") this.addMetaSchema(opts.meta);\n    addInitialSchemas.call(this);\n    opts.validateFormats = formatOpt;\n  }\n\n  _createClass(Ajv, [{\n    key: \"_addVocabularies\",\n    value: function _addVocabularies() {\n      this.addKeyword(\"$async\");\n    }\n  }, {\n    key: \"_addDefaultMetaSchema\",\n    value: function _addDefaultMetaSchema() {\n      var _this$opts = this.opts,\n          $data = _this$opts.$data,\n          meta = _this$opts.meta,\n          schemaId = _this$opts.schemaId;\n      var _dataRefSchema = $dataRefSchema;\n\n      if (schemaId === \"id\") {\n        _dataRefSchema = _objectSpread({}, $dataRefSchema);\n        _dataRefSchema.id = _dataRefSchema.$id;\n        delete _dataRefSchema.$id;\n      }\n\n      if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n  }, {\n    key: \"defaultMeta\",\n    value: function defaultMeta() {\n      var _this$opts2 = this.opts,\n          meta = _this$opts2.meta,\n          schemaId = _this$opts2.schemaId;\n      return this.opts.defaultMeta = _typeof(meta) == \"object\" ? meta[schemaId] || meta : undefined;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n      var v;\n\n      if (typeof schemaKeyRef == \"string\") {\n        v = this.getSchema(schemaKeyRef);\n        if (!v) throw new Error(\"no schema with key or ref \\\"\".concat(schemaKeyRef, \"\\\"\"));\n      } else {\n        v = this.compile(schemaKeyRef);\n      }\n\n      var valid = v(data);\n      if (!(\"$async\" in v)) this.errors = v.errors;\n      return valid;\n    }\n  }, {\n    key: \"compile\",\n    value: function compile(schema, _meta) {\n      var sch = this._addSchema(schema, _meta);\n\n      return sch.validate || this._compileSchemaEnv(sch);\n    }\n  }, {\n    key: \"compileAsync\",\n    value: function compileAsync(schema, meta) {\n      if (typeof this.opts.loadSchema != \"function\") {\n        throw new Error(\"options.loadSchema should be a function\");\n      }\n\n      var loadSchema = this.opts.loadSchema;\n      return runCompileAsync.call(this, schema, meta);\n\n      function runCompileAsync(_x2, _x3) {\n        return _runCompileAsync.apply(this, arguments);\n      }\n\n      function _runCompileAsync() {\n        _runCompileAsync = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_schema, _meta) {\n          var sch;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return loadMetaSchema.call(this, _schema.$schema);\n\n                case 2:\n                  sch = this._addSchema(_schema, _meta);\n                  return _context.abrupt(\"return\", sch.validate || _compileAsync.call(this, sch));\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n        return _runCompileAsync.apply(this, arguments);\n      }\n\n      function loadMetaSchema(_x4) {\n        return _loadMetaSchema.apply(this, arguments);\n      }\n\n      function _loadMetaSchema() {\n        _loadMetaSchema = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2($ref) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!($ref && !this.getSchema($ref))) {\n                    _context2.next = 3;\n                    break;\n                  }\n\n                  _context2.next = 3;\n                  return runCompileAsync.call(this, {\n                    $ref: $ref\n                  }, true);\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n        return _loadMetaSchema.apply(this, arguments);\n      }\n\n      function _compileAsync(_x5) {\n        return _compileAsync2.apply(this, arguments);\n      }\n\n      function _compileAsync2() {\n        _compileAsync2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(sch) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  return _context3.abrupt(\"return\", this._compileSchemaEnv(sch));\n\n                case 4:\n                  _context3.prev = 4;\n                  _context3.t0 = _context3[\"catch\"](0);\n\n                  if (_context3.t0 instanceof ref_error_1.default) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  throw _context3.t0;\n\n                case 8:\n                  checkLoaded.call(this, _context3.t0);\n                  _context3.next = 11;\n                  return loadMissingSchema.call(this, _context3.t0.missingSchema);\n\n                case 11:\n                  return _context3.abrupt(\"return\", _compileAsync.call(this, sch));\n\n                case 12:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this, [[0, 4]]);\n        }));\n        return _compileAsync2.apply(this, arguments);\n      }\n\n      function checkLoaded(_ref) {\n        var ref = _ref.missingSchema,\n            missingRef = _ref.missingRef;\n\n        if (this.refs[ref]) {\n          throw new Error(\"AnySchema \".concat(ref, \" is loaded but \").concat(missingRef, \" cannot be resolved\"));\n        }\n      }\n\n      function loadMissingSchema(_x6) {\n        return _loadMissingSchema.apply(this, arguments);\n      }\n\n      function _loadMissingSchema() {\n        _loadMissingSchema = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(ref) {\n          var _schema;\n\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _loadSchema.call(this, ref);\n\n                case 2:\n                  _schema = _context4.sent;\n\n                  if (this.refs[ref]) {\n                    _context4.next = 6;\n                    break;\n                  }\n\n                  _context4.next = 6;\n                  return loadMetaSchema.call(this, _schema.$schema);\n\n                case 6:\n                  if (!this.refs[ref]) this.addSchema(_schema, ref, meta);\n\n                case 7:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n        return _loadMissingSchema.apply(this, arguments);\n      }\n\n      function _loadSchema(_x7) {\n        return _loadSchema2.apply(this, arguments);\n      }\n\n      function _loadSchema2() {\n        _loadSchema2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(ref) {\n          var p;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  p = this._loading[ref];\n\n                  if (!p) {\n                    _context5.next = 3;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", p);\n\n                case 3:\n                  _context5.prev = 3;\n                  _context5.next = 6;\n                  return this._loading[ref] = loadSchema(ref);\n\n                case 6:\n                  return _context5.abrupt(\"return\", _context5.sent);\n\n                case 7:\n                  _context5.prev = 7;\n                  delete this._loading[ref];\n                  return _context5.finish(7);\n\n                case 10:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this, [[3,, 7, 10]]);\n        }));\n        return _loadSchema2.apply(this, arguments);\n      }\n    } // Adds schema to the instance\n\n  }, {\n    key: \"addSchema\",\n    value: function addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta) {\n      var _validateSchema = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.opts.validateSchema;\n\n      if (Array.isArray(schema)) {\n        var _iterator = _createForOfIteratorHelper(schema),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var sch = _step.value;\n            this.addSchema(sch, undefined, _meta, _validateSchema);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return this;\n      }\n\n      var id;\n\n      if (_typeof(schema) === \"object\") {\n        var schemaId = this.opts.schemaId;\n        id = schema[schemaId];\n\n        if (id !== undefined && typeof id != \"string\") {\n          throw new Error(\"schema \".concat(schemaId, \" must be string\"));\n        }\n      }\n\n      key = (0, resolve_1.normalizeId)(key || id);\n\n      this._checkUnique(key);\n\n      this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n      return this;\n    } // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n\n  }, {\n    key: \"addMetaSchema\",\n    value: function addMetaSchema(schema, key) {\n      var _validateSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.opts.validateSchema;\n\n      this.addSchema(schema, key, true, _validateSchema);\n      return this;\n    } //  Validate schema against its meta-schema\n\n  }, {\n    key: \"validateSchema\",\n    value: function validateSchema(schema, throwOrLogError) {\n      if (typeof schema == \"boolean\") return true;\n      var $schema;\n      $schema = schema.$schema;\n\n      if ($schema !== undefined && typeof $schema != \"string\") {\n        throw new Error(\"$schema must be a string\");\n      }\n\n      $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n\n      if (!$schema) {\n        this.logger.warn(\"meta-schema not available\");\n        this.errors = null;\n        return true;\n      }\n\n      var valid = this.validate($schema, schema);\n\n      if (!valid && throwOrLogError) {\n        var message = \"schema is invalid: \" + this.errorsText();\n        if (this.opts.validateSchema === \"log\") this.logger.error(message);else throw new Error(message);\n      }\n\n      return valid;\n    } // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n\n  }, {\n    key: \"getSchema\",\n    value: function getSchema(keyRef) {\n      var sch;\n\n      while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") {\n        keyRef = sch;\n      }\n\n      if (sch === undefined) {\n        var schemaId = this.opts.schemaId;\n        var root = new compile_1.SchemaEnv({\n          schema: {},\n          schemaId: schemaId\n        });\n        sch = compile_1.resolveSchema.call(this, root, keyRef);\n        if (!sch) return;\n        this.refs[keyRef] = sch;\n      }\n\n      return sch.validate || this._compileSchemaEnv(sch);\n    } // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n\n  }, {\n    key: \"removeSchema\",\n    value: function removeSchema(schemaKeyRef) {\n      if (schemaKeyRef instanceof RegExp) {\n        this._removeAllSchemas(this.schemas, schemaKeyRef);\n\n        this._removeAllSchemas(this.refs, schemaKeyRef);\n\n        return this;\n      }\n\n      switch (_typeof(schemaKeyRef)) {\n        case \"undefined\":\n          this._removeAllSchemas(this.schemas);\n\n          this._removeAllSchemas(this.refs);\n\n          this._cache.clear();\n\n          return this;\n\n        case \"string\":\n          {\n            var sch = getSchEnv.call(this, schemaKeyRef);\n            if (_typeof(sch) == \"object\") this._cache.delete(sch.schema);\n            delete this.schemas[schemaKeyRef];\n            delete this.refs[schemaKeyRef];\n            return this;\n          }\n\n        case \"object\":\n          {\n            var cacheKey = schemaKeyRef;\n\n            this._cache.delete(cacheKey);\n\n            var id = schemaKeyRef[this.opts.schemaId];\n\n            if (id) {\n              id = (0, resolve_1.normalizeId)(id);\n              delete this.schemas[id];\n              delete this.refs[id];\n            }\n\n            return this;\n          }\n\n        default:\n          throw new Error(\"ajv.removeSchema: invalid parameter\");\n      }\n    } // add \"vocabulary\" - a collection of keywords\n\n  }, {\n    key: \"addVocabulary\",\n    value: function addVocabulary(definitions) {\n      var _iterator2 = _createForOfIteratorHelper(definitions),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var def = _step2.value;\n          this.addKeyword(def);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"addKeyword\",\n    value: function addKeyword(kwdOrDef, def // deprecated\n    ) {\n      var _this = this;\n\n      var keyword;\n\n      if (typeof kwdOrDef == \"string\") {\n        keyword = kwdOrDef;\n\n        if (_typeof(def) == \"object\") {\n          this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n          def.keyword = keyword;\n        }\n      } else if (_typeof(kwdOrDef) == \"object\" && def === undefined) {\n        def = kwdOrDef;\n        keyword = def.keyword;\n\n        if (Array.isArray(keyword) && !keyword.length) {\n          throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n        }\n      } else {\n        throw new Error(\"invalid addKeywords parameters\");\n      }\n\n      checkKeyword.call(this, keyword, def);\n\n      if (!def) {\n        (0, util_1.eachItem)(keyword, function (kwd) {\n          return addRule.call(_this, kwd);\n        });\n        return this;\n      }\n\n      keywordMetaschema.call(this, def);\n\n      var definition = _objectSpread(_objectSpread({}, def), {}, {\n        type: (0, dataType_1.getJSONTypes)(def.type),\n        schemaType: (0, dataType_1.getJSONTypes)(def.schemaType)\n      });\n\n      (0, util_1.eachItem)(keyword, definition.type.length === 0 ? function (k) {\n        return addRule.call(_this, k, definition);\n      } : function (k) {\n        return definition.type.forEach(function (t) {\n          return addRule.call(_this, k, definition, t);\n        });\n      });\n      return this;\n    }\n  }, {\n    key: \"getKeyword\",\n    value: function getKeyword(keyword) {\n      var rule = this.RULES.all[keyword];\n      return _typeof(rule) == \"object\" ? rule.definition : !!rule;\n    } // Remove keyword\n\n  }, {\n    key: \"removeKeyword\",\n    value: function removeKeyword(keyword) {\n      // TODO return type should be Ajv\n      var RULES = this.RULES;\n      delete RULES.keywords[keyword];\n      delete RULES.all[keyword];\n\n      var _iterator3 = _createForOfIteratorHelper(RULES.rules),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var group = _step3.value;\n          var i = group.rules.findIndex(function (rule) {\n            return rule.keyword === keyword;\n          });\n          if (i >= 0) group.rules.splice(i, 1);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return this;\n    } // Add format\n\n  }, {\n    key: \"addFormat\",\n    value: function addFormat(name, format) {\n      if (typeof format == \"string\") format = new RegExp(format);\n      this.formats[name] = format;\n      return this;\n    }\n  }, {\n    key: \"errorsText\",\n    value: function errorsText() {\n      var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.errors;\n\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$separator = _ref2.separator,\n          separator = _ref2$separator === void 0 ? \", \" : _ref2$separator,\n          _ref2$dataVar = _ref2.dataVar,\n          dataVar = _ref2$dataVar === void 0 ? \"data\" : _ref2$dataVar;\n\n      if (!errors || errors.length === 0) return \"No errors\";\n      return errors.map(function (e) {\n        return \"\".concat(dataVar).concat(e.instancePath, \" \").concat(e.message);\n      }).reduce(function (text, msg) {\n        return text + separator + msg;\n      });\n    }\n  }, {\n    key: \"$dataMetaSchema\",\n    value: function $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n      var rules = this.RULES.all;\n      metaSchema = JSON.parse(JSON.stringify(metaSchema));\n\n      var _iterator4 = _createForOfIteratorHelper(keywordsJsonPointers),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var jsonPointer = _step4.value;\n          var segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n\n          var keywords = metaSchema;\n\n          var _iterator5 = _createForOfIteratorHelper(segments),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var seg = _step5.value;\n              keywords = keywords[seg];\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          for (var key in rules) {\n            var rule = rules[key];\n            if (_typeof(rule) != \"object\") continue;\n            var $data = rule.definition.$data;\n            var schema = keywords[key];\n            if ($data && schema) keywords[key] = schemaOrData(schema);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return metaSchema;\n    }\n  }, {\n    key: \"_removeAllSchemas\",\n    value: function _removeAllSchemas(schemas, regex) {\n      for (var keyRef in schemas) {\n        var sch = schemas[keyRef];\n\n        if (!regex || regex.test(keyRef)) {\n          if (typeof sch == \"string\") {\n            delete schemas[keyRef];\n          } else if (sch && !sch.meta) {\n            this._cache.delete(sch.schema);\n\n            delete schemas[keyRef];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_addSchema\",\n    value: function _addSchema(schema, meta, baseId) {\n      var validateSchema = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.opts.validateSchema;\n      var addSchema = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.opts.addUsedSchema;\n      var id;\n      var schemaId = this.opts.schemaId;\n\n      if (_typeof(schema) == \"object\") {\n        id = schema[schemaId];\n      } else {\n        if (this.opts.jtd) throw new Error(\"schema must be object\");else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\");\n      }\n\n      var sch = this._cache.get(schema);\n\n      if (sch !== undefined) return sch;\n      baseId = (0, resolve_1.normalizeId)(id || baseId);\n      var localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n      sch = new compile_1.SchemaEnv({\n        schema: schema,\n        schemaId: schemaId,\n        meta: meta,\n        baseId: baseId,\n        localRefs: localRefs\n      });\n\n      this._cache.set(sch.schema, sch);\n\n      if (addSchema && !baseId.startsWith(\"#\")) {\n        // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n        if (baseId) this._checkUnique(baseId);\n        this.refs[baseId] = sch;\n      }\n\n      if (validateSchema) this.validateSchema(schema, true);\n      return sch;\n    }\n  }, {\n    key: \"_checkUnique\",\n    value: function _checkUnique(id) {\n      if (this.schemas[id] || this.refs[id]) {\n        throw new Error(\"schema with key or id \\\"\".concat(id, \"\\\" already exists\"));\n      }\n    }\n  }, {\n    key: \"_compileSchemaEnv\",\n    value: function _compileSchemaEnv(sch) {\n      if (sch.meta) this._compileMetaSchema(sch);else compile_1.compileSchema.call(this, sch);\n      /* istanbul ignore if */\n\n      if (!sch.validate) throw new Error(\"ajv implementation error\");\n      return sch.validate;\n    }\n  }, {\n    key: \"_compileMetaSchema\",\n    value: function _compileMetaSchema(sch) {\n      var currentOpts = this.opts;\n      this.opts = this._metaOpts;\n\n      try {\n        compile_1.compileSchema.call(this, sch);\n      } finally {\n        this.opts = currentOpts;\n      }\n    }\n  }]);\n\n  return Ajv;\n}();\n\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\n\nfunction checkOptions(checkOpts, options, msg) {\n  var log = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"error\";\n\n  for (var key in checkOpts) {\n    var opt = key;\n    if (opt in options) this.logger[log](\"\".concat(msg, \": option \").concat(key, \". \").concat(checkOpts[opt]));\n  }\n}\n\nfunction getSchEnv(keyRef) {\n  keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n\n  return this.schemas[keyRef] || this.refs[keyRef];\n}\n\nfunction addInitialSchemas() {\n  var optsSchemas = this.opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas);else for (var key in optsSchemas) {\n    this.addSchema(optsSchemas[key], key);\n  }\n}\n\nfunction addInitialFormats() {\n  for (var name in this.opts.formats) {\n    var format = this.opts.formats[name];\n    if (format) this.addFormat(name, format);\n  }\n}\n\nfunction addInitialKeywords(defs) {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs);\n    return;\n  }\n\n  this.logger.warn(\"keywords option as map is deprecated, pass array\");\n\n  for (var keyword in defs) {\n    var def = defs[keyword];\n    if (!def.keyword) def.keyword = keyword;\n    this.addKeyword(def);\n  }\n}\n\nfunction getMetaSchemaOptions() {\n  var metaOpts = _objectSpread({}, this.opts);\n\n  var _iterator6 = _createForOfIteratorHelper(META_IGNORE_OPTIONS),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var opt = _step6.value;\n      delete metaOpts[opt];\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return metaOpts;\n}\n\nvar noLogs = {\n  log: function log() {},\n  warn: function warn() {},\n  error: function error() {}\n};\n\nfunction getLogger(logger) {\n  if (logger === false) return noLogs;\n  if (logger === undefined) return console;\n  if (logger.log && logger.warn && logger.error) return logger;\n  throw new Error(\"logger must implement log, warn and error methods\");\n}\n\nvar KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\n\nfunction checkKeyword(keyword, def) {\n  var RULES = this.RULES;\n  (0, util_1.eachItem)(keyword, function (kwd) {\n    if (RULES.keywords[kwd]) throw new Error(\"Keyword \".concat(kwd, \" is already defined\"));\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(\"Keyword \".concat(kwd, \" has invalid name\"));\n  });\n  if (!def) return;\n\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function');\n  }\n}\n\nfunction addRule(keyword, definition, dataType) {\n  var _this2 = this;\n\n  var _a;\n\n  var post = definition === null || definition === void 0 ? void 0 : definition.post;\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"');\n  var RULES = this.RULES;\n  var ruleGroup = post ? RULES.post : RULES.rules.find(function (_ref3) {\n    var t = _ref3.type;\n    return t === dataType;\n  });\n\n  if (!ruleGroup) {\n    ruleGroup = {\n      type: dataType,\n      rules: []\n    };\n    RULES.rules.push(ruleGroup);\n  }\n\n  RULES.keywords[keyword] = true;\n  if (!definition) return;\n  var rule = {\n    keyword: keyword,\n    definition: _objectSpread(_objectSpread({}, definition), {}, {\n      type: (0, dataType_1.getJSONTypes)(definition.type),\n      schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType)\n    })\n  };\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before);else ruleGroup.rules.push(rule);\n  RULES.all[keyword] = rule;\n  (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach(function (kwd) {\n    return _this2.addKeyword(kwd);\n  });\n}\n\nfunction addBeforeRule(ruleGroup, rule, before) {\n  var i = ruleGroup.rules.findIndex(function (_rule) {\n    return _rule.keyword === before;\n  });\n\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule);\n  } else {\n    ruleGroup.rules.push(rule);\n    this.logger.warn(\"rule \".concat(before, \" is not defined\"));\n  }\n}\n\nfunction keywordMetaschema(def) {\n  var metaSchema = def.metaSchema;\n  if (metaSchema === undefined) return;\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema);\n  def.validateSchema = this.compile(metaSchema, true);\n}\n\nvar $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\"\n};\n\nfunction schemaOrData(schema) {\n  return {\n    anyOf: [schema, $dataRef]\n  };\n}","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","defaultRegExp","str","flags","RegExp","code","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","Set","removedOptions","errorDataPath","format","nullable","jsonPointers","extendRefs","missingRefs","processCode","sourceCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","serialize","ajvErrors","deprecatedOptions","ignoreKeywordsWithRef","jsPropertySyntax","unicode","MAX_EXPRESSION","requiredOptions","o","s","strict","_optz","_a","optimize","undefined","regExp","_b","_c","uriResolver","_d","uri_1","strictSchema","_e","_f","strictNumbers","_g","_h","strictTypes","_j","_k","strictTuples","_l","_m","strictRequired","_o","_p","loopRequired","_q","loopEnum","_r","meta","_s","messages","_t","inlineRefs","_u","schemaId","_v","addUsedSchema","_w","validateSchema","_x","validateFormats","_y","unicodeRegExp","_z","int32range","_0","Ajv","opts","Map","es5","lines","scope","codegen_2","prefixes","logger","getLogger","formatOpt","RULES","checkOptions","call","_metaOpts","getMetaSchemaOptions","formats","addInitialFormats","_addVocabularies","_addDefaultMetaSchema","keywords","addInitialKeywords","addMetaSchema","addInitialSchemas","addKeyword","$data","_dataRefSchema","$dataRefSchema","id","$id","defaultMeta","schemaKeyRef","data","v","getSchema","Error","compile","valid","errors","schema","_meta","sch","_addSchema","validate","_compileSchemaEnv","loadSchema","runCompileAsync","_schema","loadMetaSchema","$schema","_compileAsync","$ref","ref_error_1","checkLoaded","loadMissingSchema","missingSchema","ref","missingRef","refs","_loadSchema","addSchema","p","_loading","key","_validateSchema","Array","isArray","_checkUnique","schemas","throwOrLogError","warn","message","errorsText","error","keyRef","getSchEnv","root","compile_1","_removeAllSchemas","_cache","clear","delete","cacheKey","definitions","def","kwdOrDef","keyword","length","checkKeyword","kwd","addRule","keywordMetaschema","definition","type","schemaType","k","forEach","t","rule","all","rules","group","i","findIndex","splice","name","separator","dataVar","map","e","instancePath","reduce","text","msg","metaSchema","keywordsJsonPointers","JSON","parse","stringify","jsonPointer","segments","split","slice","seg","schemaOrData","regex","test","baseId","jtd","localRefs","resolve_1","set","startsWith","_compileMetaSchema","currentOpts","exports","validation_error_1","checkOpts","options","log","opt","optsSchemas","addFormat","defs","addVocabulary","metaOpts","noLogs","console","KEYWORD_NAME","dataType","post","ruleGroup","find","push","before","addBeforeRule","implements","_rule","$dataRef","anyOf"],"sourceRoot":"","sources":["../lib/core.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}