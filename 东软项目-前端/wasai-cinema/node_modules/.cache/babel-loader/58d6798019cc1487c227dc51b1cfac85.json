{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _objectWithoutProperties = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _excluded = [\"force\", \"dryRun\", \"cwd\"],\n    _excluded2 = [\"force\", \"dryRun\", \"cwd\"];\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.sort.js\");\n\nvar _require = require('util'),\n    promisify = _require.promisify;\n\nvar path = require('path');\n\nvar globby = require('globby');\n\nvar isGlob = require('is-glob');\n\nvar slash = require('slash');\n\nvar gracefulFs = require('graceful-fs');\n\nvar isPathCwd = require('is-path-cwd');\n\nvar isPathInside = require('is-path-inside');\n\nvar rimraf = require('rimraf');\n\nvar pMap = require('p-map');\n\nvar rimrafP = promisify(rimraf);\nvar rimrafOptions = {\n  glob: false,\n  unlink: gracefulFs.unlink,\n  unlinkSync: gracefulFs.unlinkSync,\n  chmod: gracefulFs.chmod,\n  chmodSync: gracefulFs.chmodSync,\n  stat: gracefulFs.stat,\n  statSync: gracefulFs.statSync,\n  lstat: gracefulFs.lstat,\n  lstatSync: gracefulFs.lstatSync,\n  rmdir: gracefulFs.rmdir,\n  rmdirSync: gracefulFs.rmdirSync,\n  readdir: gracefulFs.readdir,\n  readdirSync: gracefulFs.readdirSync\n};\n\nfunction safeCheck(file, cwd) {\n  if (isPathCwd(file)) {\n    throw new Error('Cannot delete the current working directory. Can be overridden with the `force` option.');\n  }\n\n  if (!isPathInside(file, cwd)) {\n    throw new Error('Cannot delete files/directories outside the current working directory. Can be overridden with the `force` option.');\n  }\n}\n\nfunction normalizePatterns(patterns) {\n  patterns = Array.isArray(patterns) ? patterns : [patterns];\n  patterns = patterns.map(function (pattern) {\n    if (process.platform === 'win32' && isGlob(pattern) === false) {\n      return slash(pattern);\n    }\n\n    return pattern;\n  });\n  return patterns;\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(patterns) {\n    var _ref2,\n        force,\n        dryRun,\n        _ref2$cwd,\n        cwd,\n        options,\n        files,\n        mapper,\n        removedFiles,\n        _args2 = arguments;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref2 = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, force = _ref2.force, dryRun = _ref2.dryRun, _ref2$cwd = _ref2.cwd, cwd = _ref2$cwd === void 0 ? process.cwd() : _ref2$cwd, options = _objectWithoutProperties(_ref2, _excluded);\n            options = _objectSpread({\n              expandDirectories: false,\n              onlyFiles: false,\n              followSymbolicLinks: false,\n              cwd: cwd\n            }, options);\n            patterns = normalizePatterns(patterns);\n            _context2.next = 5;\n            return globby(patterns, options);\n\n          case 5:\n            files = _context2.sent.sort(function (a, b) {\n              return b.localeCompare(a);\n            });\n\n            mapper = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file) {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        file = path.resolve(cwd, file);\n\n                        if (!force) {\n                          safeCheck(file, cwd);\n                        }\n\n                        if (dryRun) {\n                          _context.next = 5;\n                          break;\n                        }\n\n                        _context.next = 5;\n                        return rimrafP(file, rimrafOptions);\n\n                      case 5:\n                        return _context.abrupt(\"return\", file);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function mapper(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            _context2.next = 9;\n            return pMap(files, mapper, options);\n\n          case 9:\n            removedFiles = _context2.sent;\n            removedFiles.sort(function (a, b) {\n              return a.localeCompare(b);\n            });\n            return _context2.abrupt(\"return\", removedFiles);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.sync = function (patterns) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      force = _ref4.force,\n      dryRun = _ref4.dryRun,\n      _ref4$cwd = _ref4.cwd,\n      cwd = _ref4$cwd === void 0 ? process.cwd() : _ref4$cwd,\n      options = _objectWithoutProperties(_ref4, _excluded2);\n\n  options = _objectSpread({\n    expandDirectories: false,\n    onlyFiles: false,\n    followSymbolicLinks: false,\n    cwd: cwd\n  }, options);\n  patterns = normalizePatterns(patterns);\n  var files = globby.sync(patterns, options).sort(function (a, b) {\n    return b.localeCompare(a);\n  });\n  var removedFiles = files.map(function (file) {\n    file = path.resolve(cwd, file);\n\n    if (!force) {\n      safeCheck(file, cwd);\n    }\n\n    if (!dryRun) {\n      rimraf.sync(file, rimrafOptions);\n    }\n\n    return file;\n  });\n  removedFiles.sort(function (a, b) {\n    return a.localeCompare(b);\n  });\n  return removedFiles;\n};","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/del/index.js"],"names":["require","promisify","path","globby","isGlob","slash","gracefulFs","isPathCwd","isPathInside","rimraf","pMap","rimrafP","rimrafOptions","glob","unlink","unlinkSync","chmod","chmodSync","stat","statSync","lstat","lstatSync","rmdir","rmdirSync","readdir","readdirSync","safeCheck","file","cwd","Error","normalizePatterns","patterns","Array","isArray","map","pattern","process","platform","module","exports","force","dryRun","options","expandDirectories","onlyFiles","followSymbolicLinks","files","sort","a","b","localeCompare","mapper","resolve","removedFiles","sync"],"mappings":"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","sourcesContent":["'use strict';\nconst {promisify} = require('util');\nconst path = require('path');\nconst globby = require('globby');\nconst isGlob = require('is-glob');\nconst slash = require('slash');\nconst gracefulFs = require('graceful-fs');\nconst isPathCwd = require('is-path-cwd');\nconst isPathInside = require('is-path-inside');\nconst rimraf = require('rimraf');\nconst pMap = require('p-map');\n\nconst rimrafP = promisify(rimraf);\n\nconst rimrafOptions = {\n\tglob: false,\n\tunlink: gracefulFs.unlink,\n\tunlinkSync: gracefulFs.unlinkSync,\n\tchmod: gracefulFs.chmod,\n\tchmodSync: gracefulFs.chmodSync,\n\tstat: gracefulFs.stat,\n\tstatSync: gracefulFs.statSync,\n\tlstat: gracefulFs.lstat,\n\tlstatSync: gracefulFs.lstatSync,\n\trmdir: gracefulFs.rmdir,\n\trmdirSync: gracefulFs.rmdirSync,\n\treaddir: gracefulFs.readdir,\n\treaddirSync: gracefulFs.readdirSync\n};\n\nfunction safeCheck(file, cwd) {\n\tif (isPathCwd(file)) {\n\t\tthrow new Error('Cannot delete the current working directory. Can be overridden with the `force` option.');\n\t}\n\n\tif (!isPathInside(file, cwd)) {\n\t\tthrow new Error('Cannot delete files/directories outside the current working directory. Can be overridden with the `force` option.');\n\t}\n}\n\nfunction normalizePatterns(patterns) {\n\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\tpatterns = patterns.map(pattern => {\n\t\tif (process.platform === 'win32' && isGlob(pattern) === false) {\n\t\t\treturn slash(pattern);\n\t\t}\n\n\t\treturn pattern;\n\t});\n\n\treturn patterns;\n}\n\nmodule.exports = async (patterns, {force, dryRun, cwd = process.cwd(), ...options} = {}) => {\n\toptions = {\n\t\texpandDirectories: false,\n\t\tonlyFiles: false,\n\t\tfollowSymbolicLinks: false,\n\t\tcwd,\n\t\t...options\n\t};\n\n\tpatterns = normalizePatterns(patterns);\n\n\tconst files = (await globby(patterns, options))\n\t\t.sort((a, b) => b.localeCompare(a));\n\n\tconst mapper = async file => {\n\t\tfile = path.resolve(cwd, file);\n\n\t\tif (!force) {\n\t\t\tsafeCheck(file, cwd);\n\t\t}\n\n\t\tif (!dryRun) {\n\t\t\tawait rimrafP(file, rimrafOptions);\n\t\t}\n\n\t\treturn file;\n\t};\n\n\tconst removedFiles = await pMap(files, mapper, options);\n\n\tremovedFiles.sort((a, b) => a.localeCompare(b));\n\n\treturn removedFiles;\n};\n\nmodule.exports.sync = (patterns, {force, dryRun, cwd = process.cwd(), ...options} = {}) => {\n\toptions = {\n\t\texpandDirectories: false,\n\t\tonlyFiles: false,\n\t\tfollowSymbolicLinks: false,\n\t\tcwd,\n\t\t...options\n\t};\n\n\tpatterns = normalizePatterns(patterns);\n\n\tconst files = globby.sync(patterns, options)\n\t\t.sort((a, b) => b.localeCompare(a));\n\n\tconst removedFiles = files.map(file => {\n\t\tfile = path.resolve(cwd, file);\n\n\t\tif (!force) {\n\t\t\tsafeCheck(file, cwd);\n\t\t}\n\n\t\tif (!dryRun) {\n\t\t\trimraf.sync(file, rimrafOptions);\n\t\t}\n\n\t\treturn file;\n\t});\n\n\tremovedFiles.sort((a, b) => a.localeCompare(b));\n\n\treturn removedFiles;\n};\n"]},"metadata":{},"sourceType":"script"}