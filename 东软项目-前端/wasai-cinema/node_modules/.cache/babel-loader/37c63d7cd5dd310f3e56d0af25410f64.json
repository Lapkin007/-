{"ast":null,"code":"var _toConsumableArray = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _objectSpread = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _createForOfIteratorHelper = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _wrapRegExp = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/wrapRegExp.js\").default;\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.string.ends-with.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar path = require('path');\n\nvar childProcess = require('child_process');\n\nvar _require = require('fs'),\n    fs = _require.promises,\n    fsConstants = _require.constants;\n\nvar isWsl = require('is-wsl');\n\nvar isDocker = require('is-docker');\n\nvar defineLazyProperty = require('define-lazy-prop'); // Path to included `xdg-open`.\n\n\nvar localXdgOpenPath = path.join(__dirname, 'xdg-open');\nvar _process = process,\n    platform = _process.platform,\n    arch = _process.arch;\n/**\nGet the mount point for fixed drives in WSL.\n\n@inner\n@returns {string} The mount point.\n*/\n\nvar getWslDrivesMountPoint = function () {\n  // Default value for \"root\" param\n  // according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config\n  var defaultMountPoint = '/mnt/';\n  var mountPoint;\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var configFilePath, isConfigFileExists, configContent, configMountPoint;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!mountPoint) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", mountPoint);\n\n          case 2:\n            configFilePath = '/etc/wsl.conf';\n            isConfigFileExists = false;\n            _context.prev = 4;\n            _context.next = 7;\n            return fs.access(configFilePath, fsConstants.F_OK);\n\n          case 7:\n            isConfigFileExists = true;\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](4);\n\n          case 12:\n            if (isConfigFileExists) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", defaultMountPoint);\n\n          case 14:\n            _context.next = 16;\n            return fs.readFile(configFilePath, {\n              encoding: 'utf8'\n            });\n\n          case 16:\n            configContent = _context.sent;\n            configMountPoint = /*#__PURE__*/_wrapRegExp(/(?<!#.*)root\\s*=\\s*(.*)/g, {\n              mountPoint: 1\n            }).exec(configContent);\n\n            if (configMountPoint) {\n              _context.next = 20;\n              break;\n            }\n\n            return _context.abrupt(\"return\", defaultMountPoint);\n\n          case 20:\n            mountPoint = configMountPoint.groups.mountPoint.trim();\n            mountPoint = mountPoint.endsWith('/') ? mountPoint : \"\".concat(mountPoint, \"/\");\n            return _context.abrupt(\"return\", mountPoint);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 10]]);\n  }));\n}();\n\nvar pTryEach = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(array, mapper) {\n    var latestError, _iterator, _step, item;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper(array);\n            _context2.prev = 1;\n\n            _iterator.s();\n\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 16;\n              break;\n            }\n\n            item = _step.value;\n            _context2.prev = 5;\n            _context2.next = 8;\n            return mapper(item);\n\n          case 8:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](5);\n            latestError = _context2.t0;\n\n          case 14:\n            _context2.next = 3;\n            break;\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t1 = _context2[\"catch\"](1);\n\n            _iterator.e(_context2.t1);\n\n          case 21:\n            _context2.prev = 21;\n\n            _iterator.f();\n\n            return _context2.finish(21);\n\n          case 24:\n            throw latestError;\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 18, 21, 24], [5, 11]]);\n  }));\n\n  return function pTryEach(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar baseOpen = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(options) {\n    var _ref4, app, _ref4$arguments, appArguments, command, cliArguments, childProcessOptions, mountPoint, encodedArguments, isBundled, exeLocalXdgOpen, useSystemXdgOpen, subprocess;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = _objectSpread({\n              wait: false,\n              background: false,\n              newInstance: false,\n              allowNonzeroExitCode: false\n            }, options);\n\n            if (!Array.isArray(options.app)) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", pTryEach(options.app, function (singleApp) {\n              return baseOpen(_objectSpread(_objectSpread({}, options), {}, {\n                app: singleApp\n              }));\n            }));\n\n          case 3:\n            _ref4 = options.app || {}, app = _ref4.name, _ref4$arguments = _ref4.arguments, appArguments = _ref4$arguments === void 0 ? [] : _ref4$arguments;\n            appArguments = _toConsumableArray(appArguments);\n\n            if (!Array.isArray(app)) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", pTryEach(app, function (appName) {\n              return baseOpen(_objectSpread(_objectSpread({}, options), {}, {\n                app: {\n                  name: appName,\n                  arguments: appArguments\n                }\n              }));\n            }));\n\n          case 7:\n            cliArguments = [];\n            childProcessOptions = {};\n\n            if (!(platform === 'darwin')) {\n              _context3.next = 17;\n              break;\n            }\n\n            command = 'open';\n\n            if (options.wait) {\n              cliArguments.push('--wait-apps');\n            }\n\n            if (options.background) {\n              cliArguments.push('--background');\n            }\n\n            if (options.newInstance) {\n              cliArguments.push('--new');\n            }\n\n            if (app) {\n              cliArguments.push('-a', app);\n            }\n\n            _context3.next = 49;\n            break;\n\n          case 17:\n            if (!(platform === 'win32' || isWsl && !isDocker())) {\n              _context3.next = 31;\n              break;\n            }\n\n            _context3.next = 20;\n            return getWslDrivesMountPoint();\n\n          case 20:\n            mountPoint = _context3.sent;\n            command = isWsl ? \"\".concat(mountPoint, \"c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe\") : \"\".concat(process.env.SYSTEMROOT, \"\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell\");\n            cliArguments.push('-NoProfile', '-NonInteractive', 'â€“ExecutionPolicy', 'Bypass', '-EncodedCommand');\n\n            if (!isWsl) {\n              childProcessOptions.windowsVerbatimArguments = true;\n            }\n\n            encodedArguments = ['Start'];\n\n            if (options.wait) {\n              encodedArguments.push('-Wait');\n            }\n\n            if (app) {\n              // Double quote with double quotes to ensure the inner quotes are passed through.\n              // Inner quotes are delimited for PowerShell interpretation with backticks.\n              encodedArguments.push(\"\\\"`\\\"\".concat(app, \"`\\\"\\\"\"), '-ArgumentList');\n\n              if (options.target) {\n                appArguments.unshift(options.target);\n              }\n            } else if (options.target) {\n              encodedArguments.push(\"\\\"\".concat(options.target, \"\\\"\"));\n            }\n\n            if (appArguments.length > 0) {\n              appArguments = appArguments.map(function (arg) {\n                return \"\\\"`\\\"\".concat(arg, \"`\\\"\\\"\");\n              });\n              encodedArguments.push(appArguments.join(','));\n            } // Using Base64-encoded command, accepted by PowerShell, to allow special characters.\n\n\n            options.target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');\n            _context3.next = 49;\n            break;\n\n          case 31:\n            if (!app) {\n              _context3.next = 35;\n              break;\n            }\n\n            command = app;\n            _context3.next = 47;\n            break;\n\n          case 35:\n            // When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n            isBundled = !__dirname || __dirname === '/'; // Check if local `xdg-open` exists and is executable.\n\n            exeLocalXdgOpen = false;\n            _context3.prev = 37;\n            _context3.next = 40;\n            return fs.access(localXdgOpenPath, fsConstants.X_OK);\n\n          case 40:\n            exeLocalXdgOpen = true;\n            _context3.next = 45;\n            break;\n\n          case 43:\n            _context3.prev = 43;\n            _context3.t0 = _context3[\"catch\"](37);\n\n          case 45:\n            useSystemXdgOpen = process.versions.electron || platform === 'android' || isBundled || !exeLocalXdgOpen;\n            command = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\n          case 47:\n            if (appArguments.length > 0) {\n              cliArguments.push.apply(cliArguments, _toConsumableArray(appArguments));\n            }\n\n            if (!options.wait) {\n              // `xdg-open` will block the process unless stdio is ignored\n              // and it's detached from the parent even if it's unref'd.\n              childProcessOptions.stdio = 'ignore';\n              childProcessOptions.detached = true;\n            }\n\n          case 49:\n            if (options.target) {\n              cliArguments.push(options.target);\n            }\n\n            if (platform === 'darwin' && appArguments.length > 0) {\n              cliArguments.push.apply(cliArguments, ['--args'].concat(_toConsumableArray(appArguments)));\n            }\n\n            subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n            if (!options.wait) {\n              _context3.next = 54;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              subprocess.once('error', reject);\n              subprocess.once('close', function (exitCode) {\n                if (options.allowNonzeroExitCode && exitCode > 0) {\n                  reject(new Error(\"Exited with code \".concat(exitCode)));\n                  return;\n                }\n\n                resolve(subprocess);\n              });\n            }));\n\n          case 54:\n            subprocess.unref();\n            return _context3.abrupt(\"return\", subprocess);\n\n          case 56:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[37, 43]]);\n  }));\n\n  return function baseOpen(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar open = function open(target, options) {\n  if (typeof target !== 'string') {\n    throw new TypeError('Expected a `target`');\n  }\n\n  return baseOpen(_objectSpread(_objectSpread({}, options), {}, {\n    target: target\n  }));\n};\n\nvar openApp = function openApp(name, options) {\n  if (typeof name !== 'string') {\n    throw new TypeError('Expected a `name`');\n  }\n\n  var _ref5 = options || {},\n      _ref5$arguments = _ref5.arguments,\n      appArguments = _ref5$arguments === void 0 ? [] : _ref5$arguments;\n\n  if (appArguments !== undefined && appArguments !== null && !Array.isArray(appArguments)) {\n    throw new TypeError('Expected `appArguments` as Array type');\n  }\n\n  return baseOpen(_objectSpread(_objectSpread({}, options), {}, {\n    app: {\n      name: name,\n      arguments: appArguments\n    }\n  }));\n};\n\nfunction detectArchBinary(binary) {\n  if (typeof binary === 'string' || Array.isArray(binary)) {\n    return binary;\n  }\n\n  var archBinary = binary[arch];\n\n  if (!archBinary) {\n    throw new Error(\"\".concat(arch, \" is not supported\"));\n  }\n\n  return archBinary;\n}\n\nfunction detectPlatformBinary(_ref6, _ref7) {\n  var platformBinary = _ref6[platform];\n  var wsl = _ref7.wsl;\n\n  if (wsl && isWsl) {\n    return detectArchBinary(wsl);\n  }\n\n  if (!platformBinary) {\n    throw new Error(\"\".concat(platform, \" is not supported\"));\n  }\n\n  return detectArchBinary(platformBinary);\n}\n\nvar apps = {};\ndefineLazyProperty(apps, 'chrome', function () {\n  return detectPlatformBinary({\n    darwin: 'google chrome',\n    win32: 'chrome',\n    linux: ['google-chrome', 'google-chrome-stable', 'chromium']\n  }, {\n    wsl: {\n      ia32: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n      x64: ['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe', '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe']\n    }\n  });\n});\ndefineLazyProperty(apps, 'firefox', function () {\n  return detectPlatformBinary({\n    darwin: 'firefox',\n    win32: 'C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe',\n    linux: 'firefox'\n  }, {\n    wsl: '/mnt/c/Program Files/Mozilla Firefox/firefox.exe'\n  });\n});\ndefineLazyProperty(apps, 'edge', function () {\n  return detectPlatformBinary({\n    darwin: 'microsoft edge',\n    win32: 'msedge',\n    linux: ['microsoft-edge', 'microsoft-edge-dev']\n  }, {\n    wsl: '/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe'\n  });\n});\nopen.apps = apps;\nopen.openApp = openApp;\nmodule.exports = open;","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/open/index.js"],"names":["path","require","childProcess","fs","promises","fsConstants","constants","isWsl","isDocker","defineLazyProperty","localXdgOpenPath","join","__dirname","process","platform","arch","getWslDrivesMountPoint","defaultMountPoint","mountPoint","configFilePath","isConfigFileExists","access","F_OK","readFile","encoding","configContent","configMountPoint","exec","groups","trim","endsWith","pTryEach","array","mapper","item","latestError","baseOpen","options","wait","background","newInstance","allowNonzeroExitCode","Array","isArray","app","singleApp","name","arguments","appArguments","appName","cliArguments","childProcessOptions","command","push","env","SYSTEMROOT","windowsVerbatimArguments","encodedArguments","target","unshift","length","map","arg","Buffer","from","toString","isBundled","exeLocalXdgOpen","X_OK","useSystemXdgOpen","versions","electron","stdio","detached","subprocess","spawn","Promise","resolve","reject","once","exitCode","Error","unref","open","TypeError","openApp","undefined","detectArchBinary","binary","archBinary","detectPlatformBinary","platformBinary","wsl","apps","darwin","win32","linux","ia32","x64","module","exports"],"mappings":"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","sourcesContent":["const path = require('path');\nconst childProcess = require('child_process');\nconst {promises: fs, constants: fsConstants} = require('fs');\nconst isWsl = require('is-wsl');\nconst isDocker = require('is-docker');\nconst defineLazyProperty = require('define-lazy-prop');\n\n// Path to included `xdg-open`.\nconst localXdgOpenPath = path.join(__dirname, 'xdg-open');\n\nconst {platform, arch} = process;\n\n/**\nGet the mount point for fixed drives in WSL.\n\n@inner\n@returns {string} The mount point.\n*/\nconst getWslDrivesMountPoint = (() => {\n\t// Default value for \"root\" param\n\t// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config\n\tconst defaultMountPoint = '/mnt/';\n\n\tlet mountPoint;\n\n\treturn async function () {\n\t\tif (mountPoint) {\n\t\t\t// Return memoized mount point value\n\t\t\treturn mountPoint;\n\t\t}\n\n\t\tconst configFilePath = '/etc/wsl.conf';\n\n\t\tlet isConfigFileExists = false;\n\t\ttry {\n\t\t\tawait fs.access(configFilePath, fsConstants.F_OK);\n\t\t\tisConfigFileExists = true;\n\t\t} catch {}\n\n\t\tif (!isConfigFileExists) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tconst configContent = await fs.readFile(configFilePath, {encoding: 'utf8'});\n\t\tconst configMountPoint = /(?<!#.*)root\\s*=\\s*(?<mountPoint>.*)/g.exec(configContent);\n\n\t\tif (!configMountPoint) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tmountPoint = configMountPoint.groups.mountPoint.trim();\n\t\tmountPoint = mountPoint.endsWith('/') ? mountPoint : `${mountPoint}/`;\n\n\t\treturn mountPoint;\n\t};\n})();\n\nconst pTryEach = async (array, mapper) => {\n\tlet latestError;\n\n\tfor (const item of array) {\n\t\ttry {\n\t\t\treturn await mapper(item); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tlatestError = error;\n\t\t}\n\t}\n\n\tthrow latestError;\n};\n\nconst baseOpen = async options => {\n\toptions = {\n\t\twait: false,\n\t\tbackground: false,\n\t\tnewInstance: false,\n\t\tallowNonzeroExitCode: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(options.app)) {\n\t\treturn pTryEach(options.app, singleApp => baseOpen({\n\t\t\t...options,\n\t\t\tapp: singleApp\n\t\t}));\n\t}\n\n\tlet {name: app, arguments: appArguments = []} = options.app || {};\n\tappArguments = [...appArguments];\n\n\tif (Array.isArray(app)) {\n\t\treturn pTryEach(app, appName => baseOpen({\n\t\t\t...options,\n\t\t\tapp: {\n\t\t\t\tname: appName,\n\t\t\t\targuments: appArguments\n\t\t\t}\n\t\t}));\n\t}\n\n\tlet command;\n\tconst cliArguments = [];\n\tconst childProcessOptions = {};\n\n\tif (platform === 'darwin') {\n\t\tcommand = 'open';\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('--wait-apps');\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tcliArguments.push('--background');\n\t\t}\n\n\t\tif (options.newInstance) {\n\t\t\tcliArguments.push('--new');\n\t\t}\n\n\t\tif (app) {\n\t\t\tcliArguments.push('-a', app);\n\t\t}\n\t} else if (platform === 'win32' || (isWsl && !isDocker())) {\n\t\tconst mountPoint = await getWslDrivesMountPoint();\n\n\t\tcommand = isWsl ?\n\t\t\t`${mountPoint}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe` :\n\t\t\t`${process.env.SYSTEMROOT}\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell`;\n\n\t\tcliArguments.push(\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'â€“ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand'\n\t\t);\n\n\t\tif (!isWsl) {\n\t\t\tchildProcessOptions.windowsVerbatimArguments = true;\n\t\t}\n\n\t\tconst encodedArguments = ['Start'];\n\n\t\tif (options.wait) {\n\t\t\tencodedArguments.push('-Wait');\n\t\t}\n\n\t\tif (app) {\n\t\t\t// Double quote with double quotes to ensure the inner quotes are passed through.\n\t\t\t// Inner quotes are delimited for PowerShell interpretation with backticks.\n\t\t\tencodedArguments.push(`\"\\`\"${app}\\`\"\"`, '-ArgumentList');\n\t\t\tif (options.target) {\n\t\t\t\tappArguments.unshift(options.target);\n\t\t\t}\n\t\t} else if (options.target) {\n\t\t\tencodedArguments.push(`\"${options.target}\"`);\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tappArguments = appArguments.map(arg => `\"\\`\"${arg}\\`\"\"`);\n\t\t\tencodedArguments.push(appArguments.join(','));\n\t\t}\n\n\t\t// Using Base64-encoded command, accepted by PowerShell, to allow special characters.\n\t\toptions.target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');\n\t} else {\n\t\tif (app) {\n\t\t\tcommand = app;\n\t\t} else {\n\t\t\t// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n\t\t\tconst isBundled = !__dirname || __dirname === '/';\n\n\t\t\t// Check if local `xdg-open` exists and is executable.\n\t\t\tlet exeLocalXdgOpen = false;\n\t\t\ttry {\n\t\t\t\tawait fs.access(localXdgOpenPath, fsConstants.X_OK);\n\t\t\t\texeLocalXdgOpen = true;\n\t\t\t} catch {}\n\n\t\t\tconst useSystemXdgOpen = process.versions.electron ||\n\t\t\t\tplatform === 'android' || isBundled || !exeLocalXdgOpen;\n\t\t\tcommand = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\n\t\tif (!options.wait) {\n\t\t\t// `xdg-open` will block the process unless stdio is ignored\n\t\t\t// and it's detached from the parent even if it's unref'd.\n\t\t\tchildProcessOptions.stdio = 'ignore';\n\t\t\tchildProcessOptions.detached = true;\n\t\t}\n\t}\n\n\tif (options.target) {\n\t\tcliArguments.push(options.target);\n\t}\n\n\tif (platform === 'darwin' && appArguments.length > 0) {\n\t\tcliArguments.push('--args', ...appArguments);\n\t}\n\n\tconst subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n\tif (options.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsubprocess.once('error', reject);\n\n\t\t\tsubprocess.once('close', exitCode => {\n\t\t\t\tif (options.allowNonzeroExitCode && exitCode > 0) {\n\t\t\t\t\treject(new Error(`Exited with code ${exitCode}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(subprocess);\n\t\t\t});\n\t\t});\n\t}\n\n\tsubprocess.unref();\n\n\treturn subprocess;\n};\n\nconst open = (target, options) => {\n\tif (typeof target !== 'string') {\n\t\tthrow new TypeError('Expected a `target`');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\ttarget\n\t});\n};\n\nconst openApp = (name, options) => {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError('Expected a `name`');\n\t}\n\n\tconst {arguments: appArguments = []} = options || {};\n\tif (appArguments !== undefined && appArguments !== null && !Array.isArray(appArguments)) {\n\t\tthrow new TypeError('Expected `appArguments` as Array type');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\tapp: {\n\t\t\tname,\n\t\t\targuments: appArguments\n\t\t}\n\t});\n};\n\nfunction detectArchBinary(binary) {\n\tif (typeof binary === 'string' || Array.isArray(binary)) {\n\t\treturn binary;\n\t}\n\n\tconst {[arch]: archBinary} = binary;\n\n\tif (!archBinary) {\n\t\tthrow new Error(`${arch} is not supported`);\n\t}\n\n\treturn archBinary;\n}\n\nfunction detectPlatformBinary({[platform]: platformBinary}, {wsl}) {\n\tif (wsl && isWsl) {\n\t\treturn detectArchBinary(wsl);\n\t}\n\n\tif (!platformBinary) {\n\t\tthrow new Error(`${platform} is not supported`);\n\t}\n\n\treturn detectArchBinary(platformBinary);\n}\n\nconst apps = {};\n\ndefineLazyProperty(apps, 'chrome', () => detectPlatformBinary({\n\tdarwin: 'google chrome',\n\twin32: 'chrome',\n\tlinux: ['google-chrome', 'google-chrome-stable', 'chromium']\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n\t\tx64: ['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe', '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe']\n\t}\n}));\n\ndefineLazyProperty(apps, 'firefox', () => detectPlatformBinary({\n\tdarwin: 'firefox',\n\twin32: 'C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe',\n\tlinux: 'firefox'\n}, {\n\twsl: '/mnt/c/Program Files/Mozilla Firefox/firefox.exe'\n}));\n\ndefineLazyProperty(apps, 'edge', () => detectPlatformBinary({\n\tdarwin: 'microsoft edge',\n\twin32: 'msedge',\n\tlinux: ['microsoft-edge', 'microsoft-edge-dev']\n}, {\n\twsl: '/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe'\n}));\n\nopen.apps = apps;\nopen.openApp = openApp;\n\nmodule.exports = open;\n"]},"metadata":{},"sourceType":"script"}