{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17;\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar dataType_1 = require(\"../../compile/validate/dataType\");\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar util_1 = require(\"../../compile/util\");\n\nvar equal_1 = require(\"../../runtime/equal\");\n\nvar error = {\n  message: function message(_ref) {\n    var _ref$params = _ref.params,\n        i = _ref$params.i,\n        j = _ref$params.j;\n    return (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"must NOT have duplicate items (items ## \", \" and \", \" are identical)\"])), j, i);\n  },\n  params: function params(_ref2) {\n    var _ref2$params = _ref2.params,\n        i = _ref2$params.i,\n        j = _ref2$params.j;\n    return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{i: \", \", j: \", \"}\"])), i, j);\n  }\n};\nvar def = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n        data = cxt.data,\n        $data = cxt.$data,\n        schema = cxt.schema,\n        parentSchema = cxt.parentSchema,\n        schemaCode = cxt.schemaCode,\n        it = cxt.it;\n    if (!$data && !schema) return;\n    var valid = gen.let(\"valid\");\n    var itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n    cxt.block$data(valid, validateUniqueItems, (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" === false\"])), schemaCode));\n    cxt.ok(valid);\n\n    function validateUniqueItems() {\n      var i = gen.let(\"i\", (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \".length\"])), data));\n      var j = gen.let(\"j\");\n      cxt.setParams({\n        i: i,\n        j: j\n      });\n      gen.assign(valid, true);\n      gen.if((0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" > 1\"])), i), function () {\n        return (canOptimize() ? loopN : loopN2)(i, j);\n      });\n    }\n\n    function canOptimize() {\n      return itemTypes.length > 0 && !itemTypes.some(function (t) {\n        return t === \"object\" || t === \"array\";\n      });\n    }\n\n    function loopN(i, j) {\n      var item = gen.name(\"item\");\n      var wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n      var indices = gen.const(\"indices\", (0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"{}\"]))));\n      gen.for((0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\";\", \"--;\"])), i), function () {\n        gen.let(item, (0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), data, i));\n        gen.if(wrongType, (0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"continue\"]))));\n        if (itemTypes.length > 1) gen.if((0, codegen_1._)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"typeof \", \" == \\\"string\\\"\"])), item), (0, codegen_1._)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \" += \\\"_\\\"\"])), item));\n        gen.if((0, codegen_1._)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"typeof \", \"[\", \"] == \\\"number\\\"\"])), indices, item), function () {\n          gen.assign(j, (0, codegen_1._)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), indices, item));\n          cxt.error();\n          gen.assign(valid, false).break();\n        }).code((0, codegen_1._)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\", \"[\", \"] = \", \"\"])), indices, item, i));\n      });\n    }\n\n    function loopN2(i, j) {\n      var eql = (0, util_1.useFunc)(gen, equal_1.default);\n      var outer = gen.name(\"outer\");\n      gen.label(outer).for((0, codegen_1._)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\";\", \"--;\"])), i), function () {\n        return gen.for((0, codegen_1._)(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\", \" = \", \"; \", \"--;\"])), j, i, j), function () {\n          return gen.if((0, codegen_1._)(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\", \"(\", \"[\", \"], \", \"[\", \"])\"])), eql, data, i, data, j), function () {\n            cxt.error();\n            gen.assign(valid, false).break(outer);\n          });\n        });\n      });\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"mappings":"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","names":["error","message","params","i","j","def","keyword","type","schemaType","$data","code","cxt","gen","data","schema","parentSchema","schemaCode","it","valid","let","itemTypes","items","block$data","validateUniqueItems","ok","setParams","assign","if","canOptimize","loopN","loopN2","length","some","t","item","name","wrongType","opts","strictNumbers","dataType_1","Wrong","indices","const","for","break","eql","equal_1","outer","label","exports"],"sourceRoot":"","sources":["../../../lib/vocabularies/validation/uniqueItems.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}