{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:/DW/wasai-cinema/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar _require = require(\"net\"),\n    isIP = _require.isIP;\n\nvar _require2 = require(\"os\"),\n    release = _require2.release;\n\nvar execa = require(\"execa\");\n\nvar dests = new Set([\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"]);\nvar args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"]\n}; // The IPv4 gateway is in column 3 in Darwin 19 (macOS 10.15 Catalina) and higher,\n// previously it was in column 5\n\nvar v4IfaceColumn = parseInt(release()) >= 19 ? 3 : 5;\n\nvar parse = function parse(stdout, family) {\n  var result;\n  (stdout || \"\").trim().split(\"\\n\").some(function (line) {\n    var results = line.split(/ +/) || [];\n    var target = results[0];\n    var gateway = results[1];\n    var iface = results[family === \"v4\" ? v4IfaceColumn : 3];\n\n    if (dests.has(target) && gateway && isIP(gateway)) {\n      result = {\n        gateway: gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nvar promise = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(family) {\n    var _yield$execa, stdout;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return execa(\"netstat\", args[family]);\n\n          case 2:\n            _yield$execa = _context.sent;\n            stdout = _yield$execa.stdout;\n            return _context.abrupt(\"return\", parse(stdout, family));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function promise(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sync = function sync(family) {\n  var _execa$sync = execa.sync(\"netstat\", args[family]),\n      stdout = _execa$sync.stdout;\n\n  return parse(stdout, family);\n};\n\nmodule.exports.v4 = function () {\n  return promise(\"v4\");\n};\n\nmodule.exports.v6 = function () {\n  return promise(\"v6\");\n};\n\nmodule.exports.v4.sync = function () {\n  return sync(\"v4\");\n};\n\nmodule.exports.v6.sync = function () {\n  return sync(\"v6\");\n};","map":{"version":3,"sources":["E:/DW/wasai-cinema/node_modules/default-gateway/darwin.js"],"names":["require","isIP","release","execa","dests","Set","args","v4","v6","v4IfaceColumn","parseInt","parse","stdout","family","result","trim","split","some","line","results","target","gateway","iface","has","interface","Error","promise","sync","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {isIP} = require(\"net\");\nconst {release} = require(\"os\");\nconst execa = require(\"execa\");\nconst dests = new Set([\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"]);\n\nconst args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"],\n};\n\n// The IPv4 gateway is in column 3 in Darwin 19 (macOS 10.15 Catalina) and higher,\n// previously it was in column 5\nconst v4IfaceColumn = parseInt(release()) >= 19 ? 3 : 5;\n\nconst parse = (stdout, family) => {\n  let result;\n\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const results = line.split(/ +/) || [];\n    const target = results[0];\n    const gateway = results[1];\n    const iface = results[family === \"v4\" ? v4IfaceColumn : 3];\n    if (dests.has(target) && gateway && isIP(gateway)) {\n      result = {gateway, interface: (iface ? iface : null)};\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(\"netstat\", args[family]);\n  return parse(stdout, family);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(\"netstat\", args[family]);\n  return parse(stdout, family);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");\n"]},"metadata":{},"sourceType":"script"}